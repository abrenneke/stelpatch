<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1478" onload="init(evt)" viewBox="0 0 1200 1478" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1478" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1461.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1461.00"> </text><svg id="frames" x="10" width="1180" total_samples="9219"><g><title>msvcrt`_wgetmainargs (1 samples, 0.01%)</title><rect x="0.0108%" y="1253" width="0.0108%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="1"/><text x="0.2608%" y="1263.50"></text></g><g><title>msvcrt`_threadid (1 samples, 0.01%)</title><rect x="0.0108%" y="1237" width="0.0108%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="1"/><text x="0.2608%" y="1247.50"></text></g><g><title>msvcrt`lock (1 samples, 0.01%)</title><rect x="0.0108%" y="1221" width="0.0108%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="1"/><text x="0.2608%" y="1231.50"></text></g><g><title>msvcrt`wfindnexti64 (2 samples, 0.02%)</title><rect x="0.0108%" y="1269" width="0.0217%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="2"/><text x="0.2608%" y="1279.50"></text></g><g><title>msvcrt`write (1 samples, 0.01%)</title><rect x="0.0217%" y="1253" width="0.0108%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="1"/><text x="0.2717%" y="1263.50"></text></g><g><title>msvcrt`setmbcp (1 samples, 0.01%)</title><rect x="0.0217%" y="1237" width="0.0108%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="1"/><text x="0.2717%" y="1247.50"></text></g><g><title>msvcrt`setmbcp (1 samples, 0.01%)</title><rect x="0.0217%" y="1221" width="0.0108%" height="15" fill="rgb(207,160,47)" fg:x="2" fg:w="1"/><text x="0.2717%" y="1231.50"></text></g><g><title>msvcrt`write (1 samples, 0.01%)</title><rect x="0.0217%" y="1205" width="0.0108%" height="15" fill="rgb(228,23,34)" fg:x="2" fg:w="1"/><text x="0.2717%" y="1215.50"></text></g><g><title>msvcrt`_crtLCMapStringA (1 samples, 0.01%)</title><rect x="0.0217%" y="1189" width="0.0108%" height="15" fill="rgb(218,30,26)" fg:x="2" fg:w="1"/><text x="0.2717%" y="1199.50"></text></g><g><title>msvcrt`_crtGetStringTypeW (1 samples, 0.01%)</title><rect x="0.0217%" y="1173" width="0.0108%" height="15" fill="rgb(220,122,19)" fg:x="2" fg:w="1"/><text x="0.2717%" y="1183.50"></text></g><g><title>KERNELBASE`LCMapStringW (1 samples, 0.01%)</title><rect x="0.0217%" y="1157" width="0.0108%" height="15" fill="rgb(250,228,42)" fg:x="2" fg:w="1"/><text x="0.2717%" y="1167.50"></text></g><g><title>KERNELBASE`LCMapStringEx (1 samples, 0.01%)</title><rect x="0.0217%" y="1141" width="0.0108%" height="15" fill="rgb(240,193,28)" fg:x="2" fg:w="1"/><text x="0.2717%" y="1151.50"></text></g><g><title>KERNELBASE`GetApplicationUserModelIdFromToken (1 samples, 0.01%)</title><rect x="0.0217%" y="1125" width="0.0108%" height="15" fill="rgb(216,20,37)" fg:x="2" fg:w="1"/><text x="0.2717%" y="1135.50"></text></g><g><title>KERNELBASE`GetApplicationUserModelIdFromToken (1 samples, 0.01%)</title><rect x="0.0217%" y="1109" width="0.0108%" height="15" fill="rgb(206,188,39)" fg:x="2" fg:w="1"/><text x="0.2717%" y="1119.50"></text></g><g><title>ntdll`NtOpenKey (1 samples, 0.01%)</title><rect x="0.0217%" y="1093" width="0.0108%" height="15" fill="rgb(217,207,13)" fg:x="2" fg:w="1"/><text x="0.2717%" y="1103.50"></text></g><g><title>sechost`I_ScIsSecurityProcess (1 samples, 0.01%)</title><rect x="0.0325%" y="1269" width="0.0108%" height="15" fill="rgb(231,73,38)" fg:x="3" fg:w="1"/><text x="0.2825%" y="1279.50"></text></g><g><title>sechost`I_ScIsSecurityProcess (1 samples, 0.01%)</title><rect x="0.0325%" y="1253" width="0.0108%" height="15" fill="rgb(225,20,46)" fg:x="3" fg:w="1"/><text x="0.2825%" y="1263.50"></text></g><g><title>sechost`LsaLookupOpenLocalPolicy (1 samples, 0.01%)</title><rect x="0.0325%" y="1237" width="0.0108%" height="15" fill="rgb(210,31,41)" fg:x="3" fg:w="1"/><text x="0.2825%" y="1247.50"></text></g><g><title>sechost`LsaLookupOpenLocalPolicy (1 samples, 0.01%)</title><rect x="0.0325%" y="1221" width="0.0108%" height="15" fill="rgb(221,200,47)" fg:x="3" fg:w="1"/><text x="0.2825%" y="1231.50"></text></g><g><title>sechost`ReleaseIdentityProviderEnumContext (1 samples, 0.01%)</title><rect x="0.0325%" y="1205" width="0.0108%" height="15" fill="rgb(226,26,5)" fg:x="3" fg:w="1"/><text x="0.2825%" y="1215.50"></text></g><g><title>ntdll`EtwEventSetInformation (1 samples, 0.01%)</title><rect x="0.0325%" y="1189" width="0.0108%" height="15" fill="rgb(249,33,26)" fg:x="3" fg:w="1"/><text x="0.2825%" y="1199.50"></text></g><g><title>ntdll`EtwEventSetInformation (1 samples, 0.01%)</title><rect x="0.0325%" y="1173" width="0.0108%" height="15" fill="rgb(235,183,28)" fg:x="3" fg:w="1"/><text x="0.2825%" y="1183.50"></text></g><g><title>ntdll`ZwTraceControl (1 samples, 0.01%)</title><rect x="0.0325%" y="1157" width="0.0108%" height="15" fill="rgb(221,5,38)" fg:x="3" fg:w="1"/><text x="0.2825%" y="1167.50"></text></g><g><title>ntdll`LdrGetProcedureAddressEx (4 samples, 0.04%)</title><rect x="0.0108%" y="1301" width="0.0434%" height="15" fill="rgb(247,18,42)" fg:x="1" fg:w="4"/><text x="0.2608%" y="1311.50"></text></g><g><title>ntdll`RtlActivateActivationContextUnsafeFast (4 samples, 0.04%)</title><rect x="0.0108%" y="1285" width="0.0434%" height="15" fill="rgb(241,131,45)" fg:x="1" fg:w="4"/><text x="0.2608%" y="1295.50"></text></g><g><title>ucrtbase`msize (1 samples, 0.01%)</title><rect x="0.0434%" y="1269" width="0.0108%" height="15" fill="rgb(249,31,29)" fg:x="4" fg:w="1"/><text x="0.2934%" y="1279.50"></text></g><g><title>ucrtbase`o__recalloc (1 samples, 0.01%)</title><rect x="0.0434%" y="1253" width="0.0108%" height="15" fill="rgb(225,111,53)" fg:x="4" fg:w="1"/><text x="0.2934%" y="1263.50"></text></g><g><title>ucrtbase`wcsstr (1 samples, 0.01%)</title><rect x="0.0434%" y="1237" width="0.0108%" height="15" fill="rgb(238,160,17)" fg:x="4" fg:w="1"/><text x="0.2934%" y="1247.50"></text></g><g><title>ucrtbase`wcsstr (1 samples, 0.01%)</title><rect x="0.0434%" y="1221" width="0.0108%" height="15" fill="rgb(214,148,48)" fg:x="4" fg:w="1"/><text x="0.2934%" y="1231.50"></text></g><g><title>ADVAPI32`LsaSetForestTrustInformation2 (1 samples, 0.01%)</title><rect x="0.0542%" y="1269" width="0.0108%" height="15" fill="rgb(232,36,49)" fg:x="5" fg:w="1"/><text x="0.3042%" y="1279.50"></text></g><g><title>`0x7FF9ED7D1090 (1 samples, 0.01%)</title><rect x="0.0542%" y="1253" width="0.0108%" height="15" fill="rgb(209,103,24)" fg:x="5" fg:w="1"/><text x="0.3042%" y="1263.50"></text></g><g><title>ntdll`EtwEventSetInformation (1 samples, 0.01%)</title><rect x="0.0542%" y="1237" width="0.0108%" height="15" fill="rgb(229,88,8)" fg:x="5" fg:w="1"/><text x="0.3042%" y="1247.50"></text></g><g><title>ntdll`EtwEventSetInformation (1 samples, 0.01%)</title><rect x="0.0542%" y="1221" width="0.0108%" height="15" fill="rgb(213,181,19)" fg:x="5" fg:w="1"/><text x="0.3042%" y="1231.50"></text></g><g><title>ntdll`ZwTraceControl (1 samples, 0.01%)</title><rect x="0.0542%" y="1205" width="0.0108%" height="15" fill="rgb(254,191,54)" fg:x="5" fg:w="1"/><text x="0.3042%" y="1215.50"></text></g><g><title>ADVAPI32`SaferComputeTokenFromLevel (2 samples, 0.02%)</title><rect x="0.0542%" y="1285" width="0.0217%" height="15" fill="rgb(241,83,37)" fg:x="5" fg:w="2"/><text x="0.3042%" y="1295.50"></text></g><g><title>ntdll`RtlInitializeCriticalSection (1 samples, 0.01%)</title><rect x="0.0651%" y="1269" width="0.0108%" height="15" fill="rgb(233,36,39)" fg:x="6" fg:w="1"/><text x="0.3151%" y="1279.50"></text></g><g><title>ntdll`LdrGetProcedureAddressEx (7 samples, 0.08%)</title><rect x="0.0108%" y="1349" width="0.0759%" height="15" fill="rgb(226,3,54)" fg:x="1" fg:w="7"/><text x="0.2608%" y="1359.50"></text></g><g><title>ntdll`LdrGetProcedureAddressEx (7 samples, 0.08%)</title><rect x="0.0108%" y="1333" width="0.0759%" height="15" fill="rgb(245,192,40)" fg:x="1" fg:w="7"/><text x="0.2608%" y="1343.50"></text></g><g><title>ntdll`LdrGetProcedureAddressEx (7 samples, 0.08%)</title><rect x="0.0108%" y="1317" width="0.0759%" height="15" fill="rgb(238,167,29)" fg:x="1" fg:w="7"/><text x="0.2608%" y="1327.50"></text></g><g><title>ntdll`RtlActivateActivationContextUnsafeFast (3 samples, 0.03%)</title><rect x="0.0542%" y="1301" width="0.0325%" height="15" fill="rgb(232,182,51)" fg:x="5" fg:w="3"/><text x="0.3042%" y="1311.50"></text></g><g><title>CRYPTBASE`SystemFunction002 (1 samples, 0.01%)</title><rect x="0.0759%" y="1285" width="0.0108%" height="15" fill="rgb(231,60,39)" fg:x="7" fg:w="1"/><text x="0.3259%" y="1295.50"></text></g><g><title>CRYPTBASE`SystemFunction002 (1 samples, 0.01%)</title><rect x="0.0759%" y="1269" width="0.0108%" height="15" fill="rgb(208,69,12)" fg:x="7" fg:w="1"/><text x="0.3259%" y="1279.50"></text></g><g><title>ntdll`ZwOpenFile (1 samples, 0.01%)</title><rect x="0.0759%" y="1253" width="0.0108%" height="15" fill="rgb(235,93,37)" fg:x="7" fg:w="1"/><text x="0.3259%" y="1263.50"></text></g><g><title>ntdll`LdrInitShimEngineDynamic (1 samples, 0.01%)</title><rect x="0.0868%" y="1333" width="0.0108%" height="15" fill="rgb(213,116,39)" fg:x="8" fg:w="1"/><text x="0.3368%" y="1343.50"></text></g><g><title>ntdll`NtOpenKey (1 samples, 0.01%)</title><rect x="0.0868%" y="1317" width="0.0108%" height="15" fill="rgb(222,207,29)" fg:x="8" fg:w="1"/><text x="0.3368%" y="1327.50"></text></g><g><title>ntdll`LdrInitShimEngineDynamic (2 samples, 0.02%)</title><rect x="0.0868%" y="1349" width="0.0217%" height="15" fill="rgb(206,96,30)" fg:x="8" fg:w="2"/><text x="0.3368%" y="1359.50"></text></g><g><title>ntdll`RtlCreateHeap (1 samples, 0.01%)</title><rect x="0.0976%" y="1333" width="0.0108%" height="15" fill="rgb(218,138,4)" fg:x="9" fg:w="1"/><text x="0.3476%" y="1343.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="0.0976%" y="1317" width="0.0108%" height="15" fill="rgb(250,191,14)" fg:x="9" fg:w="1"/><text x="0.3476%" y="1327.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="0.0976%" y="1301" width="0.0108%" height="15" fill="rgb(239,60,40)" fg:x="9" fg:w="1"/><text x="0.3476%" y="1311.50"></text></g><g><title>ntdll`RtlReleaseActivationContext (1 samples, 0.01%)</title><rect x="0.1085%" y="1221" width="0.0108%" height="15" fill="rgb(206,27,48)" fg:x="10" fg:w="1"/><text x="0.3585%" y="1231.50"></text></g><g><title>ntdll`RtlIsCriticalSectionLockedByThread (1 samples, 0.01%)</title><rect x="0.1085%" y="1205" width="0.0108%" height="15" fill="rgb(225,35,8)" fg:x="10" fg:w="1"/><text x="0.3585%" y="1215.50"></text></g><g><title>ntdll`ZwOpenSection (1 samples, 0.01%)</title><rect x="0.1085%" y="1189" width="0.0108%" height="15" fill="rgb(250,213,24)" fg:x="10" fg:w="1"/><text x="0.3585%" y="1199.50"></text></g><g><title>ntdll`LdrShutdownThread (2 samples, 0.02%)</title><rect x="0.1085%" y="1237" width="0.0217%" height="15" fill="rgb(247,123,22)" fg:x="10" fg:w="2"/><text x="0.3585%" y="1247.50"></text></g><g><title>ntdll`RtlReleaseRelativeName (1 samples, 0.01%)</title><rect x="0.1193%" y="1221" width="0.0108%" height="15" fill="rgb(231,138,38)" fg:x="11" fg:w="1"/><text x="0.3693%" y="1231.50"></text></g><g><title>ntdll`RtlFindCharInUnicodeString (1 samples, 0.01%)</title><rect x="0.1193%" y="1205" width="0.0108%" height="15" fill="rgb(231,145,46)" fg:x="11" fg:w="1"/><text x="0.3693%" y="1215.50"></text></g><g><title>ntdll`LdrUnloadAlternateResourceModuleEx (3 samples, 0.03%)</title><rect x="0.1085%" y="1301" width="0.0325%" height="15" fill="rgb(251,118,11)" fg:x="10" fg:w="3"/><text x="0.3585%" y="1311.50"></text></g><g><title>ntdll`RtlReleaseActivationContext (3 samples, 0.03%)</title><rect x="0.1085%" y="1285" width="0.0325%" height="15" fill="rgb(217,147,25)" fg:x="10" fg:w="3"/><text x="0.3585%" y="1295.50"></text></g><g><title>ntdll`RtlIsCriticalSectionLockedByThread (3 samples, 0.03%)</title><rect x="0.1085%" y="1269" width="0.0325%" height="15" fill="rgb(247,81,37)" fg:x="10" fg:w="3"/><text x="0.3585%" y="1279.50"></text></g><g><title>ntdll`LdrShutdownThread (3 samples, 0.03%)</title><rect x="0.1085%" y="1253" width="0.0325%" height="15" fill="rgb(209,12,38)" fg:x="10" fg:w="3"/><text x="0.3585%" y="1263.50"></text></g><g><title>ntdll`RtlVirtualUnwind (1 samples, 0.01%)</title><rect x="0.1302%" y="1237" width="0.0108%" height="15" fill="rgb(227,1,9)" fg:x="12" fg:w="1"/><text x="0.3802%" y="1247.50"></text></g><g><title>KERNELBASE`GetNamedPipeAttribute (1 samples, 0.01%)</title><rect x="0.1410%" y="1189" width="0.0108%" height="15" fill="rgb(248,47,43)" fg:x="13" fg:w="1"/><text x="0.3910%" y="1199.50"></text></g><g><title>ntdll`EtwEventRegister (1 samples, 0.01%)</title><rect x="0.1410%" y="1173" width="0.0108%" height="15" fill="rgb(221,10,30)" fg:x="13" fg:w="1"/><text x="0.3910%" y="1183.50"></text></g><g><title>ntdll`EtwNotificationRegister (1 samples, 0.01%)</title><rect x="0.1410%" y="1157" width="0.0108%" height="15" fill="rgb(210,229,1)" fg:x="13" fg:w="1"/><text x="0.3910%" y="1167.50"></text></g><g><title>ntdll`EtwEventRegister (1 samples, 0.01%)</title><rect x="0.1410%" y="1141" width="0.0108%" height="15" fill="rgb(222,148,37)" fg:x="13" fg:w="1"/><text x="0.3910%" y="1151.50"></text></g><g><title>ntdll`ZwTraceControl (1 samples, 0.01%)</title><rect x="0.1410%" y="1125" width="0.0108%" height="15" fill="rgb(234,67,33)" fg:x="13" fg:w="1"/><text x="0.3910%" y="1135.50"></text></g><g><title>ntdll`EtwEventRegister (1 samples, 0.01%)</title><rect x="0.1519%" y="1173" width="0.0108%" height="15" fill="rgb(247,98,35)" fg:x="14" fg:w="1"/><text x="0.4019%" y="1183.50"></text></g><g><title>ntdll`EtwNotificationRegister (1 samples, 0.01%)</title><rect x="0.1519%" y="1157" width="0.0108%" height="15" fill="rgb(247,138,52)" fg:x="14" fg:w="1"/><text x="0.4019%" y="1167.50"></text></g><g><title>ntdll`EtwEventRegister (1 samples, 0.01%)</title><rect x="0.1519%" y="1141" width="0.0108%" height="15" fill="rgb(213,79,30)" fg:x="14" fg:w="1"/><text x="0.4019%" y="1151.50"></text></g><g><title>ntdll`ZwTraceControl (1 samples, 0.01%)</title><rect x="0.1519%" y="1125" width="0.0108%" height="15" fill="rgb(246,177,23)" fg:x="14" fg:w="1"/><text x="0.4019%" y="1135.50"></text></g><g><title>KERNELBASE`PackageIdFromFullName (2 samples, 0.02%)</title><rect x="0.1519%" y="1189" width="0.0217%" height="15" fill="rgb(230,62,27)" fg:x="14" fg:w="2"/><text x="0.4019%" y="1199.50"></text></g><g><title>ntdll`EtwEventSetInformation (1 samples, 0.01%)</title><rect x="0.1627%" y="1173" width="0.0108%" height="15" fill="rgb(216,154,8)" fg:x="15" fg:w="1"/><text x="0.4127%" y="1183.50"></text></g><g><title>ntdll`EtwEventSetInformation (1 samples, 0.01%)</title><rect x="0.1627%" y="1157" width="0.0108%" height="15" fill="rgb(244,35,45)" fg:x="15" fg:w="1"/><text x="0.4127%" y="1167.50"></text></g><g><title>ntdll`ZwTraceControl (1 samples, 0.01%)</title><rect x="0.1627%" y="1141" width="0.0108%" height="15" fill="rgb(251,115,12)" fg:x="15" fg:w="1"/><text x="0.4127%" y="1151.50"></text></g><g><title>KERNELBASE`RegOpenCurrentUser (1 samples, 0.01%)</title><rect x="0.1736%" y="1189" width="0.0108%" height="15" fill="rgb(240,54,50)" fg:x="16" fg:w="1"/><text x="0.4236%" y="1199.50"></text></g><g><title>KERNELBASE`RegOpenCurrentUser (1 samples, 0.01%)</title><rect x="0.1736%" y="1173" width="0.0108%" height="15" fill="rgb(233,84,52)" fg:x="16" fg:w="1"/><text x="0.4236%" y="1183.50"></text></g><g><title>ntdll`vsnwprintf (1 samples, 0.01%)</title><rect x="0.1736%" y="1157" width="0.0108%" height="15" fill="rgb(207,117,47)" fg:x="16" fg:w="1"/><text x="0.4236%" y="1167.50"></text></g><g><title>ntdll`vsnwprintf (1 samples, 0.01%)</title><rect x="0.1736%" y="1141" width="0.0108%" height="15" fill="rgb(249,43,39)" fg:x="16" fg:w="1"/><text x="0.4236%" y="1151.50"></text></g><g><title>ntdll`wcstombs (1 samples, 0.01%)</title><rect x="0.1736%" y="1125" width="0.0108%" height="15" fill="rgb(209,38,44)" fg:x="16" fg:w="1"/><text x="0.4236%" y="1135.50"></text></g><g><title>KERNELBASE`ReadStateAtomValue (5 samples, 0.05%)</title><rect x="0.1410%" y="1205" width="0.0542%" height="15" fill="rgb(236,212,23)" fg:x="13" fg:w="5"/><text x="0.3910%" y="1215.50"></text></g><g><title>KERNELBASE`WriteConsoleW (1 samples, 0.01%)</title><rect x="0.1844%" y="1189" width="0.0108%" height="15" fill="rgb(242,79,21)" fg:x="17" fg:w="1"/><text x="0.4344%" y="1199.50"></text></g><g><title>KERNELBASE`WriteConsoleW (1 samples, 0.01%)</title><rect x="0.1844%" y="1173" width="0.0108%" height="15" fill="rgb(211,96,35)" fg:x="17" fg:w="1"/><text x="0.4344%" y="1183.50"></text></g><g><title>ntdll`LdrGetProcedureAddressEx (6 samples, 0.07%)</title><rect x="0.1410%" y="1253" width="0.0651%" height="15" fill="rgb(253,215,40)" fg:x="13" fg:w="6"/><text x="0.3910%" y="1263.50"></text></g><g><title>ntdll`RtlActivateActivationContextUnsafeFast (6 samples, 0.07%)</title><rect x="0.1410%" y="1237" width="0.0651%" height="15" fill="rgb(211,81,21)" fg:x="13" fg:w="6"/><text x="0.3910%" y="1247.50"></text></g><g><title>KERNELBASE`ReadStateAtomValue (6 samples, 0.07%)</title><rect x="0.1410%" y="1221" width="0.0651%" height="15" fill="rgb(208,190,38)" fg:x="13" fg:w="6"/><text x="0.3910%" y="1231.50"></text></g><g><title>KERNELBASE`time (1 samples, 0.01%)</title><rect x="0.1952%" y="1205" width="0.0108%" height="15" fill="rgb(235,213,38)" fg:x="18" fg:w="1"/><text x="0.4452%" y="1215.50"></text></g><g><title>KERNELBASE`time (1 samples, 0.01%)</title><rect x="0.1952%" y="1189" width="0.0108%" height="15" fill="rgb(237,122,38)" fg:x="18" fg:w="1"/><text x="0.4452%" y="1199.50"></text></g><g><title>KERNELBASE`time (1 samples, 0.01%)</title><rect x="0.1952%" y="1173" width="0.0108%" height="15" fill="rgb(244,218,35)" fg:x="18" fg:w="1"/><text x="0.4452%" y="1183.50"></text></g><g><title>KERNELBASE`time (1 samples, 0.01%)</title><rect x="0.1952%" y="1157" width="0.0108%" height="15" fill="rgb(240,68,47)" fg:x="18" fg:w="1"/><text x="0.4452%" y="1167.50"></text></g><g><title>KERNELBASE`CreateMutexExW (1 samples, 0.01%)</title><rect x="0.1952%" y="1141" width="0.0108%" height="15" fill="rgb(210,16,53)" fg:x="18" fg:w="1"/><text x="0.4452%" y="1151.50"></text></g><g><title>ntdll`NtCreateMutant (1 samples, 0.01%)</title><rect x="0.1952%" y="1125" width="0.0108%" height="15" fill="rgb(235,124,12)" fg:x="18" fg:w="1"/><text x="0.4452%" y="1135.50"></text></g><g><title>ntdll`LdrLoadDll (11 samples, 0.12%)</title><rect x="0.1085%" y="1349" width="0.1193%" height="15" fill="rgb(224,169,11)" fg:x="10" fg:w="11"/><text x="0.3585%" y="1359.50"></text></g><g><title>ntdll`RtlDosPathNameToNtPathName_U (11 samples, 0.12%)</title><rect x="0.1085%" y="1333" width="0.1193%" height="15" fill="rgb(250,166,2)" fg:x="10" fg:w="11"/><text x="0.3585%" y="1343.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (11 samples, 0.12%)</title><rect x="0.1085%" y="1317" width="0.1193%" height="15" fill="rgb(242,216,29)" fg:x="10" fg:w="11"/><text x="0.3585%" y="1327.50"></text></g><g><title>ntdll`RtlSwitchedVVI (8 samples, 0.09%)</title><rect x="0.1410%" y="1301" width="0.0868%" height="15" fill="rgb(230,116,27)" fg:x="13" fg:w="8"/><text x="0.3910%" y="1311.50"></text></g><g><title>ntdll`LdrGetProcedureAddressEx (8 samples, 0.09%)</title><rect x="0.1410%" y="1285" width="0.0868%" height="15" fill="rgb(228,99,48)" fg:x="13" fg:w="8"/><text x="0.3910%" y="1295.50"></text></g><g><title>ntdll`LdrGetProcedureAddressEx (8 samples, 0.09%)</title><rect x="0.1410%" y="1269" width="0.0868%" height="15" fill="rgb(253,11,6)" fg:x="13" fg:w="8"/><text x="0.3910%" y="1279.50"></text></g><g><title>ntdll`RtlActivateActivationContextUnsafeFast (2 samples, 0.02%)</title><rect x="0.2061%" y="1253" width="0.0217%" height="15" fill="rgb(247,143,39)" fg:x="19" fg:w="2"/><text x="0.4561%" y="1263.50"></text></g><g><title>KERNEL32`BaseThreadInitThunk (2 samples, 0.02%)</title><rect x="0.2061%" y="1237" width="0.0217%" height="15" fill="rgb(236,97,10)" fg:x="19" fg:w="2"/><text x="0.4561%" y="1247.50"></text></g><g><title>KERNEL32`CreateToolhelp32Snapshot (2 samples, 0.02%)</title><rect x="0.2061%" y="1221" width="0.0217%" height="15" fill="rgb(233,208,19)" fg:x="19" fg:w="2"/><text x="0.4561%" y="1231.50"></text></g><g><title>ntdll`EtwEventSetInformation (1 samples, 0.01%)</title><rect x="0.2169%" y="1205" width="0.0108%" height="15" fill="rgb(216,164,2)" fg:x="20" fg:w="1"/><text x="0.4669%" y="1215.50"></text></g><g><title>ntdll`EtwEventSetInformation (1 samples, 0.01%)</title><rect x="0.2169%" y="1189" width="0.0108%" height="15" fill="rgb(220,129,5)" fg:x="20" fg:w="1"/><text x="0.4669%" y="1199.50"></text></g><g><title>ntdll`ZwTraceControl (1 samples, 0.01%)</title><rect x="0.2169%" y="1173" width="0.0108%" height="15" fill="rgb(242,17,10)" fg:x="20" fg:w="1"/><text x="0.4669%" y="1183.50"></text></g><g><title>ntdll`LdrShutdownThread (1 samples, 0.01%)</title><rect x="0.2386%" y="1205" width="0.0108%" height="15" fill="rgb(242,107,0)" fg:x="22" fg:w="1"/><text x="0.4886%" y="1215.50"></text></g><g><title>ntdll`RtlReleaseActivationContext (1 samples, 0.01%)</title><rect x="0.2386%" y="1189" width="0.0108%" height="15" fill="rgb(251,28,31)" fg:x="22" fg:w="1"/><text x="0.4886%" y="1199.50"></text></g><g><title>ntdll`RtlIsCriticalSectionLockedByThread (1 samples, 0.01%)</title><rect x="0.2386%" y="1173" width="0.0108%" height="15" fill="rgb(233,223,10)" fg:x="22" fg:w="1"/><text x="0.4886%" y="1183.50"></text></g><g><title>ntdll`LdrShutdownThread (1 samples, 0.01%)</title><rect x="0.2386%" y="1157" width="0.0108%" height="15" fill="rgb(215,21,27)" fg:x="22" fg:w="1"/><text x="0.4886%" y="1167.50"></text></g><g><title>ntdll`LdrShutdownThread (1 samples, 0.01%)</title><rect x="0.2386%" y="1141" width="0.0108%" height="15" fill="rgb(232,23,21)" fg:x="22" fg:w="1"/><text x="0.4886%" y="1151.50"></text></g><g><title>ntdll`RtlReleaseRelativeName (1 samples, 0.01%)</title><rect x="0.2386%" y="1125" width="0.0108%" height="15" fill="rgb(244,5,23)" fg:x="22" fg:w="1"/><text x="0.4886%" y="1135.50"></text></g><g><title>ntdll`LdrShutdownThread (3 samples, 0.03%)</title><rect x="0.2278%" y="1221" width="0.0325%" height="15" fill="rgb(226,81,46)" fg:x="21" fg:w="3"/><text x="0.4778%" y="1231.50"></text></g><g><title>ntdll`RtlIsCriticalSectionLockedByThread (1 samples, 0.01%)</title><rect x="0.2495%" y="1205" width="0.0108%" height="15" fill="rgb(247,70,30)" fg:x="23" fg:w="1"/><text x="0.4995%" y="1215.50"></text></g><g><title>ntdll`LdrShutdownThread (5 samples, 0.05%)</title><rect x="0.2278%" y="1269" width="0.0542%" height="15" fill="rgb(212,68,19)" fg:x="21" fg:w="5"/><text x="0.4778%" y="1279.50"></text></g><g><title>ntdll`RtlReleaseActivationContext (5 samples, 0.05%)</title><rect x="0.2278%" y="1253" width="0.0542%" height="15" fill="rgb(240,187,13)" fg:x="21" fg:w="5"/><text x="0.4778%" y="1263.50"></text></g><g><title>ntdll`RtlIsCriticalSectionLockedByThread (5 samples, 0.05%)</title><rect x="0.2278%" y="1237" width="0.0542%" height="15" fill="rgb(223,113,26)" fg:x="21" fg:w="5"/><text x="0.4778%" y="1247.50"></text></g><g><title>ntdll`ZwOpenSection (2 samples, 0.02%)</title><rect x="0.2603%" y="1221" width="0.0217%" height="15" fill="rgb(206,192,2)" fg:x="24" fg:w="2"/><text x="0.5103%" y="1231.50"></text></g><g><title>ntdll`LdrShutdownThread (6 samples, 0.07%)</title><rect x="0.2278%" y="1285" width="0.0651%" height="15" fill="rgb(241,108,4)" fg:x="21" fg:w="6"/><text x="0.4778%" y="1295.50"></text></g><g><title>ntdll`RtlIsCriticalSectionLockedByThread (1 samples, 0.01%)</title><rect x="0.2820%" y="1269" width="0.0108%" height="15" fill="rgb(247,173,49)" fg:x="26" fg:w="1"/><text x="0.5320%" y="1279.50"></text></g><g><title>KERNEL32`BasepReleaseSxsCreateProcessUtilityStruct (1 samples, 0.01%)</title><rect x="0.2820%" y="1253" width="0.0108%" height="15" fill="rgb(224,114,35)" fg:x="26" fg:w="1"/><text x="0.5320%" y="1263.50"></text></g><g><title>ntdll`LdrResFindResourceDirectory (1 samples, 0.01%)</title><rect x="0.2820%" y="1237" width="0.0108%" height="15" fill="rgb(245,159,27)" fg:x="26" fg:w="1"/><text x="0.5320%" y="1247.50"></text></g><g><title>ntdll`RtlIsCriticalSectionLockedByThread (1 samples, 0.01%)</title><rect x="0.2929%" y="1285" width="0.0108%" height="15" fill="rgb(245,172,44)" fg:x="27" fg:w="1"/><text x="0.5429%" y="1295.50"></text></g><g><title>ntdll`ZwMapViewOfSection (1 samples, 0.01%)</title><rect x="0.2929%" y="1269" width="0.0108%" height="15" fill="rgb(236,23,11)" fg:x="27" fg:w="1"/><text x="0.5429%" y="1279.50"></text></g><g><title>ntdll`LdrShutdownThread (8 samples, 0.09%)</title><rect x="0.2278%" y="1349" width="0.0868%" height="15" fill="rgb(205,117,38)" fg:x="21" fg:w="8"/><text x="0.4778%" y="1359.50"></text></g><g><title>ntdll`LdrShutdownThread (8 samples, 0.09%)</title><rect x="0.2278%" y="1333" width="0.0868%" height="15" fill="rgb(237,72,25)" fg:x="21" fg:w="8"/><text x="0.4778%" y="1343.50"></text></g><g><title>ntdll`RtlReleaseActivationContext (8 samples, 0.09%)</title><rect x="0.2278%" y="1317" width="0.0868%" height="15" fill="rgb(244,70,9)" fg:x="21" fg:w="8"/><text x="0.4778%" y="1327.50"></text></g><g><title>ntdll`RtlIsCriticalSectionLockedByThread (8 samples, 0.09%)</title><rect x="0.2278%" y="1301" width="0.0868%" height="15" fill="rgb(217,125,39)" fg:x="21" fg:w="8"/><text x="0.4778%" y="1311.50"></text></g><g><title>ntdll`TpAllocWork (1 samples, 0.01%)</title><rect x="0.3037%" y="1285" width="0.0108%" height="15" fill="rgb(235,36,10)" fg:x="28" fg:w="1"/><text x="0.5537%" y="1295.50"></text></g><g><title>ntdll`RtlIsProcessorFeaturePresent (1 samples, 0.01%)</title><rect x="0.3037%" y="1269" width="0.0108%" height="15" fill="rgb(251,123,47)" fg:x="28" fg:w="1"/><text x="0.5537%" y="1279.50"></text></g><g><title>ntdll`RtlReleaseActivationContext (1 samples, 0.01%)</title><rect x="0.3037%" y="1253" width="0.0108%" height="15" fill="rgb(221,13,13)" fg:x="28" fg:w="1"/><text x="0.5537%" y="1263.50"></text></g><g><title>ntdll`RtlVirtualUnwind (1 samples, 0.01%)</title><rect x="0.3037%" y="1237" width="0.0108%" height="15" fill="rgb(238,131,9)" fg:x="28" fg:w="1"/><text x="0.5537%" y="1247.50"></text></g><g><title>ntdll`RtlInitializeBitMap (1 samples, 0.01%)</title><rect x="0.3146%" y="1349" width="0.0108%" height="15" fill="rgb(211,50,8)" fg:x="29" fg:w="1"/><text x="0.5646%" y="1359.50"></text></g><g><title>ntdll`NtOpenKey (1 samples, 0.01%)</title><rect x="0.3146%" y="1333" width="0.0108%" height="15" fill="rgb(245,182,24)" fg:x="29" fg:w="1"/><text x="0.5646%" y="1343.50"></text></g><g><title>ntdll`RtlInitializeCriticalSection (1 samples, 0.01%)</title><rect x="0.3254%" y="1349" width="0.0108%" height="15" fill="rgb(242,14,37)" fg:x="30" fg:w="1"/><text x="0.5754%" y="1359.50"></text></g><g><title>ntdll`TpSetPoolWorkerThreadIdleTimeout (1 samples, 0.01%)</title><rect x="0.3254%" y="1333" width="0.0108%" height="15" fill="rgb(246,228,12)" fg:x="30" fg:w="1"/><text x="0.5754%" y="1343.50"></text></g><g><title>ntdll`ZwSetInformationWorkerFactory (1 samples, 0.01%)</title><rect x="0.3254%" y="1317" width="0.0108%" height="15" fill="rgb(213,55,15)" fg:x="30" fg:w="1"/><text x="0.5754%" y="1327.50"></text></g><g><title>ntdll`LdrAddRefDll (1 samples, 0.01%)</title><rect x="0.3363%" y="1333" width="0.0108%" height="15" fill="rgb(209,9,3)" fg:x="31" fg:w="1"/><text x="0.5863%" y="1343.50"></text></g><g><title>ntdll`LdrResolveDelayLoadedAPI (1 samples, 0.01%)</title><rect x="0.3363%" y="1317" width="0.0108%" height="15" fill="rgb(230,59,30)" fg:x="31" fg:w="1"/><text x="0.5863%" y="1327.50"></text></g><g><title>ntdll`RtlVirtualUnwind (1 samples, 0.01%)</title><rect x="0.3363%" y="1301" width="0.0108%" height="15" fill="rgb(209,121,21)" fg:x="31" fg:w="1"/><text x="0.5863%" y="1311.50"></text></g><g><title>ntdll`RtlpIsQualifiedLanguage (1 samples, 0.01%)</title><rect x="0.3363%" y="1285" width="0.0108%" height="15" fill="rgb(220,109,13)" fg:x="31" fg:w="1"/><text x="0.5863%" y="1295.50"></text></g><g><title>ntdll`NtProtectVirtualMemory (1 samples, 0.01%)</title><rect x="0.3363%" y="1269" width="0.0108%" height="15" fill="rgb(232,18,1)" fg:x="31" fg:w="1"/><text x="0.5863%" y="1279.50"></text></g><g><title>ntdll`RtlMultiByteToUnicodeSize (2 samples, 0.02%)</title><rect x="0.3363%" y="1349" width="0.0217%" height="15" fill="rgb(215,41,42)" fg:x="31" fg:w="2"/><text x="0.5863%" y="1359.50"></text></g><g><title>ntdll`RtlReleaseRelativeName (1 samples, 0.01%)</title><rect x="0.3471%" y="1333" width="0.0108%" height="15" fill="rgb(224,123,36)" fg:x="32" fg:w="1"/><text x="0.5971%" y="1343.50"></text></g><g><title>ntdll`RtlFindCharInUnicodeString (1 samples, 0.01%)</title><rect x="0.3471%" y="1317" width="0.0108%" height="15" fill="rgb(240,125,3)" fg:x="32" fg:w="1"/><text x="0.5971%" y="1327.50"></text></g><g><title>ntdll`RtlUnlockHeap (1 samples, 0.01%)</title><rect x="0.3580%" y="1349" width="0.0108%" height="15" fill="rgb(205,98,50)" fg:x="33" fg:w="1"/><text x="0.6080%" y="1359.50"></text></g><g><title>ntdll`RtlUnlockHeap (1 samples, 0.01%)</title><rect x="0.3580%" y="1333" width="0.0108%" height="15" fill="rgb(205,185,37)" fg:x="33" fg:w="1"/><text x="0.6080%" y="1343.50"></text></g><g><title>ntdll`ZwOpenFile (1 samples, 0.01%)</title><rect x="0.3580%" y="1317" width="0.0108%" height="15" fill="rgb(238,207,15)" fg:x="33" fg:w="1"/><text x="0.6080%" y="1327.50"></text></g><g><title>ntdll`LdrInitializeThunk (35 samples, 0.38%)</title><rect x="0.0000%" y="1413" width="0.3797%" height="15" fill="rgb(213,199,42)" fg:x="0" fg:w="35"/><text x="0.2500%" y="1423.50"></text></g><g><title>ntdll`LdrInitializeThunk (35 samples, 0.38%)</title><rect x="0.0000%" y="1397" width="0.3797%" height="15" fill="rgb(235,201,11)" fg:x="0" fg:w="35"/><text x="0.2500%" y="1407.50"></text></g><g><title>ntdll`LdrInitializeThunk (34 samples, 0.37%)</title><rect x="0.0108%" y="1381" width="0.3688%" height="15" fill="rgb(207,46,11)" fg:x="1" fg:w="34"/><text x="0.2608%" y="1391.50"></text></g><g><title>ntdll`LdrInitShimEngineDynamic (34 samples, 0.37%)</title><rect x="0.0108%" y="1365" width="0.3688%" height="15" fill="rgb(241,35,35)" fg:x="1" fg:w="34"/><text x="0.2608%" y="1375.50"></text></g><g><title>ntdll`wcstok_s (1 samples, 0.01%)</title><rect x="0.3688%" y="1349" width="0.0108%" height="15" fill="rgb(243,32,47)" fg:x="34" fg:w="1"/><text x="0.6188%" y="1359.50"></text></g><g><title>ntdll`wcstok_s (1 samples, 0.01%)</title><rect x="0.3688%" y="1333" width="0.0108%" height="15" fill="rgb(247,202,23)" fg:x="34" fg:w="1"/><text x="0.6188%" y="1343.50"></text></g><g><title>ntdll`wcstok_s (1 samples, 0.01%)</title><rect x="0.3688%" y="1317" width="0.0108%" height="15" fill="rgb(219,102,11)" fg:x="34" fg:w="1"/><text x="0.6188%" y="1327.50"></text></g><g><title>ntdll`wcstok_s (1 samples, 0.01%)</title><rect x="0.3688%" y="1301" width="0.0108%" height="15" fill="rgb(243,110,44)" fg:x="34" fg:w="1"/><text x="0.6188%" y="1311.50"></text></g><g><title>ntdll`RtlQueryFeatureConfiguration (1 samples, 0.01%)</title><rect x="0.3688%" y="1285" width="0.0108%" height="15" fill="rgb(222,74,54)" fg:x="34" fg:w="1"/><text x="0.6188%" y="1295.50"></text></g><g><title>ntdll`RtlQueryFeatureConfiguration (1 samples, 0.01%)</title><rect x="0.3688%" y="1269" width="0.0108%" height="15" fill="rgb(216,99,12)" fg:x="34" fg:w="1"/><text x="0.6188%" y="1279.50"></text></g><g><title>ntdll`MD5Update (1 samples, 0.01%)</title><rect x="0.3688%" y="1253" width="0.0108%" height="15" fill="rgb(226,22,26)" fg:x="34" fg:w="1"/><text x="0.6188%" y="1263.50"></text></g><g><title>ntdll`ZwQuerySystemInformationEx (1 samples, 0.01%)</title><rect x="0.3688%" y="1237" width="0.0108%" height="15" fill="rgb(217,163,10)" fg:x="34" fg:w="1"/><text x="0.6188%" y="1247.50"></text></g><g><title>ntdll`RtlDeriveCapabilitySidsFromName (1 samples, 0.01%)</title><rect x="0.4013%" y="1349" width="0.0108%" height="15" fill="rgb(213,25,53)" fg:x="37" fg:w="1"/><text x="0.6513%" y="1359.50"></text></g><g><title>ntdll`TpPostWork (1 samples, 0.01%)</title><rect x="0.4013%" y="1333" width="0.0108%" height="15" fill="rgb(252,105,26)" fg:x="37" fg:w="1"/><text x="0.6513%" y="1343.50"></text></g><g><title>ntdll`NtReleaseWorkerFactoryWorker (1 samples, 0.01%)</title><rect x="0.4013%" y="1317" width="0.0108%" height="15" fill="rgb(220,39,43)" fg:x="37" fg:w="1"/><text x="0.6513%" y="1327.50"></text></g><g><title>ntdll`NtClose (1 samples, 0.01%)</title><rect x="0.4122%" y="1285" width="0.0108%" height="15" fill="rgb(229,68,48)" fg:x="38" fg:w="1"/><text x="0.6622%" y="1295.50"></text></g><g><title>ntdll`LdrShutdownThread (1 samples, 0.01%)</title><rect x="0.4230%" y="1269" width="0.0108%" height="15" fill="rgb(252,8,32)" fg:x="39" fg:w="1"/><text x="0.6730%" y="1279.50"></text></g><g><title>ntdll`RtlIsCriticalSectionLockedByThread (1 samples, 0.01%)</title><rect x="0.4230%" y="1253" width="0.0108%" height="15" fill="rgb(223,20,43)" fg:x="39" fg:w="1"/><text x="0.6730%" y="1263.50"></text></g><g><title>ntdll`NtProtectVirtualMemory (1 samples, 0.01%)</title><rect x="0.4230%" y="1237" width="0.0108%" height="15" fill="rgb(229,81,49)" fg:x="39" fg:w="1"/><text x="0.6730%" y="1247.50"></text></g><g><title>ntdll`RtlIsCriticalSectionLockedByThread (2 samples, 0.02%)</title><rect x="0.4230%" y="1285" width="0.0217%" height="15" fill="rgb(236,28,36)" fg:x="39" fg:w="2"/><text x="0.6730%" y="1295.50"></text></g><g><title>ntdll`RtlIsCriticalSectionLockedByThread (1 samples, 0.01%)</title><rect x="0.4339%" y="1269" width="0.0108%" height="15" fill="rgb(249,185,26)" fg:x="40" fg:w="1"/><text x="0.6839%" y="1279.50"></text></g><g><title>ntdll`ZwMapViewOfSection (1 samples, 0.01%)</title><rect x="0.4339%" y="1253" width="0.0108%" height="15" fill="rgb(249,174,33)" fg:x="40" fg:w="1"/><text x="0.6839%" y="1263.50"></text></g><g><title>ntdll`LdrGetDllPath (1 samples, 0.01%)</title><rect x="0.4447%" y="1269" width="0.0108%" height="15" fill="rgb(233,201,37)" fg:x="41" fg:w="1"/><text x="0.6947%" y="1279.50"></text></g><g><title>ntdll`LdrGetDllPath (1 samples, 0.01%)</title><rect x="0.4447%" y="1253" width="0.0108%" height="15" fill="rgb(221,78,26)" fg:x="41" fg:w="1"/><text x="0.6947%" y="1263.50"></text></g><g><title>ntdll`LdrGetProcedureAddressEx (1 samples, 0.01%)</title><rect x="0.4447%" y="1237" width="0.0108%" height="15" fill="rgb(250,127,30)" fg:x="41" fg:w="1"/><text x="0.6947%" y="1247.50"></text></g><g><title>ntdll`LdrGetProcedureAddressEx (1 samples, 0.01%)</title><rect x="0.4447%" y="1221" width="0.0108%" height="15" fill="rgb(230,49,44)" fg:x="41" fg:w="1"/><text x="0.6947%" y="1231.50"></text></g><g><title>ntdll`RtlQueryEnvironmentVariable (1 samples, 0.01%)</title><rect x="0.4447%" y="1205" width="0.0108%" height="15" fill="rgb(229,67,23)" fg:x="41" fg:w="1"/><text x="0.6947%" y="1215.50"></text></g><g><title>ntdll`RtlUpcaseUnicodeString (1 samples, 0.01%)</title><rect x="0.4447%" y="1189" width="0.0108%" height="15" fill="rgb(249,83,47)" fg:x="41" fg:w="1"/><text x="0.6947%" y="1199.50"></text></g><g><title>ntdll`memcpy (1 samples, 0.01%)</title><rect x="0.4447%" y="1173" width="0.0108%" height="15" fill="rgb(215,43,3)" fg:x="41" fg:w="1"/><text x="0.6947%" y="1183.50"></text></g><g><title>ntdll`RtlUnlockHeap (6 samples, 0.07%)</title><rect x="0.4122%" y="1317" width="0.0651%" height="15" fill="rgb(238,154,13)" fg:x="38" fg:w="6"/><text x="0.6622%" y="1327.50"></text></g><g><title>ntdll`RtlUnlockHeap (6 samples, 0.07%)</title><rect x="0.4122%" y="1301" width="0.0651%" height="15" fill="rgb(219,56,2)" fg:x="38" fg:w="6"/><text x="0.6622%" y="1311.50"></text></g><g><title>ntdll`RtlUnlockHeap (3 samples, 0.03%)</title><rect x="0.4447%" y="1285" width="0.0325%" height="15" fill="rgb(233,0,4)" fg:x="41" fg:w="3"/><text x="0.6947%" y="1295.50"></text></g><g><title>ntdll`RtlUnlockHeap (2 samples, 0.02%)</title><rect x="0.4556%" y="1269" width="0.0217%" height="15" fill="rgb(235,30,7)" fg:x="42" fg:w="2"/><text x="0.7056%" y="1279.50"></text></g><g><title>ntdll`NtQueryAttributesFile (2 samples, 0.02%)</title><rect x="0.4556%" y="1253" width="0.0217%" height="15" fill="rgb(250,79,13)" fg:x="42" fg:w="2"/><text x="0.7056%" y="1263.50"></text></g><g><title>ntdll`TpAllocPool (12 samples, 0.13%)</title><rect x="0.4013%" y="1365" width="0.1302%" height="15" fill="rgb(211,146,34)" fg:x="37" fg:w="12"/><text x="0.6513%" y="1375.50"></text></g><g><title>ntdll`RtlUnlockHeap (11 samples, 0.12%)</title><rect x="0.4122%" y="1349" width="0.1193%" height="15" fill="rgb(228,22,38)" fg:x="38" fg:w="11"/><text x="0.6622%" y="1359.50"></text></g><g><title>ntdll`RtlUnlockHeap (11 samples, 0.12%)</title><rect x="0.4122%" y="1333" width="0.1193%" height="15" fill="rgb(235,168,5)" fg:x="38" fg:w="11"/><text x="0.6622%" y="1343.50"></text></g><g><title>ntdll`RtlVirtualUnwind (5 samples, 0.05%)</title><rect x="0.4773%" y="1317" width="0.0542%" height="15" fill="rgb(221,155,16)" fg:x="44" fg:w="5"/><text x="0.7273%" y="1327.50"></text></g><g><title>ntdll`RtlLookupFunctionEntry (1 samples, 0.01%)</title><rect x="0.5207%" y="1301" width="0.0108%" height="15" fill="rgb(215,215,53)" fg:x="48" fg:w="1"/><text x="0.7707%" y="1311.50"></text></g><g><title>ntdll`LdrShutdownThread (1 samples, 0.01%)</title><rect x="0.5207%" y="1285" width="0.0108%" height="15" fill="rgb(223,4,10)" fg:x="48" fg:w="1"/><text x="0.7707%" y="1295.50"></text></g><g><title>ntdll`TpReleaseCleanupGroupMembers (14 samples, 0.15%)</title><rect x="0.3905%" y="1381" width="0.1519%" height="15" fill="rgb(234,103,6)" fg:x="36" fg:w="14"/><text x="0.6405%" y="1391.50"></text></g><g><title>ntdll`TpReleaseCleanupGroupMembers (1 samples, 0.01%)</title><rect x="0.5315%" y="1365" width="0.0108%" height="15" fill="rgb(227,97,0)" fg:x="49" fg:w="1"/><text x="0.7815%" y="1375.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="0.5315%" y="1349" width="0.0108%" height="15" fill="rgb(234,150,53)" fg:x="49" fg:w="1"/><text x="0.7815%" y="1359.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="0.5315%" y="1333" width="0.0108%" height="15" fill="rgb(228,201,54)" fg:x="49" fg:w="1"/><text x="0.7815%" y="1343.50"></text></g><g><title>ntdll`RtlQueryResourcePolicy (1 samples, 0.01%)</title><rect x="0.5315%" y="1317" width="0.0108%" height="15" fill="rgb(222,22,37)" fg:x="49" fg:w="1"/><text x="0.7815%" y="1327.50"></text></g><g><title>ntdll`RtlQueryResourcePolicy (1 samples, 0.01%)</title><rect x="0.5315%" y="1301" width="0.0108%" height="15" fill="rgb(237,53,32)" fg:x="49" fg:w="1"/><text x="0.7815%" y="1311.50"></text></g><g><title>ntdll`RtlQueryResourcePolicy (1 samples, 0.01%)</title><rect x="0.5315%" y="1285" width="0.0108%" height="15" fill="rgb(233,25,53)" fg:x="49" fg:w="1"/><text x="0.7815%" y="1295.50"></text></g><g><title>ntdll`RtlQueryResourcePolicy (1 samples, 0.01%)</title><rect x="0.5315%" y="1269" width="0.0108%" height="15" fill="rgb(210,40,34)" fg:x="49" fg:w="1"/><text x="0.7815%" y="1279.50"></text></g><g><title>ntdll`RtlRunOnceExecuteOnce (1 samples, 0.01%)</title><rect x="0.5315%" y="1253" width="0.0108%" height="15" fill="rgb(241,220,44)" fg:x="49" fg:w="1"/><text x="0.7815%" y="1263.50"></text></g><g><title>ntdll`RtlPublishWnfStateData (1 samples, 0.01%)</title><rect x="0.5315%" y="1237" width="0.0108%" height="15" fill="rgb(235,28,35)" fg:x="49" fg:w="1"/><text x="0.7815%" y="1247.50"></text></g><g><title>ntdll`NtOpenKey (1 samples, 0.01%)</title><rect x="0.5315%" y="1221" width="0.0108%" height="15" fill="rgb(210,56,17)" fg:x="49" fg:w="1"/><text x="0.7815%" y="1231.50"></text></g><g><title>ntdll`RtlAddVectoredExceptionHandler (1 samples, 0.01%)</title><rect x="0.5424%" y="1333" width="0.0108%" height="15" fill="rgb(224,130,29)" fg:x="50" fg:w="1"/><text x="0.7924%" y="1343.50"></text></g><g><title>ntdll`TpIsTimerSet (1 samples, 0.01%)</title><rect x="0.5424%" y="1317" width="0.0108%" height="15" fill="rgb(235,212,8)" fg:x="50" fg:w="1"/><text x="0.7924%" y="1327.50"></text></g><g><title>ntdll`RtlAddRefActivationContext (1 samples, 0.01%)</title><rect x="0.5424%" y="1301" width="0.0108%" height="15" fill="rgb(223,33,50)" fg:x="50" fg:w="1"/><text x="0.7924%" y="1311.50"></text></g><g><title>ntdll`NtProtectVirtualMemory (1 samples, 0.01%)</title><rect x="0.5424%" y="1285" width="0.0108%" height="15" fill="rgb(219,149,13)" fg:x="50" fg:w="1"/><text x="0.7924%" y="1295.50"></text></g><g><title>stelpatch-benchmark`clap_builder::builder::command::Command::get_matches_from (1 samples, 0.01%)</title><rect x="0.5532%" y="1285" width="0.0108%" height="15" fill="rgb(250,156,29)" fg:x="51" fg:w="1"/><text x="0.8032%" y="1295.50"></text></g><g><title>stelpatch-benchmark`clap_builder::builder::command::Command::_do_parse (1 samples, 0.01%)</title><rect x="0.5532%" y="1269" width="0.0108%" height="15" fill="rgb(216,193,19)" fg:x="51" fg:w="1"/><text x="0.8032%" y="1279.50"></text></g><g><title>stelpatch-benchmark`clap_builder::parser::parser::Parser::get_matches_with (1 samples, 0.01%)</title><rect x="0.5532%" y="1253" width="0.0108%" height="15" fill="rgb(216,135,14)" fg:x="51" fg:w="1"/><text x="0.8032%" y="1263.50"></text></g><g><title>stelpatch-benchmark`clap_builder::parser::parser::Parser::resolve_pending (1 samples, 0.01%)</title><rect x="0.5532%" y="1237" width="0.0108%" height="15" fill="rgb(241,47,5)" fg:x="51" fg:w="1"/><text x="0.8032%" y="1247.50"></text></g><g><title>stelpatch-benchmark`clap_builder::parser::parser::Parser::react (1 samples, 0.01%)</title><rect x="0.5532%" y="1221" width="0.0108%" height="15" fill="rgb(233,42,35)" fg:x="51" fg:w="1"/><text x="0.8032%" y="1231.50"></text></g><g><title>stelpatch-benchmark`clap_builder::parser::parser::Parser::start_custom_arg (1 samples, 0.01%)</title><rect x="0.5532%" y="1205" width="0.0108%" height="15" fill="rgb(231,13,6)" fg:x="51" fg:w="1"/><text x="0.8032%" y="1215.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (2 samples, 0.02%)</title><rect x="0.5641%" y="1253" width="0.0217%" height="15" fill="rgb(207,181,40)" fg:x="52" fg:w="2"/><text x="0.8141%" y="1263.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (2 samples, 0.02%)</title><rect x="0.5641%" y="1237" width="0.0217%" height="15" fill="rgb(254,173,49)" fg:x="52" fg:w="2"/><text x="0.8141%" y="1247.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (2 samples, 0.02%)</title><rect x="0.5641%" y="1221" width="0.0217%" height="15" fill="rgb(221,1,38)" fg:x="52" fg:w="2"/><text x="0.8141%" y="1231.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (2 samples, 0.02%)</title><rect x="0.5641%" y="1205" width="0.0217%" height="15" fill="rgb(206,124,46)" fg:x="52" fg:w="2"/><text x="0.8141%" y="1215.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (2 samples, 0.02%)</title><rect x="0.5641%" y="1189" width="0.0217%" height="15" fill="rgb(249,21,11)" fg:x="52" fg:w="2"/><text x="0.8141%" y="1199.50"></text></g><g><title>ntdll`TpWaitForWait (2 samples, 0.02%)</title><rect x="0.5641%" y="1173" width="0.0217%" height="15" fill="rgb(222,201,40)" fg:x="52" fg:w="2"/><text x="0.8141%" y="1183.50"></text></g><g><title>ntdll`NtFreeVirtualMemory (2 samples, 0.02%)</title><rect x="0.5641%" y="1157" width="0.0217%" height="15" fill="rgb(235,61,29)" fg:x="52" fg:w="2"/><text x="0.8141%" y="1167.50"></text></g><g><title>ntdll`RtlFreeHeap (3 samples, 0.03%)</title><rect x="0.5641%" y="1269" width="0.0325%" height="15" fill="rgb(219,207,3)" fg:x="52" fg:w="3"/><text x="0.8141%" y="1279.50"></text></g><g><title>ntdll`memset (1 samples, 0.01%)</title><rect x="0.5857%" y="1253" width="0.0108%" height="15" fill="rgb(222,56,46)" fg:x="54" fg:w="1"/><text x="0.8357%" y="1263.50"></text></g><g><title>ntdll`RtlEqualUnicodeString (1 samples, 0.01%)</title><rect x="0.5857%" y="1237" width="0.0108%" height="15" fill="rgb(239,76,54)" fg:x="54" fg:w="1"/><text x="0.8357%" y="1247.50"></text></g><g><title>ntdll`RtlSetUserValueHeap (1 samples, 0.01%)</title><rect x="0.5857%" y="1221" width="0.0108%" height="15" fill="rgb(231,124,27)" fg:x="54" fg:w="1"/><text x="0.8357%" y="1231.50"></text></g><g><title>ntdll`NtProtectVirtualMemory (1 samples, 0.01%)</title><rect x="0.5857%" y="1205" width="0.0108%" height="15" fill="rgb(249,195,6)" fg:x="54" fg:w="1"/><text x="0.8357%" y="1215.50"></text></g><g><title>ntdll`NtProtectVirtualMemory (2 samples, 0.02%)</title><rect x="0.8027%" y="1189" width="0.0217%" height="15" fill="rgb(237,174,47)" fg:x="74" fg:w="2"/><text x="1.0527%" y="1199.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (5 samples, 0.05%)</title><rect x="0.8569%" y="1109" width="0.0542%" height="15" fill="rgb(206,201,31)" fg:x="79" fg:w="5"/><text x="1.1069%" y="1119.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (5 samples, 0.05%)</title><rect x="0.8569%" y="1093" width="0.0542%" height="15" fill="rgb(231,57,52)" fg:x="79" fg:w="5"/><text x="1.1069%" y="1103.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (46 samples, 0.50%)</title><rect x="0.8569%" y="1125" width="0.4990%" height="15" fill="rgb(248,177,22)" fg:x="79" fg:w="46"/><text x="1.1069%" y="1135.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (41 samples, 0.44%)</title><rect x="0.9112%" y="1109" width="0.4447%" height="15" fill="rgb(215,211,37)" fg:x="84" fg:w="41"/><text x="1.1612%" y="1119.50"></text></g><g><title>ntdll`TpWaitForWait (41 samples, 0.44%)</title><rect x="0.9112%" y="1093" width="0.4447%" height="15" fill="rgb(241,128,51)" fg:x="84" fg:w="41"/><text x="1.1612%" y="1103.50"></text></g><g><title>ntdll`NtFreeVirtualMemory (41 samples, 0.44%)</title><rect x="0.9112%" y="1077" width="0.4447%" height="15" fill="rgb(227,165,31)" fg:x="84" fg:w="41"/><text x="1.1612%" y="1087.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (54 samples, 0.59%)</title><rect x="0.8352%" y="1141" width="0.5857%" height="15" fill="rgb(228,167,24)" fg:x="77" fg:w="54"/><text x="1.0852%" y="1151.50"></text></g><g><title>ntdll`TpWaitForWait (6 samples, 0.07%)</title><rect x="1.3559%" y="1125" width="0.0651%" height="15" fill="rgb(228,143,12)" fg:x="125" fg:w="6"/><text x="1.6059%" y="1135.50"></text></g><g><title>ntdll`NtFreeVirtualMemory (6 samples, 0.07%)</title><rect x="1.3559%" y="1109" width="0.0651%" height="15" fill="rgb(249,149,8)" fg:x="125" fg:w="6"/><text x="1.6059%" y="1119.50"></text></g><g><title>ntdll`RtlFreeHeap (64 samples, 0.69%)</title><rect x="0.7701%" y="1253" width="0.6942%" height="15" fill="rgb(243,35,44)" fg:x="71" fg:w="64"/><text x="1.0201%" y="1263.50"></text></g><g><title>ntdll`memset (64 samples, 0.69%)</title><rect x="0.7701%" y="1237" width="0.6942%" height="15" fill="rgb(246,89,9)" fg:x="71" fg:w="64"/><text x="1.0201%" y="1247.50"></text></g><g><title>ntdll`RtlEqualUnicodeString (61 samples, 0.66%)</title><rect x="0.8027%" y="1221" width="0.6617%" height="15" fill="rgb(233,213,13)" fg:x="74" fg:w="61"/><text x="1.0527%" y="1231.50"></text></g><g><title>ntdll`RtlSetUserValueHeap (61 samples, 0.66%)</title><rect x="0.8027%" y="1205" width="0.6617%" height="15" fill="rgb(233,141,41)" fg:x="74" fg:w="61"/><text x="1.0527%" y="1215.50"></text></g><g><title>ntdll`RtlFreeHeap (59 samples, 0.64%)</title><rect x="0.8244%" y="1189" width="0.6400%" height="15" fill="rgb(239,167,4)" fg:x="76" fg:w="59"/><text x="1.0744%" y="1199.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (59 samples, 0.64%)</title><rect x="0.8244%" y="1173" width="0.6400%" height="15" fill="rgb(209,217,16)" fg:x="76" fg:w="59"/><text x="1.0744%" y="1183.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (59 samples, 0.64%)</title><rect x="0.8244%" y="1157" width="0.6400%" height="15" fill="rgb(219,88,35)" fg:x="76" fg:w="59"/><text x="1.0744%" y="1167.50"></text></g><g><title>ntdll`RtlProtectHeap (4 samples, 0.04%)</title><rect x="1.4210%" y="1141" width="0.0434%" height="15" fill="rgb(220,193,23)" fg:x="131" fg:w="4"/><text x="1.6710%" y="1151.50"></text></g><g><title>ntdll`NtAllocateVirtualMemory (4 samples, 0.04%)</title><rect x="1.4210%" y="1125" width="0.0434%" height="15" fill="rgb(230,90,52)" fg:x="131" fg:w="4"/><text x="1.6710%" y="1135.50"></text></g><g><title>stelpatch-benchmark`core::ptr::drop_in_place&lt;slice2$&lt;enum2$ (1 samples, 0.01%)</title><rect x="1.4644%" y="1253" width="0.0108%" height="15" fill="rgb(252,106,19)" fg:x="135" fg:w="1"/><text x="1.7144%" y="1263.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (3 samples, 0.03%)</title><rect x="2.3972%" y="1189" width="0.0325%" height="15" fill="rgb(206,74,20)" fg:x="221" fg:w="3"/><text x="2.6472%" y="1199.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (3 samples, 0.03%)</title><rect x="2.3972%" y="1173" width="0.0325%" height="15" fill="rgb(230,138,44)" fg:x="221" fg:w="3"/><text x="2.6472%" y="1183.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (2 samples, 0.02%)</title><rect x="2.4081%" y="1157" width="0.0217%" height="15" fill="rgb(235,182,43)" fg:x="222" fg:w="2"/><text x="2.6581%" y="1167.50"></text></g><g><title>ntdll`TpWaitForWait (2 samples, 0.02%)</title><rect x="2.4081%" y="1141" width="0.0217%" height="15" fill="rgb(242,16,51)" fg:x="222" fg:w="2"/><text x="2.6581%" y="1151.50"></text></g><g><title>ntdll`NtFreeVirtualMemory (2 samples, 0.02%)</title><rect x="2.4081%" y="1125" width="0.0217%" height="15" fill="rgb(248,9,4)" fg:x="222" fg:w="2"/><text x="2.6581%" y="1135.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (16 samples, 0.17%)</title><rect x="2.2888%" y="1221" width="0.1736%" height="15" fill="rgb(210,31,22)" fg:x="211" fg:w="16"/><text x="2.5388%" y="1231.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (7 samples, 0.08%)</title><rect x="2.3864%" y="1205" width="0.0759%" height="15" fill="rgb(239,54,39)" fg:x="220" fg:w="7"/><text x="2.6364%" y="1215.50"></text></g><g><title>ntdll`RtlProtectHeap (3 samples, 0.03%)</title><rect x="2.4298%" y="1189" width="0.0325%" height="15" fill="rgb(230,99,41)" fg:x="224" fg:w="3"/><text x="2.6798%" y="1199.50"></text></g><g><title>ntdll`NtAllocateVirtualMemory (3 samples, 0.03%)</title><rect x="2.4298%" y="1173" width="0.0325%" height="15" fill="rgb(253,106,12)" fg:x="224" fg:w="3"/><text x="2.6798%" y="1183.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (5 samples, 0.05%)</title><rect x="2.6901%" y="1093" width="0.0542%" height="15" fill="rgb(213,46,41)" fg:x="248" fg:w="5"/><text x="2.9401%" y="1103.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (5 samples, 0.05%)</title><rect x="2.6901%" y="1077" width="0.0542%" height="15" fill="rgb(215,133,35)" fg:x="248" fg:w="5"/><text x="2.9401%" y="1087.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (28 samples, 0.30%)</title><rect x="2.6576%" y="1109" width="0.3037%" height="15" fill="rgb(213,28,5)" fg:x="245" fg:w="28"/><text x="2.9076%" y="1119.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (20 samples, 0.22%)</title><rect x="2.7443%" y="1093" width="0.2169%" height="15" fill="rgb(215,77,49)" fg:x="253" fg:w="20"/><text x="2.9943%" y="1103.50"></text></g><g><title>ntdll`TpWaitForWait (20 samples, 0.22%)</title><rect x="2.7443%" y="1077" width="0.2169%" height="15" fill="rgb(248,100,22)" fg:x="253" fg:w="20"/><text x="2.9943%" y="1087.50"></text></g><g><title>ntdll`NtFreeVirtualMemory (20 samples, 0.22%)</title><rect x="2.7443%" y="1061" width="0.2169%" height="15" fill="rgb(208,67,9)" fg:x="253" fg:w="20"/><text x="2.9943%" y="1071.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (32 samples, 0.35%)</title><rect x="2.6576%" y="1125" width="0.3471%" height="15" fill="rgb(219,133,21)" fg:x="245" fg:w="32"/><text x="2.9076%" y="1135.50"></text></g><g><title>ntdll`TpWaitForWait (4 samples, 0.04%)</title><rect x="2.9613%" y="1109" width="0.0434%" height="15" fill="rgb(246,46,29)" fg:x="273" fg:w="4"/><text x="3.2113%" y="1119.50"></text></g><g><title>ntdll`NtFreeVirtualMemory (4 samples, 0.04%)</title><rect x="2.9613%" y="1093" width="0.0434%" height="15" fill="rgb(246,185,52)" fg:x="273" fg:w="4"/><text x="3.2113%" y="1103.50"></text></g><g><title>ntdll`RtlFreeHeap (70 samples, 0.76%)</title><rect x="2.2888%" y="1237" width="0.7593%" height="15" fill="rgb(252,136,11)" fg:x="211" fg:w="70"/><text x="2.5388%" y="1247.50"></text></g><g><title>ntdll`memset (54 samples, 0.59%)</title><rect x="2.4623%" y="1221" width="0.5857%" height="15" fill="rgb(219,138,53)" fg:x="227" fg:w="54"/><text x="2.7123%" y="1231.50"></text></g><g><title>ntdll`RtlEqualUnicodeString (36 samples, 0.39%)</title><rect x="2.6576%" y="1205" width="0.3905%" height="15" fill="rgb(211,51,23)" fg:x="245" fg:w="36"/><text x="2.9076%" y="1215.50"></text></g><g><title>ntdll`RtlSetUserValueHeap (36 samples, 0.39%)</title><rect x="2.6576%" y="1189" width="0.3905%" height="15" fill="rgb(247,221,28)" fg:x="245" fg:w="36"/><text x="2.9076%" y="1199.50"></text></g><g><title>ntdll`RtlFreeHeap (36 samples, 0.39%)</title><rect x="2.6576%" y="1173" width="0.3905%" height="15" fill="rgb(251,222,45)" fg:x="245" fg:w="36"/><text x="2.9076%" y="1183.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (36 samples, 0.39%)</title><rect x="2.6576%" y="1157" width="0.3905%" height="15" fill="rgb(217,162,53)" fg:x="245" fg:w="36"/><text x="2.9076%" y="1167.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (36 samples, 0.39%)</title><rect x="2.6576%" y="1141" width="0.3905%" height="15" fill="rgb(229,93,14)" fg:x="245" fg:w="36"/><text x="2.9076%" y="1151.50"></text></g><g><title>ntdll`RtlProtectHeap (4 samples, 0.04%)</title><rect x="3.0047%" y="1125" width="0.0434%" height="15" fill="rgb(209,67,49)" fg:x="277" fg:w="4"/><text x="3.2547%" y="1135.50"></text></g><g><title>ntdll`NtAllocateVirtualMemory (4 samples, 0.04%)</title><rect x="3.0047%" y="1109" width="0.0434%" height="15" fill="rgb(213,87,29)" fg:x="277" fg:w="4"/><text x="3.2547%" y="1119.50"></text></g><g><title>stelpatch-benchmark`core::ptr::drop_in_place&lt;slice2$&lt;enum2$ (6 samples, 0.07%)</title><rect x="3.0481%" y="1237" width="0.0651%" height="15" fill="rgb(205,151,52)" fg:x="281" fg:w="6"/><text x="3.2981%" y="1247.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::impl$17::drop&lt;tuple$ (1 samples, 0.01%)</title><rect x="3.1023%" y="1221" width="0.0108%" height="15" fill="rgb(253,215,39)" fg:x="286" fg:w="1"/><text x="3.3523%" y="1231.50"></text></g><g><title>KERNEL32`HeapFree (2 samples, 0.02%)</title><rect x="3.8182%" y="1221" width="0.0217%" height="15" fill="rgb(221,220,41)" fg:x="352" fg:w="2"/><text x="4.0682%" y="1231.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.01%)</title><rect x="3.9918%" y="1173" width="0.0108%" height="15" fill="rgb(218,133,21)" fg:x="368" fg:w="1"/><text x="4.2418%" y="1183.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.01%)</title><rect x="3.9918%" y="1157" width="0.0108%" height="15" fill="rgb(221,193,43)" fg:x="368" fg:w="1"/><text x="4.2418%" y="1167.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.01%)</title><rect x="3.9918%" y="1141" width="0.0108%" height="15" fill="rgb(240,128,52)" fg:x="368" fg:w="1"/><text x="4.2418%" y="1151.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.01%)</title><rect x="3.9918%" y="1125" width="0.0108%" height="15" fill="rgb(253,114,12)" fg:x="368" fg:w="1"/><text x="4.2418%" y="1135.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (13 samples, 0.14%)</title><rect x="3.8941%" y="1205" width="0.1410%" height="15" fill="rgb(215,223,47)" fg:x="359" fg:w="13"/><text x="4.1441%" y="1215.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (5 samples, 0.05%)</title><rect x="3.9809%" y="1189" width="0.0542%" height="15" fill="rgb(248,225,23)" fg:x="367" fg:w="5"/><text x="4.2309%" y="1199.50"></text></g><g><title>ntdll`RtlProtectHeap (3 samples, 0.03%)</title><rect x="4.0026%" y="1173" width="0.0325%" height="15" fill="rgb(250,108,0)" fg:x="369" fg:w="3"/><text x="4.2526%" y="1183.50"></text></g><g><title>ntdll`NtAllocateVirtualMemory (3 samples, 0.03%)</title><rect x="4.0026%" y="1157" width="0.0325%" height="15" fill="rgb(228,208,7)" fg:x="369" fg:w="3"/><text x="4.2526%" y="1167.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.01%)</title><rect x="4.2304%" y="1077" width="0.0108%" height="15" fill="rgb(244,45,10)" fg:x="390" fg:w="1"/><text x="4.4804%" y="1087.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.01%)</title><rect x="4.2304%" y="1061" width="0.0108%" height="15" fill="rgb(207,125,25)" fg:x="390" fg:w="1"/><text x="4.4804%" y="1071.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (5 samples, 0.05%)</title><rect x="4.2304%" y="1093" width="0.0542%" height="15" fill="rgb(210,195,18)" fg:x="390" fg:w="5"/><text x="4.4804%" y="1103.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (4 samples, 0.04%)</title><rect x="4.2412%" y="1077" width="0.0434%" height="15" fill="rgb(249,80,12)" fg:x="391" fg:w="4"/><text x="4.4912%" y="1087.50"></text></g><g><title>ntdll`TpWaitForWait (4 samples, 0.04%)</title><rect x="4.2412%" y="1061" width="0.0434%" height="15" fill="rgb(221,65,9)" fg:x="391" fg:w="4"/><text x="4.4912%" y="1071.50"></text></g><g><title>ntdll`NtFreeVirtualMemory (4 samples, 0.04%)</title><rect x="4.2412%" y="1045" width="0.0434%" height="15" fill="rgb(235,49,36)" fg:x="391" fg:w="4"/><text x="4.4912%" y="1055.50"></text></g><g><title>ntdll`RtlFreeHeap (43 samples, 0.47%)</title><rect x="3.8399%" y="1221" width="0.4664%" height="15" fill="rgb(225,32,20)" fg:x="354" fg:w="43"/><text x="4.0899%" y="1231.50"></text></g><g><title>ntdll`memset (25 samples, 0.27%)</title><rect x="4.0351%" y="1205" width="0.2712%" height="15" fill="rgb(215,141,46)" fg:x="372" fg:w="25"/><text x="4.2851%" y="1215.50"></text></g><g><title>ntdll`RtlEqualUnicodeString (7 samples, 0.08%)</title><rect x="4.2304%" y="1189" width="0.0759%" height="15" fill="rgb(250,160,47)" fg:x="390" fg:w="7"/><text x="4.4804%" y="1199.50"></text></g><g><title>ntdll`RtlSetUserValueHeap (7 samples, 0.08%)</title><rect x="4.2304%" y="1173" width="0.0759%" height="15" fill="rgb(216,222,40)" fg:x="390" fg:w="7"/><text x="4.4804%" y="1183.50"></text></g><g><title>ntdll`RtlFreeHeap (7 samples, 0.08%)</title><rect x="4.2304%" y="1157" width="0.0759%" height="15" fill="rgb(234,217,39)" fg:x="390" fg:w="7"/><text x="4.4804%" y="1167.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (7 samples, 0.08%)</title><rect x="4.2304%" y="1141" width="0.0759%" height="15" fill="rgb(207,178,40)" fg:x="390" fg:w="7"/><text x="4.4804%" y="1151.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (7 samples, 0.08%)</title><rect x="4.2304%" y="1125" width="0.0759%" height="15" fill="rgb(221,136,13)" fg:x="390" fg:w="7"/><text x="4.4804%" y="1135.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (7 samples, 0.08%)</title><rect x="4.2304%" y="1109" width="0.0759%" height="15" fill="rgb(249,199,10)" fg:x="390" fg:w="7"/><text x="4.4804%" y="1119.50"></text></g><g><title>ntdll`TpWaitForWait (2 samples, 0.02%)</title><rect x="4.2846%" y="1093" width="0.0217%" height="15" fill="rgb(249,222,13)" fg:x="395" fg:w="2"/><text x="4.5346%" y="1103.50"></text></g><g><title>ntdll`NtFreeVirtualMemory (2 samples, 0.02%)</title><rect x="4.2846%" y="1077" width="0.0217%" height="15" fill="rgb(244,185,38)" fg:x="395" fg:w="2"/><text x="4.5346%" y="1087.50"></text></g><g><title>stelpatch-benchmark`core::ptr::drop_in_place&lt;slice2$&lt;enum2$ (2 samples, 0.02%)</title><rect x="4.3063%" y="1221" width="0.0217%" height="15" fill="rgb(236,202,9)" fg:x="397" fg:w="2"/><text x="4.5563%" y="1231.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::impl$17::drop&lt;tuple$ (1 samples, 0.01%)</title><rect x="4.3172%" y="1205" width="0.0108%" height="15" fill="rgb(250,229,37)" fg:x="398" fg:w="1"/><text x="4.5672%" y="1215.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (4 samples, 0.04%)</title><rect x="5.2609%" y="1157" width="0.0434%" height="15" fill="rgb(206,174,23)" fg:x="485" fg:w="4"/><text x="5.5109%" y="1167.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (4 samples, 0.04%)</title><rect x="5.2609%" y="1141" width="0.0434%" height="15" fill="rgb(211,33,43)" fg:x="485" fg:w="4"/><text x="5.5109%" y="1151.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (4 samples, 0.04%)</title><rect x="5.2609%" y="1125" width="0.0434%" height="15" fill="rgb(245,58,50)" fg:x="485" fg:w="4"/><text x="5.5109%" y="1135.50"></text></g><g><title>ntdll`TpWaitForWait (4 samples, 0.04%)</title><rect x="5.2609%" y="1109" width="0.0434%" height="15" fill="rgb(244,68,36)" fg:x="485" fg:w="4"/><text x="5.5109%" y="1119.50"></text></g><g><title>ntdll`NtFreeVirtualMemory (4 samples, 0.04%)</title><rect x="5.2609%" y="1093" width="0.0434%" height="15" fill="rgb(232,229,15)" fg:x="485" fg:w="4"/><text x="5.5109%" y="1103.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (17 samples, 0.18%)</title><rect x="5.1307%" y="1189" width="0.1844%" height="15" fill="rgb(254,30,23)" fg:x="473" fg:w="17"/><text x="5.3807%" y="1199.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (5 samples, 0.05%)</title><rect x="5.2609%" y="1173" width="0.0542%" height="15" fill="rgb(235,160,14)" fg:x="485" fg:w="5"/><text x="5.5109%" y="1183.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.01%)</title><rect x="5.3043%" y="1157" width="0.0108%" height="15" fill="rgb(212,155,44)" fg:x="489" fg:w="1"/><text x="5.5543%" y="1167.50"></text></g><g><title>ntdll`NtAllocateVirtualMemory (1 samples, 0.01%)</title><rect x="5.3043%" y="1141" width="0.0108%" height="15" fill="rgb(226,2,50)" fg:x="489" fg:w="1"/><text x="5.5543%" y="1151.50"></text></g><g><title>ntdll`NtProtectVirtualMemory (1 samples, 0.01%)</title><rect x="5.4344%" y="1141" width="0.0108%" height="15" fill="rgb(234,177,6)" fg:x="501" fg:w="1"/><text x="5.6844%" y="1151.50"></text></g><g><title>ntdll`RtlEqualUnicodeString (2 samples, 0.02%)</title><rect x="5.4344%" y="1173" width="0.0217%" height="15" fill="rgb(217,24,9)" fg:x="501" fg:w="2"/><text x="5.6844%" y="1183.50"></text></g><g><title>ntdll`RtlSetUserValueHeap (2 samples, 0.02%)</title><rect x="5.4344%" y="1157" width="0.0217%" height="15" fill="rgb(220,13,46)" fg:x="501" fg:w="2"/><text x="5.6844%" y="1167.50"></text></g><g><title>ntdll`RtlFreeHeap (1 samples, 0.01%)</title><rect x="5.4453%" y="1141" width="0.0108%" height="15" fill="rgb(239,221,27)" fg:x="502" fg:w="1"/><text x="5.6953%" y="1151.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.01%)</title><rect x="5.4453%" y="1125" width="0.0108%" height="15" fill="rgb(222,198,25)" fg:x="502" fg:w="1"/><text x="5.6953%" y="1135.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.01%)</title><rect x="5.4453%" y="1109" width="0.0108%" height="15" fill="rgb(211,99,13)" fg:x="502" fg:w="1"/><text x="5.6953%" y="1119.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.01%)</title><rect x="5.4453%" y="1093" width="0.0108%" height="15" fill="rgb(232,111,31)" fg:x="502" fg:w="1"/><text x="5.6953%" y="1103.50"></text></g><g><title>ntdll`TpWaitForWait (1 samples, 0.01%)</title><rect x="5.4453%" y="1077" width="0.0108%" height="15" fill="rgb(245,82,37)" fg:x="502" fg:w="1"/><text x="5.6953%" y="1087.50"></text></g><g><title>ntdll`NtFreeVirtualMemory (1 samples, 0.01%)</title><rect x="5.4453%" y="1061" width="0.0108%" height="15" fill="rgb(227,149,46)" fg:x="502" fg:w="1"/><text x="5.6953%" y="1071.50"></text></g><g><title>ntdll`RtlFreeHeap (35 samples, 0.38%)</title><rect x="5.0982%" y="1205" width="0.3797%" height="15" fill="rgb(218,36,50)" fg:x="470" fg:w="35"/><text x="5.3482%" y="1215.50"></text></g><g><title>ntdll`memset (15 samples, 0.16%)</title><rect x="5.3151%" y="1189" width="0.1627%" height="15" fill="rgb(226,80,48)" fg:x="490" fg:w="15"/><text x="5.5651%" y="1199.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (2 samples, 0.02%)</title><rect x="5.4561%" y="1173" width="0.0217%" height="15" fill="rgb(238,224,15)" fg:x="503" fg:w="2"/><text x="5.7061%" y="1183.50"></text></g><g><title>stelpatch-benchmark`core::ptr::drop_in_place&lt;slice2$&lt;enum2$ (3 samples, 0.03%)</title><rect x="5.4778%" y="1205" width="0.0325%" height="15" fill="rgb(241,136,10)" fg:x="505" fg:w="3"/><text x="5.7278%" y="1215.50"></text></g><g><title>KERNEL32`HeapFree (1 samples, 0.01%)</title><rect x="5.9659%" y="1189" width="0.0108%" height="15" fill="rgb(208,32,45)" fg:x="550" fg:w="1"/><text x="6.2159%" y="1199.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (2 samples, 0.02%)</title><rect x="5.9768%" y="1173" width="0.0217%" height="15" fill="rgb(207,135,9)" fg:x="551" fg:w="2"/><text x="6.2268%" y="1183.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.01%)</title><rect x="6.1070%" y="1077" width="0.0108%" height="15" fill="rgb(206,86,44)" fg:x="563" fg:w="1"/><text x="6.3570%" y="1087.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.01%)</title><rect x="6.1070%" y="1061" width="0.0108%" height="15" fill="rgb(245,177,15)" fg:x="563" fg:w="1"/><text x="6.3570%" y="1071.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.01%)</title><rect x="6.1070%" y="1045" width="0.0108%" height="15" fill="rgb(206,64,50)" fg:x="563" fg:w="1"/><text x="6.3570%" y="1055.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.01%)</title><rect x="6.1070%" y="1029" width="0.0108%" height="15" fill="rgb(234,36,40)" fg:x="563" fg:w="1"/><text x="6.3570%" y="1039.50"></text></g><g><title>ntdll`RtlFreeHeap (14 samples, 0.15%)</title><rect x="5.9768%" y="1189" width="0.1519%" height="15" fill="rgb(213,64,8)" fg:x="551" fg:w="14"/><text x="6.2268%" y="1199.50"></text></g><g><title>ntdll`memset (12 samples, 0.13%)</title><rect x="5.9985%" y="1173" width="0.1302%" height="15" fill="rgb(210,75,36)" fg:x="553" fg:w="12"/><text x="6.2485%" y="1183.50"></text></g><g><title>ntdll`RtlEqualUnicodeString (2 samples, 0.02%)</title><rect x="6.1070%" y="1157" width="0.0217%" height="15" fill="rgb(229,88,21)" fg:x="563" fg:w="2"/><text x="6.3570%" y="1167.50"></text></g><g><title>ntdll`RtlSetUserValueHeap (2 samples, 0.02%)</title><rect x="6.1070%" y="1141" width="0.0217%" height="15" fill="rgb(252,204,47)" fg:x="563" fg:w="2"/><text x="6.3570%" y="1151.50"></text></g><g><title>ntdll`RtlFreeHeap (2 samples, 0.02%)</title><rect x="6.1070%" y="1125" width="0.0217%" height="15" fill="rgb(208,77,27)" fg:x="563" fg:w="2"/><text x="6.3570%" y="1135.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (2 samples, 0.02%)</title><rect x="6.1070%" y="1109" width="0.0217%" height="15" fill="rgb(221,76,26)" fg:x="563" fg:w="2"/><text x="6.3570%" y="1119.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (2 samples, 0.02%)</title><rect x="6.1070%" y="1093" width="0.0217%" height="15" fill="rgb(225,139,18)" fg:x="563" fg:w="2"/><text x="6.3570%" y="1103.50"></text></g><g><title>ntdll`RtlRunOnceBeginInitialize (1 samples, 0.01%)</title><rect x="6.1178%" y="1077" width="0.0108%" height="15" fill="rgb(230,137,11)" fg:x="564" fg:w="1"/><text x="6.3678%" y="1087.50"></text></g><g><title>ntdll`RtlFreeHeap (6 samples, 0.07%)</title><rect x="6.3239%" y="1173" width="0.0651%" height="15" fill="rgb(212,28,1)" fg:x="583" fg:w="6"/><text x="6.5739%" y="1183.50"></text></g><g><title>ntdll`memset (6 samples, 0.07%)</title><rect x="6.3239%" y="1157" width="0.0651%" height="15" fill="rgb(248,164,17)" fg:x="583" fg:w="6"/><text x="6.5739%" y="1167.50"></text></g><g><title>ntdll`RtlFreeHeap (3 samples, 0.03%)</title><rect x="6.4975%" y="1157" width="0.0325%" height="15" fill="rgb(222,171,42)" fg:x="599" fg:w="3"/><text x="6.7475%" y="1167.50"></text></g><g><title>ntdll`memset (3 samples, 0.03%)</title><rect x="6.4975%" y="1141" width="0.0325%" height="15" fill="rgb(243,84,45)" fg:x="599" fg:w="3"/><text x="6.7475%" y="1151.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.01%)</title><rect x="6.5517%" y="1125" width="0.0108%" height="15" fill="rgb(252,49,23)" fg:x="604" fg:w="1"/><text x="6.8017%" y="1135.50"></text></g><g><title>ntdll`RtlFreeHeap (3 samples, 0.03%)</title><rect x="6.5517%" y="1141" width="0.0325%" height="15" fill="rgb(215,19,7)" fg:x="604" fg:w="3"/><text x="6.8017%" y="1151.50"></text></g><g><title>ntdll`memset (2 samples, 0.02%)</title><rect x="6.5625%" y="1125" width="0.0217%" height="15" fill="rgb(238,81,41)" fg:x="605" fg:w="2"/><text x="6.8125%" y="1135.50"></text></g><g><title>ntdll`RtlFreeHeap (2 samples, 0.02%)</title><rect x="6.6168%" y="1125" width="0.0217%" height="15" fill="rgb(210,199,37)" fg:x="610" fg:w="2"/><text x="6.8668%" y="1135.50"></text></g><g><title>ntdll`memset (2 samples, 0.02%)</title><rect x="6.6168%" y="1109" width="0.0217%" height="15" fill="rgb(244,192,49)" fg:x="610" fg:w="2"/><text x="6.8668%" y="1119.50"></text></g><g><title>ntdll`RtlFreeHeap (1 samples, 0.01%)</title><rect x="6.6385%" y="1109" width="0.0108%" height="15" fill="rgb(226,211,11)" fg:x="612" fg:w="1"/><text x="6.8885%" y="1119.50"></text></g><g><title>ntdll`memset (1 samples, 0.01%)</title><rect x="6.6385%" y="1093" width="0.0108%" height="15" fill="rgb(236,162,54)" fg:x="612" fg:w="1"/><text x="6.8885%" y="1103.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::impl$17::drop&lt;tuple$ (562 samples, 6.10%)</title><rect x="0.5641%" y="1285" width="6.0961%" height="15" fill="rgb(220,229,9)" fg:x="52" fg:w="562"/><text x="0.8141%" y="1295.50">stelpatc..</text></g><g><title>stelpatch-benchmark`hashbrown::raw::impl$17::drop&lt;tuple$ (559 samples, 6.06%)</title><rect x="0.5966%" y="1269" width="6.0636%" height="15" fill="rgb(250,87,22)" fg:x="55" fg:w="559"/><text x="0.8466%" y="1279.50">stelpatc..</text></g><g><title>stelpatch-benchmark`hashbrown::raw::impl$17::drop&lt;tuple$ (478 samples, 5.18%)</title><rect x="1.4752%" y="1253" width="5.1849%" height="15" fill="rgb(239,43,17)" fg:x="136" fg:w="478"/><text x="1.7252%" y="1263.50">stelpa..</text></g><g><title>stelpatch-benchmark`hashbrown::raw::impl$17::drop&lt;tuple$ (327 samples, 3.55%)</title><rect x="3.1131%" y="1237" width="3.5470%" height="15" fill="rgb(231,177,25)" fg:x="287" fg:w="327"/><text x="3.3631%" y="1247.50">stel..</text></g><g><title>stelpatch-benchmark`hashbrown::raw::impl$17::drop&lt;tuple$ (215 samples, 2.33%)</title><rect x="4.3280%" y="1221" width="2.3321%" height="15" fill="rgb(219,179,1)" fg:x="399" fg:w="215"/><text x="4.5780%" y="1231.50">s..</text></g><g><title>stelpatch-benchmark`hashbrown::raw::impl$17::drop&lt;tuple$ (106 samples, 1.15%)</title><rect x="5.5104%" y="1205" width="1.1498%" height="15" fill="rgb(238,219,53)" fg:x="508" fg:w="106"/><text x="5.7604%" y="1215.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::impl$17::drop&lt;tuple$ (49 samples, 0.53%)</title><rect x="6.1286%" y="1189" width="0.5315%" height="15" fill="rgb(232,167,36)" fg:x="565" fg:w="49"/><text x="6.3786%" y="1199.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::impl$17::drop&lt;tuple$ (25 samples, 0.27%)</title><rect x="6.3890%" y="1173" width="0.2712%" height="15" fill="rgb(244,19,51)" fg:x="589" fg:w="25"/><text x="6.6390%" y="1183.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::impl$17::drop&lt;tuple$ (12 samples, 0.13%)</title><rect x="6.5300%" y="1157" width="0.1302%" height="15" fill="rgb(224,6,22)" fg:x="602" fg:w="12"/><text x="6.7800%" y="1167.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::impl$17::drop&lt;tuple$ (7 samples, 0.08%)</title><rect x="6.5842%" y="1141" width="0.0759%" height="15" fill="rgb(224,145,5)" fg:x="607" fg:w="7"/><text x="6.8342%" y="1151.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::impl$17::drop&lt;tuple$ (2 samples, 0.02%)</title><rect x="6.6385%" y="1125" width="0.0217%" height="15" fill="rgb(234,130,49)" fg:x="612" fg:w="2"/><text x="6.8885%" y="1135.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::impl$17::drop&lt;tuple$ (1 samples, 0.01%)</title><rect x="6.6493%" y="1109" width="0.0108%" height="15" fill="rgb(254,6,2)" fg:x="613" fg:w="1"/><text x="6.8993%" y="1119.50"></text></g><g><title>ntdll`RtlFreeHeap (1 samples, 0.01%)</title><rect x="6.6493%" y="1093" width="0.0108%" height="15" fill="rgb(208,96,46)" fg:x="613" fg:w="1"/><text x="6.8993%" y="1103.50"></text></g><g><title>ntdll`LdrShutdownThread (1 samples, 0.01%)</title><rect x="6.6602%" y="1045" width="0.0108%" height="15" fill="rgb(239,3,39)" fg:x="614" fg:w="1"/><text x="6.9102%" y="1055.50"></text></g><g><title>ntdll`RtlVirtualUnwind (1 samples, 0.01%)</title><rect x="6.6602%" y="1029" width="0.0108%" height="15" fill="rgb(233,210,1)" fg:x="614" fg:w="1"/><text x="6.9102%" y="1039.50"></text></g><g><title>ntdll`LdrUnloadAlternateResourceModuleEx (2 samples, 0.02%)</title><rect x="6.6602%" y="1093" width="0.0217%" height="15" fill="rgb(244,137,37)" fg:x="614" fg:w="2"/><text x="6.9102%" y="1103.50"></text></g><g><title>ntdll`RtlReleaseActivationContext (2 samples, 0.02%)</title><rect x="6.6602%" y="1077" width="0.0217%" height="15" fill="rgb(240,136,2)" fg:x="614" fg:w="2"/><text x="6.9102%" y="1087.50"></text></g><g><title>ntdll`RtlIsCriticalSectionLockedByThread (2 samples, 0.02%)</title><rect x="6.6602%" y="1061" width="0.0217%" height="15" fill="rgb(239,18,37)" fg:x="614" fg:w="2"/><text x="6.9102%" y="1071.50"></text></g><g><title>ntdll`RtlIsCriticalSectionLockedByThread (1 samples, 0.01%)</title><rect x="6.6710%" y="1045" width="0.0108%" height="15" fill="rgb(218,185,22)" fg:x="615" fg:w="1"/><text x="6.9210%" y="1055.50"></text></g><g><title>ntdll`ZwMapViewOfSection (1 samples, 0.01%)</title><rect x="6.6710%" y="1029" width="0.0108%" height="15" fill="rgb(225,218,4)" fg:x="615" fg:w="1"/><text x="6.9210%" y="1039.50"></text></g><g><title>bcrypt`BCryptDecrypt (3 samples, 0.03%)</title><rect x="6.6602%" y="1189" width="0.0325%" height="15" fill="rgb(230,182,32)" fg:x="614" fg:w="3"/><text x="6.9102%" y="1199.50"></text></g><g><title>bcrypt`BCryptDecrypt (3 samples, 0.03%)</title><rect x="6.6602%" y="1173" width="0.0325%" height="15" fill="rgb(242,56,43)" fg:x="614" fg:w="3"/><text x="6.9102%" y="1183.50"></text></g><g><title>KERNELBASE`LoadLibraryExW (3 samples, 0.03%)</title><rect x="6.6602%" y="1157" width="0.0325%" height="15" fill="rgb(233,99,24)" fg:x="614" fg:w="3"/><text x="6.9102%" y="1167.50"></text></g><g><title>ntdll`LdrLoadDll (3 samples, 0.03%)</title><rect x="6.6602%" y="1141" width="0.0325%" height="15" fill="rgb(234,209,42)" fg:x="614" fg:w="3"/><text x="6.9102%" y="1151.50"></text></g><g><title>ntdll`RtlDosPathNameToNtPathName_U (3 samples, 0.03%)</title><rect x="6.6602%" y="1125" width="0.0325%" height="15" fill="rgb(227,7,12)" fg:x="614" fg:w="3"/><text x="6.9102%" y="1135.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (3 samples, 0.03%)</title><rect x="6.6602%" y="1109" width="0.0325%" height="15" fill="rgb(245,203,43)" fg:x="614" fg:w="3"/><text x="6.9102%" y="1119.50"></text></g><g><title>ntdll`RtlSwitchedVVI (1 samples, 0.01%)</title><rect x="6.6819%" y="1093" width="0.0108%" height="15" fill="rgb(238,205,33)" fg:x="616" fg:w="1"/><text x="6.9319%" y="1103.50"></text></g><g><title>ntdll`LdrGetProcedureAddressEx (1 samples, 0.01%)</title><rect x="6.6819%" y="1077" width="0.0108%" height="15" fill="rgb(231,56,7)" fg:x="616" fg:w="1"/><text x="6.9319%" y="1087.50"></text></g><g><title>ntdll`LdrGetProcedureAddressEx (1 samples, 0.01%)</title><rect x="6.6819%" y="1061" width="0.0108%" height="15" fill="rgb(244,186,29)" fg:x="616" fg:w="1"/><text x="6.9319%" y="1071.50"></text></g><g><title>ntdll`RtlActivateActivationContextUnsafeFast (1 samples, 0.01%)</title><rect x="6.6819%" y="1045" width="0.0108%" height="15" fill="rgb(234,111,31)" fg:x="616" fg:w="1"/><text x="6.9319%" y="1055.50"></text></g><g><title>bcryptprimitives`GetKeyDerivationInterface (1 samples, 0.01%)</title><rect x="6.6819%" y="1029" width="0.0108%" height="15" fill="rgb(241,149,10)" fg:x="616" fg:w="1"/><text x="6.9319%" y="1039.50"></text></g><g><title>bcryptprimitives`ProcessPrng (1 samples, 0.01%)</title><rect x="6.6819%" y="1013" width="0.0108%" height="15" fill="rgb(249,206,44)" fg:x="616" fg:w="1"/><text x="6.9319%" y="1023.50"></text></g><g><title>bcryptprimitives`ProcessPrng (1 samples, 0.01%)</title><rect x="6.6819%" y="997" width="0.0108%" height="15" fill="rgb(251,153,30)" fg:x="616" fg:w="1"/><text x="6.9319%" y="1007.50"></text></g><g><title>bcryptprimitives`ProcessPrng (1 samples, 0.01%)</title><rect x="6.6819%" y="981" width="0.0108%" height="15" fill="rgb(239,152,38)" fg:x="616" fg:w="1"/><text x="6.9319%" y="991.50"></text></g><g><title>ntdll`NtOpenKey (1 samples, 0.01%)</title><rect x="6.6819%" y="965" width="0.0108%" height="15" fill="rgb(249,139,47)" fg:x="616" fg:w="1"/><text x="6.9319%" y="975.50"></text></g><g><title>bcrypt`BCryptOpenAlgorithmProvider (4 samples, 0.04%)</title><rect x="6.6602%" y="1205" width="0.0434%" height="15" fill="rgb(244,64,35)" fg:x="614" fg:w="4"/><text x="6.9102%" y="1215.50"></text></g><g><title>bcrypt`BCryptResolveProviders (1 samples, 0.01%)</title><rect x="6.6927%" y="1189" width="0.0108%" height="15" fill="rgb(216,46,15)" fg:x="617" fg:w="1"/><text x="6.9427%" y="1199.50"></text></g><g><title>bcrypt`BCryptGetProperty (1 samples, 0.01%)</title><rect x="6.6927%" y="1173" width="0.0108%" height="15" fill="rgb(250,74,19)" fg:x="617" fg:w="1"/><text x="6.9427%" y="1183.50"></text></g><g><title>bcrypt`BCryptOpenAlgorithmProvider (1 samples, 0.01%)</title><rect x="6.6927%" y="1157" width="0.0108%" height="15" fill="rgb(249,42,33)" fg:x="617" fg:w="1"/><text x="6.9427%" y="1167.50"></text></g><g><title>ntdll`NtDeviceIoControlFile (1 samples, 0.01%)</title><rect x="6.6927%" y="1141" width="0.0108%" height="15" fill="rgb(242,149,17)" fg:x="617" fg:w="1"/><text x="6.9427%" y="1151.50"></text></g><g><title>stelpatch-benchmark`lasso::multi_threaded::impl$2::default (5 samples, 0.05%)</title><rect x="6.6602%" y="1285" width="0.0542%" height="15" fill="rgb(244,29,21)" fg:x="614" fg:w="5"/><text x="6.9102%" y="1295.50"></text></g><g><title>stelpatch-benchmark`once_cell::race::once_box::OnceBox&lt;array$&lt;array$&lt;u64,4&gt;,2&gt; &gt;::get_or_init&lt;array$&lt;array$ (5 samples, 0.05%)</title><rect x="6.6602%" y="1269" width="0.0542%" height="15" fill="rgb(220,130,37)" fg:x="614" fg:w="5"/><text x="6.9102%" y="1279.50"></text></g><g><title>stelpatch-benchmark`getrandom::getrandom (5 samples, 0.05%)</title><rect x="6.6602%" y="1253" width="0.0542%" height="15" fill="rgb(211,67,2)" fg:x="614" fg:w="5"/><text x="6.9102%" y="1263.50"></text></g><g><title>bcrypt`BCryptGenRandom (5 samples, 0.05%)</title><rect x="6.6602%" y="1237" width="0.0542%" height="15" fill="rgb(235,68,52)" fg:x="614" fg:w="5"/><text x="6.9102%" y="1247.50"></text></g><g><title>bcrypt`BCryptGenRandom (5 samples, 0.05%)</title><rect x="6.6602%" y="1221" width="0.0542%" height="15" fill="rgb(246,142,3)" fg:x="614" fg:w="5"/><text x="6.9102%" y="1231.50"></text></g><g><title>bcryptprimitives`GetHashInterface (1 samples, 0.01%)</title><rect x="6.7035%" y="1205" width="0.0108%" height="15" fill="rgb(241,25,7)" fg:x="618" fg:w="1"/><text x="6.9535%" y="1215.50"></text></g><g><title>bcryptprimitives`GetHashInterface (1 samples, 0.01%)</title><rect x="6.7035%" y="1189" width="0.0108%" height="15" fill="rgb(242,119,39)" fg:x="618" fg:w="1"/><text x="6.9535%" y="1199.50"></text></g><g><title>bcryptprimitives`ProcessPrng (1 samples, 0.01%)</title><rect x="6.7035%" y="1173" width="0.0108%" height="15" fill="rgb(241,98,45)" fg:x="618" fg:w="1"/><text x="6.9535%" y="1183.50"></text></g><g><title>bcryptprimitives`ProcessPrng (1 samples, 0.01%)</title><rect x="6.7035%" y="1157" width="0.0108%" height="15" fill="rgb(254,28,30)" fg:x="618" fg:w="1"/><text x="6.9535%" y="1167.50"></text></g><g><title>ntdll`RtlGetCurrentProcessorNumberEx (1 samples, 0.01%)</title><rect x="6.7035%" y="1141" width="0.0108%" height="15" fill="rgb(241,142,54)" fg:x="618" fg:w="1"/><text x="6.9535%" y="1151.50"></text></g><g><title>KERNELBASE`ReadStateAtomValue (1 samples, 0.01%)</title><rect x="6.7144%" y="1189" width="0.0108%" height="15" fill="rgb(222,85,15)" fg:x="619" fg:w="1"/><text x="6.9644%" y="1199.50"></text></g><g><title>KERNELBASE`ReadStateAtomValue (1 samples, 0.01%)</title><rect x="6.7144%" y="1173" width="0.0108%" height="15" fill="rgb(210,85,47)" fg:x="619" fg:w="1"/><text x="6.9644%" y="1183.50"></text></g><g><title>KERNELBASE`time (1 samples, 0.01%)</title><rect x="6.7144%" y="1157" width="0.0108%" height="15" fill="rgb(224,206,25)" fg:x="619" fg:w="1"/><text x="6.9644%" y="1167.50"></text></g><g><title>KERNELBASE`time (1 samples, 0.01%)</title><rect x="6.7144%" y="1141" width="0.0108%" height="15" fill="rgb(243,201,19)" fg:x="619" fg:w="1"/><text x="6.9644%" y="1151.50"></text></g><g><title>KERNELBASE`time (1 samples, 0.01%)</title><rect x="6.7144%" y="1125" width="0.0108%" height="15" fill="rgb(236,59,4)" fg:x="619" fg:w="1"/><text x="6.9644%" y="1135.50"></text></g><g><title>KERNELBASE`time (1 samples, 0.01%)</title><rect x="6.7144%" y="1109" width="0.0108%" height="15" fill="rgb(254,179,45)" fg:x="619" fg:w="1"/><text x="6.9644%" y="1119.50"></text></g><g><title>KERNELBASE`time (1 samples, 0.01%)</title><rect x="6.7144%" y="1093" width="0.0108%" height="15" fill="rgb(226,14,10)" fg:x="619" fg:w="1"/><text x="6.9644%" y="1103.50"></text></g><g><title>ntdll`ZwQueryWnfStateData (1 samples, 0.01%)</title><rect x="6.7144%" y="1077" width="0.0108%" height="15" fill="rgb(244,27,41)" fg:x="619" fg:w="1"/><text x="6.9644%" y="1087.50"></text></g><g><title>stelpatch-benchmark`std::process::exit (2 samples, 0.02%)</title><rect x="6.7144%" y="1285" width="0.0217%" height="15" fill="rgb(235,35,32)" fg:x="619" fg:w="2"/><text x="6.9644%" y="1295.50"></text></g><g><title>stelpatch-benchmark`std::sys::windows::os::exit (2 samples, 0.02%)</title><rect x="6.7144%" y="1269" width="0.0217%" height="15" fill="rgb(218,68,31)" fg:x="619" fg:w="2"/><text x="6.9644%" y="1279.50"></text></g><g><title>KERNEL32`FatalExit (2 samples, 0.02%)</title><rect x="6.7144%" y="1253" width="0.0217%" height="15" fill="rgb(207,120,37)" fg:x="619" fg:w="2"/><text x="6.9644%" y="1263.50"></text></g><g><title>ntdll`RtlExitUserProcess (2 samples, 0.02%)</title><rect x="6.7144%" y="1237" width="0.0217%" height="15" fill="rgb(227,98,0)" fg:x="619" fg:w="2"/><text x="6.9644%" y="1247.50"></text></g><g><title>ntdll`LdrShutdownProcess (2 samples, 0.02%)</title><rect x="6.7144%" y="1221" width="0.0217%" height="15" fill="rgb(207,7,3)" fg:x="619" fg:w="2"/><text x="6.9644%" y="1231.50"></text></g><g><title>ntdll`RtlActivateActivationContextUnsafeFast (2 samples, 0.02%)</title><rect x="6.7144%" y="1205" width="0.0217%" height="15" fill="rgb(206,98,19)" fg:x="619" fg:w="2"/><text x="6.9644%" y="1215.50"></text></g><g><title>bcrypt`BCryptSetAuditingInterface (1 samples, 0.01%)</title><rect x="6.7252%" y="1189" width="0.0108%" height="15" fill="rgb(217,5,26)" fg:x="620" fg:w="1"/><text x="6.9752%" y="1199.50"></text></g><g><title>bcrypt`BCryptVerifySignature (1 samples, 0.01%)</title><rect x="6.7252%" y="1173" width="0.0108%" height="15" fill="rgb(235,190,38)" fg:x="620" fg:w="1"/><text x="6.9752%" y="1183.50"></text></g><g><title>ntdll`EtwUnregisterTraceGuids (1 samples, 0.01%)</title><rect x="6.7252%" y="1157" width="0.0108%" height="15" fill="rgb(247,86,24)" fg:x="620" fg:w="1"/><text x="6.9752%" y="1167.50"></text></g><g><title>ntdll`EtwNotificationUnregister (1 samples, 0.01%)</title><rect x="6.7252%" y="1141" width="0.0108%" height="15" fill="rgb(205,101,16)" fg:x="620" fg:w="1"/><text x="6.9752%" y="1151.50"></text></g><g><title>ntdll`NtClose (1 samples, 0.01%)</title><rect x="6.7252%" y="1125" width="0.0108%" height="15" fill="rgb(246,168,33)" fg:x="620" fg:w="1"/><text x="6.9752%" y="1135.50"></text></g><g><title>stelpatch-benchmark`std::fs::impl$24::next (1 samples, 0.01%)</title><rect x="6.7361%" y="1221" width="0.0108%" height="15" fill="rgb(231,114,1)" fg:x="621" fg:w="1"/><text x="6.9861%" y="1231.50"></text></g><g><title>stelpatch-benchmark`std::sys::windows::fs::impl$5::next (1 samples, 0.01%)</title><rect x="6.7361%" y="1205" width="0.0108%" height="15" fill="rgb(207,184,53)" fg:x="621" fg:w="1"/><text x="6.9861%" y="1215.50"></text></g><g><title>KERNELBASE`FindNextFileW (1 samples, 0.01%)</title><rect x="6.7361%" y="1189" width="0.0108%" height="15" fill="rgb(224,95,51)" fg:x="621" fg:w="1"/><text x="6.9861%" y="1199.50"></text></g><g><title>ntdll`NtQueryDirectoryFileEx (1 samples, 0.01%)</title><rect x="6.7361%" y="1173" width="0.0108%" height="15" fill="rgb(212,188,45)" fg:x="621" fg:w="1"/><text x="6.9861%" y="1183.50"></text></g><g><title>stelpatch-benchmark`std::io::impl$26::next&lt;std::io::buffered::bufreader::BufReader (1 samples, 0.01%)</title><rect x="6.7469%" y="1221" width="0.0108%" height="15" fill="rgb(223,154,38)" fg:x="622" fg:w="1"/><text x="6.9969%" y="1231.50"></text></g><g><title>stelpatch-benchmark`std::io::append_to_string&lt;std::io::BufRead::read_line::closure_env$0&lt;std::io::buffered::bufreader::BufReader (1 samples, 0.01%)</title><rect x="6.7469%" y="1205" width="0.0108%" height="15" fill="rgb(251,22,52)" fg:x="622" fg:w="1"/><text x="6.9969%" y="1215.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::impl$1::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="6.7469%" y="1189" width="0.0108%" height="15" fill="rgb(229,209,22)" fg:x="622" fg:w="1"/><text x="6.9969%" y="1199.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="6.7469%" y="1173" width="0.0108%" height="15" fill="rgb(234,138,34)" fg:x="622" fg:w="1"/><text x="6.9969%" y="1183.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="6.7469%" y="1157" width="0.0108%" height="15" fill="rgb(212,95,11)" fg:x="622" fg:w="1"/><text x="6.9969%" y="1167.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="6.7469%" y="1141" width="0.0108%" height="15" fill="rgb(240,179,47)" fg:x="622" fg:w="1"/><text x="6.9969%" y="1151.50"></text></g><g><title>KERNELBASE`CreateFileW (1 samples, 0.01%)</title><rect x="6.7578%" y="1205" width="0.0108%" height="15" fill="rgb(240,163,11)" fg:x="623" fg:w="1"/><text x="7.0078%" y="1215.50"></text></g><g><title>KERNELBASE`CreateFileW (1 samples, 0.01%)</title><rect x="6.7578%" y="1189" width="0.0108%" height="15" fill="rgb(236,37,12)" fg:x="623" fg:w="1"/><text x="7.0078%" y="1199.50"></text></g><g><title>ntdll`ZwCreateFile (1 samples, 0.01%)</title><rect x="6.7578%" y="1173" width="0.0108%" height="15" fill="rgb(232,164,16)" fg:x="623" fg:w="1"/><text x="7.0078%" y="1183.50"></text></g><g><title>stelpatch-benchmark`std::sys::windows::fs::File::open (2 samples, 0.02%)</title><rect x="6.7578%" y="1221" width="0.0217%" height="15" fill="rgb(244,205,15)" fg:x="623" fg:w="2"/><text x="7.0078%" y="1231.50"></text></g><g><title>stelpatch-benchmark`std::sys::windows::path::get_long_path (1 samples, 0.01%)</title><rect x="6.7686%" y="1205" width="0.0108%" height="15" fill="rgb(223,117,47)" fg:x="624" fg:w="1"/><text x="7.0186%" y="1215.50"></text></g><g><title>KERNELBASE`RemoveDllDirectory (1 samples, 0.01%)</title><rect x="6.7795%" y="1173" width="0.0108%" height="15" fill="rgb(244,107,35)" fg:x="625" fg:w="1"/><text x="7.0295%" y="1183.50"></text></g><g><title>ntdll`NtQueryDirectoryFileEx (1 samples, 0.01%)</title><rect x="6.7903%" y="1173" width="0.0108%" height="15" fill="rgb(205,140,8)" fg:x="626" fg:w="1"/><text x="7.0403%" y="1183.50"></text></g><g><title>KERNELBASE`FindFirstFileW (4 samples, 0.04%)</title><rect x="6.7795%" y="1205" width="0.0434%" height="15" fill="rgb(228,84,46)" fg:x="625" fg:w="4"/><text x="7.0295%" y="1215.50"></text></g><g><title>KERNELBASE`FindFirstFileExW (4 samples, 0.04%)</title><rect x="6.7795%" y="1189" width="0.0434%" height="15" fill="rgb(254,188,9)" fg:x="625" fg:w="4"/><text x="7.0295%" y="1199.50"></text></g><g><title>ntdll`ZwOpenFile (2 samples, 0.02%)</title><rect x="6.8012%" y="1173" width="0.0217%" height="15" fill="rgb(206,112,54)" fg:x="627" fg:w="2"/><text x="7.0512%" y="1183.50"></text></g><g><title>stelpatch-benchmark`std::sys_common::once::queue::Once::call (9 samples, 0.10%)</title><rect x="6.7361%" y="1269" width="0.0976%" height="15" fill="rgb(216,84,49)" fg:x="621" fg:w="9"/><text x="6.9861%" y="1279.50"></text></g><g><title>stelpatch-benchmark`std::sync::once::impl$2::call_once::closure$0&lt;lazy_static::lazy::impl$0::get::closure_env$0&lt;enum2$&lt;core::option::Option&lt;std::path::PathBuf&gt; &gt;,enum2$&lt;core::option::Option&lt;std::path::PathBuf&gt; &gt; (*) (9 samples, 0.10%)</title><rect x="6.7361%" y="1253" width="0.0976%" height="15" fill="rgb(214,194,35)" fg:x="621" fg:w="9"/><text x="6.9861%" y="1263.50"></text></g><g><title>stelpatch-benchmark`stelpatch::playset::base_game::BaseGame::get_install_directory_windows (9 samples, 0.10%)</title><rect x="6.7361%" y="1237" width="0.0976%" height="15" fill="rgb(249,28,3)" fg:x="621" fg:w="9"/><text x="6.9861%" y="1247.50"></text></g><g><title>stelpatch-benchmark`std::sys::windows::fs::readdir (5 samples, 0.05%)</title><rect x="6.7795%" y="1221" width="0.0542%" height="15" fill="rgb(222,56,52)" fg:x="625" fg:w="5"/><text x="7.0295%" y="1231.50"></text></g><g><title>stelpatch-benchmark`std::sys::windows::path::get_long_path (1 samples, 0.01%)</title><rect x="6.8229%" y="1205" width="0.0108%" height="15" fill="rgb(245,217,50)" fg:x="629" fg:w="1"/><text x="7.0729%" y="1215.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.01%)</title><rect x="6.8446%" y="1237" width="0.0108%" height="15" fill="rgb(213,201,24)" fg:x="631" fg:w="1"/><text x="7.0946%" y="1247.50"></text></g><g><title>ntdll`RtlFreeHeap (2 samples, 0.02%)</title><rect x="6.8446%" y="1253" width="0.0217%" height="15" fill="rgb(248,116,28)" fg:x="631" fg:w="2"/><text x="7.0946%" y="1263.50"></text></g><g><title>ntdll`memset (1 samples, 0.01%)</title><rect x="6.8554%" y="1237" width="0.0108%" height="15" fill="rgb(219,72,43)" fg:x="632" fg:w="1"/><text x="7.1054%" y="1247.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::RawVec&lt;enum2$&lt;clap_builder::error::context::ContextValue&gt;,alloc::alloc::Global&gt;::reserve_for_push&lt;enum2$ (1 samples, 0.01%)</title><rect x="6.8663%" y="1253" width="0.0108%" height="15" fill="rgb(209,138,14)" fg:x="633" fg:w="1"/><text x="7.1163%" y="1263.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="6.8663%" y="1237" width="0.0108%" height="15" fill="rgb(222,18,33)" fg:x="633" fg:w="1"/><text x="7.1163%" y="1247.50"></text></g><g><title>ntdll`RtlReAllocateHeap (1 samples, 0.01%)</title><rect x="6.8663%" y="1221" width="0.0108%" height="15" fill="rgb(213,199,7)" fg:x="633" fg:w="1"/><text x="7.1163%" y="1231.50"></text></g><g><title>ntdll`RtlReAllocateHeap (1 samples, 0.01%)</title><rect x="6.8663%" y="1205" width="0.0108%" height="15" fill="rgb(250,110,10)" fg:x="633" fg:w="1"/><text x="7.1163%" y="1215.50"></text></g><g><title>ntdll`RtlReleaseSRWLockShared (1 samples, 0.01%)</title><rect x="6.8663%" y="1189" width="0.0108%" height="15" fill="rgb(248,123,6)" fg:x="633" fg:w="1"/><text x="7.1163%" y="1199.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="6.8663%" y="1173" width="0.0108%" height="15" fill="rgb(206,91,31)" fg:x="633" fg:w="1"/><text x="7.1163%" y="1183.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="6.8663%" y="1157" width="0.0108%" height="15" fill="rgb(211,154,13)" fg:x="633" fg:w="1"/><text x="7.1163%" y="1167.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.01%)</title><rect x="6.8663%" y="1141" width="0.0108%" height="15" fill="rgb(225,148,7)" fg:x="633" fg:w="1"/><text x="7.1163%" y="1151.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.01%)</title><rect x="6.8663%" y="1125" width="0.0108%" height="15" fill="rgb(220,160,43)" fg:x="633" fg:w="1"/><text x="7.1163%" y="1135.50"></text></g><g><title>ntdll`NtAllocateVirtualMemory (1 samples, 0.01%)</title><rect x="6.8663%" y="1109" width="0.0108%" height="15" fill="rgb(213,52,39)" fg:x="633" fg:w="1"/><text x="7.1163%" y="1119.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (4 samples, 0.04%)</title><rect x="6.9205%" y="1205" width="0.0434%" height="15" fill="rgb(243,137,7)" fg:x="638" fg:w="4"/><text x="7.1705%" y="1215.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (4 samples, 0.04%)</title><rect x="6.9205%" y="1189" width="0.0434%" height="15" fill="rgb(230,79,13)" fg:x="638" fg:w="4"/><text x="7.1705%" y="1199.50"></text></g><g><title>ntdll`RtlRunOnceBeginInitialize (1 samples, 0.01%)</title><rect x="6.9530%" y="1173" width="0.0108%" height="15" fill="rgb(247,105,23)" fg:x="641" fg:w="1"/><text x="7.2030%" y="1183.50"></text></g><g><title>ntdll`RtlFreeHeap (5 samples, 0.05%)</title><rect x="6.9205%" y="1221" width="0.0542%" height="15" fill="rgb(223,179,41)" fg:x="638" fg:w="5"/><text x="7.1705%" y="1231.50"></text></g><g><title>ntdll`memset (1 samples, 0.01%)</title><rect x="6.9639%" y="1205" width="0.0108%" height="15" fill="rgb(218,9,34)" fg:x="642" fg:w="1"/><text x="7.2139%" y="1215.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::impl$17::drop&lt;tuple$&lt;ref$ (1 samples, 0.01%)</title><rect x="6.9747%" y="1221" width="0.0108%" height="15" fill="rgb(222,106,8)" fg:x="643" fg:w="1"/><text x="7.2247%" y="1231.50"></text></g><g><title>KERNELBASE`BasepAdjustObjectAttributesForPrivateNamespace (1 samples, 0.01%)</title><rect x="6.9964%" y="1189" width="0.0108%" height="15" fill="rgb(211,220,0)" fg:x="645" fg:w="1"/><text x="7.2464%" y="1199.50"></text></g><g><title>ntdll`NtClose (95 samples, 1.03%)</title><rect x="7.0073%" y="1189" width="1.0305%" height="15" fill="rgb(229,52,16)" fg:x="646" fg:w="95"/><text x="7.2573%" y="1199.50"></text></g><g><title>KERNELBASE`CloseHandle (99 samples, 1.07%)</title><rect x="6.9964%" y="1205" width="1.0739%" height="15" fill="rgb(212,155,18)" fg:x="645" fg:w="99"/><text x="7.2464%" y="1215.50"></text></g><g><title>ntdll`SbSelectProcedure (3 samples, 0.03%)</title><rect x="8.0377%" y="1189" width="0.0325%" height="15" fill="rgb(242,21,14)" fg:x="741" fg:w="3"/><text x="8.2877%" y="1199.50"></text></g><g><title>ntdll`memset (1 samples, 0.01%)</title><rect x="8.0594%" y="1173" width="0.0108%" height="15" fill="rgb(222,19,48)" fg:x="743" fg:w="1"/><text x="8.3094%" y="1183.50"></text></g><g><title>ntdll`NtAllocateVirtualMemory (1 samples, 0.01%)</title><rect x="8.1679%" y="1157" width="0.0108%" height="15" fill="rgb(232,45,27)" fg:x="753" fg:w="1"/><text x="8.4179%" y="1167.50"></text></g><g><title>ntdll`RtlAllocateHeap (11 samples, 0.12%)</title><rect x="8.0703%" y="1205" width="0.1193%" height="15" fill="rgb(249,103,42)" fg:x="744" fg:w="11"/><text x="8.3203%" y="1215.50"></text></g><g><title>ntdll`RtlAllocateHeap (11 samples, 0.12%)</title><rect x="8.0703%" y="1189" width="0.1193%" height="15" fill="rgb(246,81,33)" fg:x="744" fg:w="11"/><text x="8.3203%" y="1199.50"></text></g><g><title>ntdll`RtlProtectHeap (3 samples, 0.03%)</title><rect x="8.1571%" y="1173" width="0.0325%" height="15" fill="rgb(252,33,42)" fg:x="752" fg:w="3"/><text x="8.4071%" y="1183.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.01%)</title><rect x="8.1788%" y="1157" width="0.0108%" height="15" fill="rgb(209,212,41)" fg:x="754" fg:w="1"/><text x="8.4288%" y="1167.50"></text></g><g><title>ntdll`NtAllocateVirtualMemory (1 samples, 0.01%)</title><rect x="8.1788%" y="1141" width="0.0108%" height="15" fill="rgb(207,154,6)" fg:x="754" fg:w="1"/><text x="8.4288%" y="1151.50"></text></g><g><title>stelpatch-benchmark`core::str::converts::from_utf8 (8 samples, 0.09%)</title><rect x="8.2113%" y="1189" width="0.0868%" height="15" fill="rgb(223,64,47)" fg:x="757" fg:w="8"/><text x="8.4613%" y="1199.50"></text></g><g><title>stelpatch-benchmark`std::sys::windows::handle::Handle::read (62 samples, 0.67%)</title><rect x="8.2981%" y="1173" width="0.6725%" height="15" fill="rgb(211,161,38)" fg:x="765" fg:w="62"/><text x="8.5481%" y="1183.50"></text></g><g><title>stelpatch-benchmark`std::sys::windows::handle::Handle::synchronous_read (62 samples, 0.67%)</title><rect x="8.2981%" y="1157" width="0.6725%" height="15" fill="rgb(219,138,40)" fg:x="765" fg:w="62"/><text x="8.5481%" y="1167.50"></text></g><g><title>ntdll`NtReadFile (62 samples, 0.67%)</title><rect x="8.2981%" y="1141" width="0.6725%" height="15" fill="rgb(241,228,46)" fg:x="765" fg:w="62"/><text x="8.5481%" y="1151.50"></text></g><g><title>stelpatch-benchmark`std::io::default_read_to_string (350 samples, 3.80%)</title><rect x="8.1896%" y="1205" width="3.7965%" height="15" fill="rgb(223,209,38)" fg:x="755" fg:w="350"/><text x="8.4396%" y="1215.50">stel..</text></g><g><title>stelpatch-benchmark`std::io::default_read_to_end (340 samples, 3.69%)</title><rect x="8.2981%" y="1189" width="3.6880%" height="15" fill="rgb(236,164,45)" fg:x="765" fg:w="340"/><text x="8.5481%" y="1199.50">stel..</text></g><g><title>stelpatch-benchmark`std::sys::windows::handle::Handle::read_buf (278 samples, 3.02%)</title><rect x="8.9706%" y="1173" width="3.0155%" height="15" fill="rgb(231,15,5)" fg:x="827" fg:w="278"/><text x="9.2206%" y="1183.50">ste..</text></g><g><title>stelpatch-benchmark`std::sys::windows::handle::Handle::synchronous_read (277 samples, 3.00%)</title><rect x="8.9815%" y="1157" width="3.0047%" height="15" fill="rgb(252,35,15)" fg:x="828" fg:w="277"/><text x="9.2315%" y="1167.50">ste..</text></g><g><title>ntdll`NtReadFile (276 samples, 2.99%)</title><rect x="8.9923%" y="1141" width="2.9938%" height="15" fill="rgb(248,181,18)" fg:x="829" fg:w="276"/><text x="9.2423%" y="1151.50">ntd..</text></g><g><title>ntdll`NtQueryInformationFile (66 samples, 0.72%)</title><rect x="11.9970%" y="1173" width="0.7159%" height="15" fill="rgb(233,39,42)" fg:x="1106" fg:w="66"/><text x="12.2470%" y="1183.50"></text></g><g><title>stelpatch-benchmark`std::sys::windows::fs::File::file_attr (97 samples, 1.05%)</title><rect x="11.9861%" y="1205" width="1.0522%" height="15" fill="rgb(238,110,33)" fg:x="1105" fg:w="97"/><text x="12.2361%" y="1215.50"></text></g><g><title>KERNELBASE`GetFileInformationByHandle (97 samples, 1.05%)</title><rect x="11.9861%" y="1189" width="1.0522%" height="15" fill="rgb(233,195,10)" fg:x="1105" fg:w="97"/><text x="12.2361%" y="1199.50"></text></g><g><title>ntdll`NtQueryVolumeInformationFile (30 samples, 0.33%)</title><rect x="12.7129%" y="1173" width="0.3254%" height="15" fill="rgb(254,105,3)" fg:x="1172" fg:w="30"/><text x="12.9629%" y="1183.50"></text></g><g><title>KERNEL32`HeapFree (1 samples, 0.01%)</title><rect x="13.0491%" y="1189" width="0.0108%" height="15" fill="rgb(221,225,9)" fg:x="1203" fg:w="1"/><text x="13.2991%" y="1199.50"></text></g><g><title>KERNELBASE`KernelbasePostInit (2 samples, 0.02%)</title><rect x="13.1576%" y="1109" width="0.0217%" height="15" fill="rgb(224,227,45)" fg:x="1213" fg:w="2"/><text x="13.4076%" y="1119.50"></text></g><g><title>KERNELBASE`UnsubscribeFeatureUsageFlush (6 samples, 0.07%)</title><rect x="13.1251%" y="1157" width="0.0651%" height="15" fill="rgb(229,198,43)" fg:x="1210" fg:w="6"/><text x="13.3751%" y="1167.50"></text></g><g><title>KERNELBASE`KernelbasePostInit (6 samples, 0.07%)</title><rect x="13.1251%" y="1141" width="0.0651%" height="15" fill="rgb(206,209,35)" fg:x="1210" fg:w="6"/><text x="13.3751%" y="1151.50"></text></g><g><title>KERNELBASE`KernelbasePostInit (4 samples, 0.04%)</title><rect x="13.1468%" y="1125" width="0.0434%" height="15" fill="rgb(245,195,53)" fg:x="1212" fg:w="4"/><text x="13.3968%" y="1135.50"></text></g><g><title>KERNELBASE`RecordFeatureUsage2 (1 samples, 0.01%)</title><rect x="13.1793%" y="1109" width="0.0108%" height="15" fill="rgb(240,92,26)" fg:x="1215" fg:w="1"/><text x="13.4293%" y="1119.50"></text></g><g><title>ntdll`RtlAllocateHeap (3 samples, 0.03%)</title><rect x="13.2227%" y="1125" width="0.0325%" height="15" fill="rgb(207,40,23)" fg:x="1219" fg:w="3"/><text x="13.4727%" y="1135.50"></text></g><g><title>ntdll`RtlAllocateHeap (3 samples, 0.03%)</title><rect x="13.2227%" y="1109" width="0.0325%" height="15" fill="rgb(223,111,35)" fg:x="1219" fg:w="3"/><text x="13.4727%" y="1119.50"></text></g><g><title>ntdll`RtlDosPathNameToRelativeNtPathName_U_WithStatus (1 samples, 0.01%)</title><rect x="13.2661%" y="1109" width="0.0108%" height="15" fill="rgb(229,147,28)" fg:x="1223" fg:w="1"/><text x="13.5161%" y="1119.50"></text></g><g><title>ntdll`RtlDosPathNameToRelativeNtPathName_U_WithStatus (1 samples, 0.01%)</title><rect x="13.2661%" y="1093" width="0.0108%" height="15" fill="rgb(211,29,28)" fg:x="1223" fg:w="1"/><text x="13.5161%" y="1103.50"></text></g><g><title>ntdll`RtlDosPathNameToRelativeNtPathName_U_WithStatus (3 samples, 0.03%)</title><rect x="13.2552%" y="1125" width="0.0325%" height="15" fill="rgb(228,72,33)" fg:x="1222" fg:w="3"/><text x="13.5052%" y="1135.50"></text></g><g><title>ntdll`memset (1 samples, 0.01%)</title><rect x="13.2769%" y="1109" width="0.0108%" height="15" fill="rgb(205,214,31)" fg:x="1224" fg:w="1"/><text x="13.5269%" y="1119.50"></text></g><g><title>ntdll`RtlDosPathNameToRelativeNtPathName_U_WithStatus (10 samples, 0.11%)</title><rect x="13.1902%" y="1157" width="0.1085%" height="15" fill="rgb(224,111,15)" fg:x="1216" fg:w="10"/><text x="13.4402%" y="1167.50"></text></g><g><title>ntdll`RtlDosPathNameToRelativeNtPathName_U_WithStatus (10 samples, 0.11%)</title><rect x="13.1902%" y="1141" width="0.1085%" height="15" fill="rgb(253,21,26)" fg:x="1216" fg:w="10"/><text x="13.4402%" y="1151.50"></text></g><g><title>ntdll`memcpy (1 samples, 0.01%)</title><rect x="13.2878%" y="1125" width="0.0108%" height="15" fill="rgb(245,139,43)" fg:x="1225" fg:w="1"/><text x="13.5378%" y="1135.50"></text></g><g><title>ntdll`RtlFreeHeap (3 samples, 0.03%)</title><rect x="13.2986%" y="1157" width="0.0325%" height="15" fill="rgb(252,170,7)" fg:x="1226" fg:w="3"/><text x="13.5486%" y="1167.50"></text></g><g><title>ntdll`memset (2 samples, 0.02%)</title><rect x="13.3095%" y="1141" width="0.0217%" height="15" fill="rgb(231,118,14)" fg:x="1227" fg:w="2"/><text x="13.5595%" y="1151.50"></text></g><g><title>ntdll`SbSelectProcedure (4 samples, 0.04%)</title><rect x="13.3312%" y="1157" width="0.0434%" height="15" fill="rgb(238,83,0)" fg:x="1229" fg:w="4"/><text x="13.5812%" y="1167.50"></text></g><g><title>KERNELBASE`CreateFileW (441 samples, 4.78%)</title><rect x="13.0600%" y="1189" width="4.7836%" height="15" fill="rgb(221,39,39)" fg:x="1204" fg:w="441"/><text x="13.3100%" y="1199.50">KERNEL..</text></g><g><title>KERNELBASE`CreateFileW (440 samples, 4.77%)</title><rect x="13.0708%" y="1173" width="4.7728%" height="15" fill="rgb(222,119,46)" fg:x="1205" fg:w="440"/><text x="13.3208%" y="1183.50">KERNEL..</text></g><g><title>ntdll`ZwCreateFile (412 samples, 4.47%)</title><rect x="13.3746%" y="1157" width="4.4690%" height="15" fill="rgb(222,165,49)" fg:x="1233" fg:w="412"/><text x="13.6246%" y="1167.50">ntdll..</text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.01%)</title><rect x="17.8544%" y="1173" width="0.0108%" height="15" fill="rgb(219,113,52)" fg:x="1646" fg:w="1"/><text x="18.1044%" y="1183.50"></text></g><g><title>ntdll`RtlFreeHeap (3 samples, 0.03%)</title><rect x="17.8436%" y="1189" width="0.0325%" height="15" fill="rgb(214,7,15)" fg:x="1645" fg:w="3"/><text x="18.0936%" y="1199.50"></text></g><g><title>ntdll`memset (1 samples, 0.01%)</title><rect x="17.8653%" y="1173" width="0.0108%" height="15" fill="rgb(235,32,4)" fg:x="1647" fg:w="1"/><text x="18.1153%" y="1183.50"></text></g><g><title>stelpatch-benchmark`std::sys::windows::path::get_long_path (1 samples, 0.01%)</title><rect x="17.8761%" y="1189" width="0.0108%" height="15" fill="rgb(238,90,54)" fg:x="1648" fg:w="1"/><text x="18.1261%" y="1199.50"></text></g><g><title>ntdll`RtlAllocateHeap (3 samples, 0.03%)</title><rect x="17.8870%" y="1173" width="0.0325%" height="15" fill="rgb(213,208,19)" fg:x="1649" fg:w="3"/><text x="18.1370%" y="1183.50"></text></g><g><title>ntdll`RtlAllocateHeap (3 samples, 0.03%)</title><rect x="17.8870%" y="1157" width="0.0325%" height="15" fill="rgb(233,156,4)" fg:x="1649" fg:w="3"/><text x="18.1370%" y="1167.50"></text></g><g><title>ntdll`RtlSetUserValueHeap (1 samples, 0.01%)</title><rect x="17.9087%" y="1141" width="0.0108%" height="15" fill="rgb(207,194,5)" fg:x="1651" fg:w="1"/><text x="18.1587%" y="1151.50"></text></g><g><title>stelpatch-benchmark`std::fs::read_to_string::inner (1,011 samples, 10.97%)</title><rect x="6.9856%" y="1221" width="10.9665%" height="15" fill="rgb(206,111,30)" fg:x="644" fg:w="1011"/><text x="7.2356%" y="1231.50">stelpatch-benchm..</text></g><g><title>stelpatch-benchmark`std::sys::windows::fs::File::open (453 samples, 4.91%)</title><rect x="13.0383%" y="1205" width="4.9138%" height="15" fill="rgb(243,70,54)" fg:x="1202" fg:w="453"/><text x="13.2883%" y="1215.50">stelpa..</text></g><g><title>stelpatch-benchmark`std::sys::windows::to_u16s::inner (6 samples, 0.07%)</title><rect x="17.8870%" y="1189" width="0.0651%" height="15" fill="rgb(242,28,8)" fg:x="1649" fg:w="6"/><text x="18.1370%" y="1199.50"></text></g><g><title>stelpatch-benchmark`alloc::vec::spec_extend::impl$0::spec_extend (3 samples, 0.03%)</title><rect x="17.9195%" y="1173" width="0.0325%" height="15" fill="rgb(219,106,18)" fg:x="1652" fg:w="3"/><text x="18.1695%" y="1183.50"></text></g><g><title>KERNEL32`HeapFree (1 samples, 0.01%)</title><rect x="18.0063%" y="1205" width="0.0108%" height="15" fill="rgb(244,222,10)" fg:x="1660" fg:w="1"/><text x="18.2563%" y="1215.50"></text></g><g><title>VCRUNTIME140`memcpy (1 samples, 0.01%)</title><rect x="18.0171%" y="1205" width="0.0108%" height="15" fill="rgb(236,179,52)" fg:x="1661" fg:w="1"/><text x="18.2671%" y="1215.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.02%)</title><rect x="18.0280%" y="1205" width="0.0217%" height="15" fill="rgb(213,23,39)" fg:x="1662" fg:w="2"/><text x="18.2780%" y="1215.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.02%)</title><rect x="18.0280%" y="1189" width="0.0217%" height="15" fill="rgb(238,48,10)" fg:x="1662" fg:w="2"/><text x="18.2780%" y="1199.50"></text></g><g><title>ntdll`RtlFreeHeap (3 samples, 0.03%)</title><rect x="18.0497%" y="1205" width="0.0325%" height="15" fill="rgb(251,196,23)" fg:x="1664" fg:w="3"/><text x="18.2997%" y="1215.50"></text></g><g><title>ntdll`memset (2 samples, 0.02%)</title><rect x="18.0605%" y="1189" width="0.0217%" height="15" fill="rgb(250,152,24)" fg:x="1665" fg:w="2"/><text x="18.3105%" y="1199.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="18.0822%" y="1189" width="0.0108%" height="15" fill="rgb(209,150,17)" fg:x="1667" fg:w="1"/><text x="18.3322%" y="1199.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="18.1039%" y="1157" width="0.0108%" height="15" fill="rgb(234,202,34)" fg:x="1669" fg:w="1"/><text x="18.3539%" y="1167.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="18.1039%" y="1141" width="0.0108%" height="15" fill="rgb(253,148,53)" fg:x="1669" fg:w="1"/><text x="18.3539%" y="1151.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::impl$1::reserve::do_reserve_and_handle (4 samples, 0.04%)</title><rect x="18.0931%" y="1189" width="0.0434%" height="15" fill="rgb(218,129,16)" fg:x="1668" fg:w="4"/><text x="18.3431%" y="1199.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::finish_grow (3 samples, 0.03%)</title><rect x="18.1039%" y="1173" width="0.0325%" height="15" fill="rgb(216,85,19)" fg:x="1669" fg:w="3"/><text x="18.3539%" y="1183.50"></text></g><g><title>ntdll`RtlReAllocateHeap (2 samples, 0.02%)</title><rect x="18.1148%" y="1157" width="0.0217%" height="15" fill="rgb(235,228,7)" fg:x="1670" fg:w="2"/><text x="18.3648%" y="1167.50"></text></g><g><title>ntdll`RtlReAllocateHeap (2 samples, 0.02%)</title><rect x="18.1148%" y="1141" width="0.0217%" height="15" fill="rgb(245,175,0)" fg:x="1670" fg:w="2"/><text x="18.3648%" y="1151.50"></text></g><g><title>ntdll`RtlReleaseSRWLockShared (2 samples, 0.02%)</title><rect x="18.1148%" y="1125" width="0.0217%" height="15" fill="rgb(208,168,36)" fg:x="1670" fg:w="2"/><text x="18.3648%" y="1135.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="18.1256%" y="1109" width="0.0108%" height="15" fill="rgb(246,171,24)" fg:x="1671" fg:w="1"/><text x="18.3756%" y="1119.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="18.1256%" y="1093" width="0.0108%" height="15" fill="rgb(215,142,24)" fg:x="1671" fg:w="1"/><text x="18.3756%" y="1103.50"></text></g><g><title>stelpatch-benchmark`path_slash::impl$0::to_slash_lossy (6 samples, 0.07%)</title><rect x="18.0822%" y="1205" width="0.0651%" height="15" fill="rgb(250,187,7)" fg:x="1667" fg:w="6"/><text x="18.3322%" y="1215.50"></text></g><g><title>stelpatch-benchmark`path_slash::windows::ends_with_main_sep (1 samples, 0.01%)</title><rect x="18.1365%" y="1189" width="0.0108%" height="15" fill="rgb(228,66,33)" fg:x="1672" fg:w="1"/><text x="18.3865%" y="1199.50"></text></g><g><title>stelpatch-benchmark`std::path::Components::as_path (4 samples, 0.04%)</title><rect x="18.2232%" y="1189" width="0.0434%" height="15" fill="rgb(234,215,21)" fg:x="1680" fg:w="4"/><text x="18.4732%" y="1199.50"></text></g><g><title>stelpatch-benchmark`std::path::Components::parse_next_component_back (3 samples, 0.03%)</title><rect x="18.2341%" y="1173" width="0.0325%" height="15" fill="rgb(222,191,20)" fg:x="1681" fg:w="3"/><text x="18.4841%" y="1183.50"></text></g><g><title>stelpatch-benchmark`std::path::impl$108::eq (6 samples, 0.07%)</title><rect x="18.2666%" y="1189" width="0.0651%" height="15" fill="rgb(245,79,54)" fg:x="1684" fg:w="6"/><text x="18.5166%" y="1199.50"></text></g><g><title>VCRUNTIME140`memcmp (2 samples, 0.02%)</title><rect x="18.3100%" y="1173" width="0.0217%" height="15" fill="rgb(240,10,37)" fg:x="1688" fg:w="2"/><text x="18.5600%" y="1183.50"></text></g><g><title>stelpatch-benchmark`std::path::impl$20::next (7 samples, 0.08%)</title><rect x="18.3317%" y="1189" width="0.0759%" height="15" fill="rgb(214,192,32)" fg:x="1690" fg:w="7"/><text x="18.5817%" y="1199.50"></text></g><g><title>stelpatch-benchmark`std::path::Path::_strip_prefix (25 samples, 0.27%)</title><rect x="18.1473%" y="1205" width="0.2712%" height="15" fill="rgb(209,36,54)" fg:x="1673" fg:w="25"/><text x="18.3973%" y="1215.50"></text></g><g><title>stelpatch-benchmark`std::sys::windows::path::parse_prefix (1 samples, 0.01%)</title><rect x="18.4076%" y="1189" width="0.0108%" height="15" fill="rgb(220,10,11)" fg:x="1697" fg:w="1"/><text x="18.6576%" y="1199.50"></text></g><g><title>stelpatch-benchmark`std::path::Path::components (1 samples, 0.01%)</title><rect x="18.4185%" y="1205" width="0.0108%" height="15" fill="rgb(221,106,17)" fg:x="1698" fg:w="1"/><text x="18.6685%" y="1215.50"></text></g><g><title>stelpatch-benchmark`std::sys::windows::path::parse_prefix (1 samples, 0.01%)</title><rect x="18.4185%" y="1189" width="0.0108%" height="15" fill="rgb(251,142,44)" fg:x="1698" fg:w="1"/><text x="18.6685%" y="1199.50"></text></g><g><title>stelpatch-benchmark`std::path::Path::file_stem (1 samples, 0.01%)</title><rect x="18.4293%" y="1205" width="0.0108%" height="15" fill="rgb(238,13,15)" fg:x="1699" fg:w="1"/><text x="18.6793%" y="1215.50"></text></g><g><title>stelpatch-benchmark`std::path::Path::file_name (1 samples, 0.01%)</title><rect x="18.4293%" y="1189" width="0.0108%" height="15" fill="rgb(208,107,27)" fg:x="1699" fg:w="1"/><text x="18.6793%" y="1199.50"></text></g><g><title>stelpatch-benchmark`std::sys::windows::path::parse_prefix (1 samples, 0.01%)</title><rect x="18.4293%" y="1173" width="0.0108%" height="15" fill="rgb(205,136,37)" fg:x="1699" fg:w="1"/><text x="18.6793%" y="1183.50"></text></g><g><title>stelpatch-benchmark`std::path::Components::as_path (1 samples, 0.01%)</title><rect x="18.4402%" y="1189" width="0.0108%" height="15" fill="rgb(250,205,27)" fg:x="1700" fg:w="1"/><text x="18.6902%" y="1199.50"></text></g><g><title>stelpatch-benchmark`std::path::Components::parse_next_component_back (1 samples, 0.01%)</title><rect x="18.4402%" y="1173" width="0.0108%" height="15" fill="rgb(210,80,43)" fg:x="1700" fg:w="1"/><text x="18.6902%" y="1183.50"></text></g><g><title>stelpatch-benchmark`std::path::Components::include_cur_dir (1 samples, 0.01%)</title><rect x="18.4510%" y="1173" width="0.0108%" height="15" fill="rgb(247,160,36)" fg:x="1701" fg:w="1"/><text x="18.7010%" y="1183.50"></text></g><g><title>stelpatch-benchmark`std::path::Path::parent (3 samples, 0.03%)</title><rect x="18.4402%" y="1205" width="0.0325%" height="15" fill="rgb(234,13,49)" fg:x="1700" fg:w="3"/><text x="18.6902%" y="1215.50"></text></g><g><title>stelpatch-benchmark`std::path::impl$21::next_back (2 samples, 0.02%)</title><rect x="18.4510%" y="1189" width="0.0217%" height="15" fill="rgb(234,122,0)" fg:x="1701" fg:w="2"/><text x="18.7010%" y="1199.50"></text></g><g><title>stelpatch-benchmark`std::path::Components::parse_next_component_back (1 samples, 0.01%)</title><rect x="18.4619%" y="1173" width="0.0108%" height="15" fill="rgb(207,146,38)" fg:x="1702" fg:w="1"/><text x="18.7119%" y="1183.50"></text></g><g><title>VCRUNTIME140`memcpy (3 samples, 0.03%)</title><rect x="18.4727%" y="1189" width="0.0325%" height="15" fill="rgb(207,177,25)" fg:x="1703" fg:w="3"/><text x="18.7227%" y="1199.50"></text></g><g><title>ntdll`RtlAllocateHeap (11 samples, 0.12%)</title><rect x="18.5053%" y="1189" width="0.1193%" height="15" fill="rgb(211,178,42)" fg:x="1706" fg:w="11"/><text x="18.7553%" y="1199.50"></text></g><g><title>ntdll`RtlAllocateHeap (9 samples, 0.10%)</title><rect x="18.5270%" y="1173" width="0.0976%" height="15" fill="rgb(230,69,54)" fg:x="1708" fg:w="9"/><text x="18.7770%" y="1183.50"></text></g><g><title>ntdll`RtlSetUserValueHeap (1 samples, 0.01%)</title><rect x="18.6137%" y="1157" width="0.0108%" height="15" fill="rgb(214,135,41)" fg:x="1716" fg:w="1"/><text x="18.8637%" y="1167.50"></text></g><g><title>stelpatch-benchmark`std::path::Path::to_path_buf (15 samples, 0.16%)</title><rect x="18.4727%" y="1205" width="0.1627%" height="15" fill="rgb(237,67,25)" fg:x="1703" fg:w="15"/><text x="18.7227%" y="1215.50"></text></g><g><title>stelpatch-benchmark`std::alloc::__default_lib_allocator::__rdl_alloc (1 samples, 0.01%)</title><rect x="18.6246%" y="1189" width="0.0108%" height="15" fill="rgb(222,189,50)" fg:x="1717" fg:w="1"/><text x="18.8746%" y="1199.50"></text></g><g><title>stelpatch-benchmark`std::sys::windows::os_str::Buf::push_slice (2 samples, 0.02%)</title><rect x="18.6354%" y="1189" width="0.0217%" height="15" fill="rgb(245,148,34)" fg:x="1718" fg:w="2"/><text x="18.8854%" y="1199.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::impl$1::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="18.6463%" y="1173" width="0.0108%" height="15" fill="rgb(222,29,6)" fg:x="1719" fg:w="1"/><text x="18.8963%" y="1183.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="18.6463%" y="1157" width="0.0108%" height="15" fill="rgb(221,189,43)" fg:x="1719" fg:w="1"/><text x="18.8963%" y="1167.50"></text></g><g><title>ntdll`RtlReAllocateHeap (1 samples, 0.01%)</title><rect x="18.6463%" y="1141" width="0.0108%" height="15" fill="rgb(207,36,27)" fg:x="1719" fg:w="1"/><text x="18.8963%" y="1151.50"></text></g><g><title>ntdll`RtlReAllocateHeap (1 samples, 0.01%)</title><rect x="18.6463%" y="1125" width="0.0108%" height="15" fill="rgb(217,90,24)" fg:x="1719" fg:w="1"/><text x="18.8963%" y="1135.50"></text></g><g><title>ntdll`RtlReleaseSRWLockShared (1 samples, 0.01%)</title><rect x="18.6463%" y="1109" width="0.0108%" height="15" fill="rgb(224,66,35)" fg:x="1719" fg:w="1"/><text x="18.8963%" y="1119.50"></text></g><g><title>stelpatch-benchmark`std::path::PathBuf::_push (3 samples, 0.03%)</title><rect x="18.6354%" y="1205" width="0.0325%" height="15" fill="rgb(221,13,50)" fg:x="1718" fg:w="3"/><text x="18.8854%" y="1215.50"></text></g><g><title>stelpatch-benchmark`std::sys::windows::path::parse_prefix (1 samples, 0.01%)</title><rect x="18.6571%" y="1189" width="0.0108%" height="15" fill="rgb(236,68,49)" fg:x="1720" fg:w="1"/><text x="18.9071%" y="1199.50"></text></g><g><title>stelpatch-benchmark`std::path::impl$20::next (5 samples, 0.05%)</title><rect x="18.6680%" y="1205" width="0.0542%" height="15" fill="rgb(229,146,28)" fg:x="1721" fg:w="5"/><text x="18.9180%" y="1215.50"></text></g><g><title>stelpatch-benchmark`std::path::Component::as_os_str (1 samples, 0.01%)</title><rect x="18.7439%" y="1189" width="0.0108%" height="15" fill="rgb(225,31,38)" fg:x="1728" fg:w="1"/><text x="18.9939%" y="1199.50"></text></g><g><title>stelpatch-benchmark`std::path::Path::is_absolute (3 samples, 0.03%)</title><rect x="18.7656%" y="1173" width="0.0325%" height="15" fill="rgb(250,208,3)" fg:x="1730" fg:w="3"/><text x="19.0156%" y="1183.50"></text></g><g><title>stelpatch-benchmark`std::sys::windows::path::parse_prefix (1 samples, 0.01%)</title><rect x="18.7873%" y="1157" width="0.0108%" height="15" fill="rgb(246,54,23)" fg:x="1732" fg:w="1"/><text x="19.0373%" y="1167.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.02%)</title><rect x="18.8632%" y="1125" width="0.0217%" height="15" fill="rgb(243,76,11)" fg:x="1739" fg:w="2"/><text x="19.1132%" y="1135.50"></text></g><g><title>ntdll`RtlAllocateHeap (3 samples, 0.03%)</title><rect x="18.9175%" y="1077" width="0.0325%" height="15" fill="rgb(245,21,50)" fg:x="1744" fg:w="3"/><text x="19.1675%" y="1087.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.02%)</title><rect x="18.9283%" y="1061" width="0.0217%" height="15" fill="rgb(228,9,43)" fg:x="1745" fg:w="2"/><text x="19.1783%" y="1071.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.01%)</title><rect x="18.9500%" y="1061" width="0.0108%" height="15" fill="rgb(208,100,47)" fg:x="1747" fg:w="1"/><text x="19.2000%" y="1071.50"></text></g><g><title>stelpatch-benchmark`std::sys::windows::os_str::Buf::push_slice (16 samples, 0.17%)</title><rect x="18.7981%" y="1173" width="0.1736%" height="15" fill="rgb(232,26,8)" fg:x="1733" fg:w="16"/><text x="19.0481%" y="1183.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::impl$1::reserve::do_reserve_and_handle (14 samples, 0.15%)</title><rect x="18.8198%" y="1157" width="0.1519%" height="15" fill="rgb(216,166,38)" fg:x="1735" fg:w="14"/><text x="19.0698%" y="1167.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::finish_grow (13 samples, 0.14%)</title><rect x="18.8307%" y="1141" width="0.1410%" height="15" fill="rgb(251,202,51)" fg:x="1736" fg:w="13"/><text x="19.0807%" y="1151.50"></text></g><g><title>ntdll`RtlReAllocateHeap (8 samples, 0.09%)</title><rect x="18.8849%" y="1125" width="0.0868%" height="15" fill="rgb(254,216,34)" fg:x="1741" fg:w="8"/><text x="19.1349%" y="1135.50"></text></g><g><title>ntdll`RtlReAllocateHeap (6 samples, 0.07%)</title><rect x="18.9066%" y="1109" width="0.0651%" height="15" fill="rgb(251,32,27)" fg:x="1743" fg:w="6"/><text x="19.1566%" y="1119.50"></text></g><g><title>ntdll`RtlReleaseSRWLockShared (6 samples, 0.07%)</title><rect x="18.9066%" y="1093" width="0.0651%" height="15" fill="rgb(208,127,28)" fg:x="1743" fg:w="6"/><text x="19.1566%" y="1103.50"></text></g><g><title>ntdll`RtlFreeHeap (2 samples, 0.02%)</title><rect x="18.9500%" y="1077" width="0.0217%" height="15" fill="rgb(224,137,22)" fg:x="1747" fg:w="2"/><text x="19.2000%" y="1087.50"></text></g><g><title>ntdll`memset (1 samples, 0.01%)</title><rect x="18.9608%" y="1061" width="0.0108%" height="15" fill="rgb(254,70,32)" fg:x="1748" fg:w="1"/><text x="19.2108%" y="1071.50"></text></g><g><title>stelpatch-benchmark`std::path::PathBuf::_push (26 samples, 0.28%)</title><rect x="18.7547%" y="1189" width="0.2820%" height="15" fill="rgb(229,75,37)" fg:x="1729" fg:w="26"/><text x="19.0047%" y="1199.50"></text></g><g><title>stelpatch-benchmark`std::sys::windows::path::parse_prefix (6 samples, 0.07%)</title><rect x="18.9717%" y="1173" width="0.0651%" height="15" fill="rgb(252,64,23)" fg:x="1749" fg:w="6"/><text x="19.2217%" y="1183.50"></text></g><g><title>stelpatch-benchmark`std::path::impl$41::from_iter&lt;enum2$&lt;std::path::Component&gt;,core::iter::adapters::take::Take (30 samples, 0.33%)</title><rect x="18.7222%" y="1205" width="0.3254%" height="15" fill="rgb(232,162,48)" fg:x="1726" fg:w="30"/><text x="18.9722%" y="1215.50"></text></g><g><title>stelpatch-benchmark`std::path::impl$20::next (1 samples, 0.01%)</title><rect x="19.0368%" y="1189" width="0.0108%" height="15" fill="rgb(246,160,12)" fg:x="1755" fg:w="1"/><text x="19.2868%" y="1199.50"></text></g><g><title>stelpatch-benchmark`std::sys::windows::os_str::Buf::as_mut_slice (1 samples, 0.01%)</title><rect x="19.0476%" y="1205" width="0.0108%" height="15" fill="rgb(247,166,0)" fg:x="1756" fg:w="1"/><text x="19.2976%" y="1215.50"></text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::ParsedModule::get_module_info (103 samples, 1.12%)</title><rect x="17.9521%" y="1221" width="1.1173%" height="15" fill="rgb(249,219,21)" fg:x="1655" fg:w="103"/><text x="18.2021%" y="1231.50"></text></g><g><title>stelpatch-benchmark`std::sys::windows::os_str::Slice::to_str (1 samples, 0.01%)</title><rect x="19.0585%" y="1205" width="0.0108%" height="15" fill="rgb(205,209,3)" fg:x="1757" fg:w="1"/><text x="19.3085%" y="1215.50"></text></g><g><title>ntdll`RtlFreeHeap (1 samples, 0.01%)</title><rect x="19.1452%" y="1205" width="0.0108%" height="15" fill="rgb(243,44,1)" fg:x="1765" fg:w="1"/><text x="19.3952%" y="1215.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.01%)</title><rect x="19.1452%" y="1189" width="0.0108%" height="15" fill="rgb(206,159,16)" fg:x="1765" fg:w="1"/><text x="19.3952%" y="1199.50"></text></g><g><title>stelpatch-benchmark`enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;::into_value (4 samples, 0.04%)</title><rect x="19.1561%" y="1205" width="0.0434%" height="15" fill="rgb(244,77,30)" fg:x="1766" fg:w="4"/><text x="19.4061%" y="1215.50"></text></g><g><title>stelpatch-benchmark`lasso::multi_threaded::ThreadedRodeo&lt;lasso::keys::Spur,ahash::random_state::RandomState&gt;::get_or_intern&lt;lasso::keys::Spur,ahash::random_state::RandomState,ref$ (4 samples, 0.04%)</title><rect x="19.1561%" y="1189" width="0.0434%" height="15" fill="rgb(218,69,12)" fg:x="1766" fg:w="4"/><text x="19.4061%" y="1199.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::get&lt;ref$ (4 samples, 0.04%)</title><rect x="19.1561%" y="1173" width="0.0434%" height="15" fill="rgb(212,87,7)" fg:x="1766" fg:w="4"/><text x="19.4061%" y="1183.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;ahash::random_state::RandomState,ref$ (2 samples, 0.02%)</title><rect x="19.1778%" y="1157" width="0.0217%" height="15" fill="rgb(245,114,25)" fg:x="1768" fg:w="2"/><text x="19.4278%" y="1167.50"></text></g><g><title>VCRUNTIME140`memcpy (2 samples, 0.02%)</title><rect x="19.2103%" y="1157" width="0.0217%" height="15" fill="rgb(210,61,42)" fg:x="1771" fg:w="2"/><text x="19.4603%" y="1167.50"></text></g><g><title>stelpatch-benchmark`hashbrown::map::HashMap&lt;lasso::keys::Spur,enum2$&lt;stelpatch::cw_model::Value&gt;,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::insert&lt;lasso::keys::Spur,enum2$ (6 samples, 0.07%)</title><rect x="19.1995%" y="1205" width="0.0651%" height="15" fill="rgb(211,52,33)" fg:x="1770" fg:w="6"/><text x="19.4495%" y="1215.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;lasso::keys::Spur,enum2$&lt;stelpatch::cw_model::Value&gt; &gt;,alloc::alloc::Global&gt;::insert&lt;tuple$&lt;lasso::keys::Spur,enum2$&lt;stelpatch::cw_model::Value&gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;lasso::keys::Spur,lasso::keys::Spur,enum2$ (5 samples, 0.05%)</title><rect x="19.2103%" y="1189" width="0.0542%" height="15" fill="rgb(234,58,33)" fg:x="1771" fg:w="5"/><text x="19.4603%" y="1199.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;lasso::keys::Spur,enum2$&lt;stelpatch::cw_model::Value&gt; &gt;,alloc::alloc::Global&gt;::reserve_rehash&lt;tuple$&lt;lasso::keys::Spur,enum2$&lt;stelpatch::cw_model::Value&gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;lasso::keys::Spur,lasso::keys::Spur,enum2$ (5 samples, 0.05%)</title><rect x="19.2103%" y="1173" width="0.0542%" height="15" fill="rgb(220,115,36)" fg:x="1771" fg:w="5"/><text x="19.4603%" y="1183.50"></text></g><g><title>ntdll`RtlAllocateHeap (3 samples, 0.03%)</title><rect x="19.2320%" y="1157" width="0.0325%" height="15" fill="rgb(243,153,54)" fg:x="1773" fg:w="3"/><text x="19.4820%" y="1167.50"></text></g><g><title>ntdll`RtlAllocateHeap (3 samples, 0.03%)</title><rect x="19.2320%" y="1141" width="0.0325%" height="15" fill="rgb(251,47,18)" fg:x="1773" fg:w="3"/><text x="19.4820%" y="1151.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::impl$18::into_iter&lt;tuple$&lt;ref$ (1 samples, 0.01%)</title><rect x="19.2646%" y="1205" width="0.0108%" height="15" fill="rgb(242,102,42)" fg:x="1776" fg:w="1"/><text x="19.5146%" y="1215.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::impl$18::into_iter&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$ (1 samples, 0.01%)</title><rect x="19.2754%" y="1205" width="0.0108%" height="15" fill="rgb(234,31,38)" fg:x="1777" fg:w="1"/><text x="19.5254%" y="1215.50"></text></g><g><title>VCRUNTIME140`memset (1 samples, 0.01%)</title><rect x="19.4164%" y="1141" width="0.0108%" height="15" fill="rgb(221,117,51)" fg:x="1790" fg:w="1"/><text x="19.6664%" y="1151.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;lasso::keys::Spur,ref$&lt;str$&gt;,ahash::random_state::RandomState&gt;::insert&lt;lasso::keys::Spur,ref$ (12 samples, 0.13%)</title><rect x="19.3080%" y="1189" width="0.1302%" height="15" fill="rgb(212,20,18)" fg:x="1780" fg:w="12"/><text x="19.5580%" y="1199.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global&gt;::insert&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;lasso::keys::Spur,lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$ (5 samples, 0.05%)</title><rect x="19.3839%" y="1173" width="0.0542%" height="15" fill="rgb(245,133,36)" fg:x="1787" fg:w="5"/><text x="19.6339%" y="1183.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global&gt;::reserve_rehash&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;lasso::keys::Spur,lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$ (3 samples, 0.03%)</title><rect x="19.4056%" y="1157" width="0.0325%" height="15" fill="rgb(212,6,19)" fg:x="1789" fg:w="3"/><text x="19.6556%" y="1167.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="19.4273%" y="1141" width="0.0108%" height="15" fill="rgb(218,1,36)" fg:x="1791" fg:w="1"/><text x="19.6773%" y="1151.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="19.4273%" y="1125" width="0.0108%" height="15" fill="rgb(246,84,54)" fg:x="1791" fg:w="1"/><text x="19.6773%" y="1135.50"></text></g><g><title>VCRUNTIME140`memcmp (3 samples, 0.03%)</title><rect x="19.5683%" y="1173" width="0.0325%" height="15" fill="rgb(242,110,6)" fg:x="1804" fg:w="3"/><text x="19.8183%" y="1183.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::get&lt;ref$ (19 samples, 0.21%)</title><rect x="19.4381%" y="1189" width="0.2061%" height="15" fill="rgb(214,47,5)" fg:x="1792" fg:w="19"/><text x="19.6881%" y="1199.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;ahash::random_state::RandomState,ref$ (4 samples, 0.04%)</title><rect x="19.6008%" y="1173" width="0.0434%" height="15" fill="rgb(218,159,25)" fg:x="1807" fg:w="4"/><text x="19.8508%" y="1183.50"></text></g><g><title>VCRUNTIME140`memcmp (1 samples, 0.01%)</title><rect x="19.6442%" y="1173" width="0.0108%" height="15" fill="rgb(215,211,28)" fg:x="1811" fg:w="1"/><text x="19.8942%" y="1183.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;ahash::random_state::RandomState,ref$&lt;ref$ (1 samples, 0.01%)</title><rect x="19.6659%" y="1157" width="0.0108%" height="15" fill="rgb(238,59,32)" fg:x="1813" fg:w="1"/><text x="19.9159%" y="1167.50"></text></g><g><title>stelpatch-benchmark`dashmap::mapref::entry::VacantEntry&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::insert&lt;ref$ (15 samples, 0.16%)</title><rect x="19.6442%" y="1189" width="0.1627%" height="15" fill="rgb(226,82,3)" fg:x="1811" fg:w="15"/><text x="19.8942%" y="1199.50"></text></g><g><title>stelpatch-benchmark`hashbrown::map::HashMap&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt;,ahash::random_state::RandomState,alloc::alloc::Global&gt;::insert&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue (14 samples, 0.15%)</title><rect x="19.6551%" y="1173" width="0.1519%" height="15" fill="rgb(240,164,32)" fg:x="1812" fg:w="14"/><text x="19.9051%" y="1183.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt; &gt;,alloc::alloc::Global&gt;::insert&lt;tuple$&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,dashmap::util::SharedValue (12 samples, 0.13%)</title><rect x="19.6768%" y="1157" width="0.1302%" height="15" fill="rgb(232,46,7)" fg:x="1814" fg:w="12"/><text x="19.9268%" y="1167.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt; &gt;,alloc::alloc::Global&gt;::reserve_rehash&lt;tuple$&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,dashmap::util::SharedValue (7 samples, 0.08%)</title><rect x="19.7310%" y="1141" width="0.0759%" height="15" fill="rgb(229,129,53)" fg:x="1819" fg:w="7"/><text x="19.9810%" y="1151.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;ahash::random_state::RandomState,ref$&lt;ref$ (7 samples, 0.08%)</title><rect x="19.7310%" y="1125" width="0.0759%" height="15" fill="rgb(234,188,29)" fg:x="1819" fg:w="7"/><text x="19.9810%" y="1135.50"></text></g><g><title>stelpatch-benchmark`lasso::multi_threaded::ThreadedRodeo&lt;lasso::keys::Spur,ahash::random_state::RandomState&gt;::get_or_intern&lt;lasso::keys::Spur,ahash::random_state::RandomState,ref$ (50 samples, 0.54%)</title><rect x="19.2863%" y="1205" width="0.5424%" height="15" fill="rgb(246,141,4)" fg:x="1778" fg:w="50"/><text x="19.5363%" y="1215.50"></text></g><g><title>stelpatch-benchmark`lasso::arena::Arena::store_str (2 samples, 0.02%)</title><rect x="19.8069%" y="1189" width="0.0217%" height="15" fill="rgb(229,23,39)" fg:x="1826" fg:w="2"/><text x="20.0569%" y="1199.50"></text></g><g><title>VCRUNTIME140`memcpy (1 samples, 0.01%)</title><rect x="19.8178%" y="1173" width="0.0108%" height="15" fill="rgb(206,12,3)" fg:x="1827" fg:w="1"/><text x="20.0678%" y="1183.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState,ref$ (2 samples, 0.02%)</title><rect x="19.8395%" y="1173" width="0.0217%" height="15" fill="rgb(252,226,20)" fg:x="1829" fg:w="2"/><text x="20.0895%" y="1183.50"></text></g><g><title>ntdll`RtlAllocateHeap (3 samples, 0.03%)</title><rect x="19.8829%" y="1141" width="0.0325%" height="15" fill="rgb(216,123,35)" fg:x="1833" fg:w="3"/><text x="20.1329%" y="1151.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.02%)</title><rect x="19.8937%" y="1125" width="0.0217%" height="15" fill="rgb(212,68,40)" fg:x="1834" fg:w="2"/><text x="20.1437%" y="1135.50"></text></g><g><title>stelpatch-benchmark`stelpatch::cw_model::Module::add_property (13 samples, 0.14%)</title><rect x="19.8286%" y="1205" width="0.1410%" height="15" fill="rgb(254,125,32)" fg:x="1828" fg:w="13"/><text x="20.0786%" y="1215.50"></text></g><g><title>stelpatch-benchmark`hashbrown::map::HashMap&lt;lasso::keys::Spur,stelpatch::cw_model::PropertyInfoList,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::insert (13 samples, 0.14%)</title><rect x="19.8286%" y="1189" width="0.1410%" height="15" fill="rgb(253,97,22)" fg:x="1828" fg:w="13"/><text x="20.0786%" y="1199.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;lasso::keys::Spur,stelpatch::cw_model::PropertyInfoList&gt;,alloc::alloc::Global&gt;::insert&lt;tuple$&lt;lasso::keys::Spur,stelpatch::cw_model::PropertyInfoList&gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0 (10 samples, 0.11%)</title><rect x="19.8612%" y="1173" width="0.1085%" height="15" fill="rgb(241,101,14)" fg:x="1831" fg:w="10"/><text x="20.1112%" y="1183.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;lasso::keys::Spur,stelpatch::cw_model::PropertyInfoList&gt;,alloc::alloc::Global&gt;::reserve_rehash&lt;tuple$&lt;lasso::keys::Spur,stelpatch::cw_model::PropertyInfoList&gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0 (10 samples, 0.11%)</title><rect x="19.8612%" y="1157" width="0.1085%" height="15" fill="rgb(238,103,29)" fg:x="1831" fg:w="10"/><text x="20.1112%" y="1167.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState,ref$ (5 samples, 0.05%)</title><rect x="19.9154%" y="1141" width="0.0542%" height="15" fill="rgb(233,195,47)" fg:x="1836" fg:w="5"/><text x="20.1654%" y="1151.50"></text></g><g><title>stelpatch-benchmark`core::hash::sip::impl$5::write (2 samples, 0.02%)</title><rect x="19.9479%" y="1125" width="0.0217%" height="15" fill="rgb(246,218,30)" fg:x="1839" fg:w="2"/><text x="20.1979%" y="1135.50"></text></g><g><title>VCRUNTIME140`memcpy (1 samples, 0.01%)</title><rect x="19.9805%" y="1189" width="0.0108%" height="15" fill="rgb(219,145,47)" fg:x="1842" fg:w="1"/><text x="20.2305%" y="1199.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::impl$1::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="19.9913%" y="1189" width="0.0108%" height="15" fill="rgb(243,12,26)" fg:x="1843" fg:w="1"/><text x="20.2413%" y="1199.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="19.9913%" y="1173" width="0.0108%" height="15" fill="rgb(214,87,16)" fg:x="1843" fg:w="1"/><text x="20.2413%" y="1183.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="19.9913%" y="1157" width="0.0108%" height="15" fill="rgb(208,99,42)" fg:x="1843" fg:w="1"/><text x="20.2413%" y="1167.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="19.9913%" y="1141" width="0.0108%" height="15" fill="rgb(253,99,2)" fg:x="1843" fg:w="1"/><text x="20.2413%" y="1151.50"></text></g><g><title>stelpatch-benchmark`core::str::pattern::StrSearcher::new (1 samples, 0.01%)</title><rect x="20.0022%" y="1189" width="0.0108%" height="15" fill="rgb(220,168,23)" fg:x="1844" fg:w="1"/><text x="20.2522%" y="1199.50"></text></g><g><title>ntdll`RtlReleaseSRWLockExclusive (1 samples, 0.01%)</title><rect x="20.0239%" y="1173" width="0.0108%" height="15" fill="rgb(242,38,24)" fg:x="1846" fg:w="1"/><text x="20.2739%" y="1183.50"></text></g><g><title>stelpatch-benchmark`lasso::multi_threaded::ThreadedRodeo&lt;lasso::keys::Spur,ahash::random_state::RandomState&gt;::get_or_intern (3 samples, 0.03%)</title><rect x="20.0130%" y="1189" width="0.0325%" height="15" fill="rgb(225,182,9)" fg:x="1845" fg:w="3"/><text x="20.2630%" y="1199.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::get&lt;ref$ (1 samples, 0.01%)</title><rect x="20.0347%" y="1173" width="0.0108%" height="15" fill="rgb(243,178,37)" fg:x="1847" fg:w="1"/><text x="20.2847%" y="1183.50"></text></g><g><title>ntdll`RtlReleaseSRWLockExclusive (1 samples, 0.01%)</title><rect x="20.0456%" y="1173" width="0.0108%" height="15" fill="rgb(232,139,19)" fg:x="1848" fg:w="1"/><text x="20.2956%" y="1183.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;lasso::keys::Spur,ref$&lt;str$&gt;,ahash::random_state::RandomState&gt;::insert&lt;lasso::keys::Spur,ref$ (3 samples, 0.03%)</title><rect x="20.0564%" y="1173" width="0.0325%" height="15" fill="rgb(225,201,24)" fg:x="1849" fg:w="3"/><text x="20.3064%" y="1183.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global&gt;::insert&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;lasso::keys::Spur,lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$ (1 samples, 0.01%)</title><rect x="20.0781%" y="1157" width="0.0108%" height="15" fill="rgb(221,47,46)" fg:x="1851" fg:w="1"/><text x="20.3281%" y="1167.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::entry&lt;ref$ (3 samples, 0.03%)</title><rect x="20.0889%" y="1173" width="0.0325%" height="15" fill="rgb(249,23,13)" fg:x="1852" fg:w="3"/><text x="20.3389%" y="1183.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::get&lt;ref$ (1 samples, 0.01%)</title><rect x="20.1215%" y="1173" width="0.0108%" height="15" fill="rgb(219,9,5)" fg:x="1855" fg:w="1"/><text x="20.3715%" y="1183.50"></text></g><g><title>stelpatch-benchmark`stelpatch::cw_model::Module::new (19 samples, 0.21%)</title><rect x="19.9696%" y="1205" width="0.2061%" height="15" fill="rgb(254,171,16)" fg:x="1841" fg:w="19"/><text x="20.2196%" y="1215.50"></text></g><g><title>stelpatch-benchmark`lasso::multi_threaded::ThreadedRodeo&lt;lasso::keys::Spur,ahash::random_state::RandomState&gt;::get_or_intern&lt;lasso::keys::Spur,ahash::random_state::RandomState,ref$ (12 samples, 0.13%)</title><rect x="20.0456%" y="1189" width="0.1302%" height="15" fill="rgb(230,171,20)" fg:x="1848" fg:w="12"/><text x="20.2956%" y="1199.50"></text></g><g><title>stelpatch-benchmark`dashmap::mapref::entry::VacantEntry&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::insert&lt;ref$ (4 samples, 0.04%)</title><rect x="20.1323%" y="1173" width="0.0434%" height="15" fill="rgb(210,71,41)" fg:x="1856" fg:w="4"/><text x="20.3823%" y="1183.50"></text></g><g><title>stelpatch-benchmark`hashbrown::map::HashMap&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt;,ahash::random_state::RandomState,alloc::alloc::Global&gt;::insert&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue (4 samples, 0.04%)</title><rect x="20.1323%" y="1157" width="0.0434%" height="15" fill="rgb(206,173,20)" fg:x="1856" fg:w="4"/><text x="20.3823%" y="1167.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt; &gt;,alloc::alloc::Global&gt;::insert&lt;tuple$&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,dashmap::util::SharedValue (4 samples, 0.04%)</title><rect x="20.1323%" y="1141" width="0.0434%" height="15" fill="rgb(233,88,34)" fg:x="1856" fg:w="4"/><text x="20.3823%" y="1151.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt; &gt;,alloc::alloc::Global&gt;::reserve_rehash&lt;tuple$&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,dashmap::util::SharedValue (1 samples, 0.01%)</title><rect x="20.1649%" y="1125" width="0.0108%" height="15" fill="rgb(223,209,46)" fg:x="1859" fg:w="1"/><text x="20.4149%" y="1135.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;ahash::random_state::RandomState,ref$&lt;ref$ (1 samples, 0.01%)</title><rect x="20.1649%" y="1109" width="0.0108%" height="15" fill="rgb(250,43,18)" fg:x="1859" fg:w="1"/><text x="20.4149%" y="1119.50"></text></g><g><title>ntdll`RtlCreateTimer (2 samples, 0.02%)</title><rect x="20.3493%" y="1157" width="0.0217%" height="15" fill="rgb(208,13,10)" fg:x="1876" fg:w="2"/><text x="20.5993%" y="1167.50"></text></g><g><title>ntdll`RtlSetUserValueHeap (1 samples, 0.01%)</title><rect x="20.3710%" y="1157" width="0.0108%" height="15" fill="rgb(212,200,36)" fg:x="1878" fg:w="1"/><text x="20.6210%" y="1167.50"></text></g><g><title>ntdll`RtlAllocateHeap (15 samples, 0.16%)</title><rect x="20.2300%" y="1189" width="0.1627%" height="15" fill="rgb(225,90,30)" fg:x="1865" fg:w="15"/><text x="20.4800%" y="1199.50"></text></g><g><title>ntdll`RtlAllocateHeap (14 samples, 0.15%)</title><rect x="20.2408%" y="1173" width="0.1519%" height="15" fill="rgb(236,182,39)" fg:x="1866" fg:w="14"/><text x="20.4908%" y="1183.50"></text></g><g><title>ntdll`memset (1 samples, 0.01%)</title><rect x="20.3818%" y="1157" width="0.0108%" height="15" fill="rgb(212,144,35)" fg:x="1879" fg:w="1"/><text x="20.6318%" y="1167.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (2 samples, 0.02%)</title><rect x="20.3927%" y="1173" width="0.0217%" height="15" fill="rgb(228,63,44)" fg:x="1880" fg:w="2"/><text x="20.6427%" y="1183.50"></text></g><g><title>ntdll`RtlFreeHeap (5 samples, 0.05%)</title><rect x="20.3927%" y="1189" width="0.0542%" height="15" fill="rgb(228,109,6)" fg:x="1880" fg:w="5"/><text x="20.6427%" y="1199.50"></text></g><g><title>ntdll`memset (3 samples, 0.03%)</title><rect x="20.4144%" y="1173" width="0.0325%" height="15" fill="rgb(238,117,24)" fg:x="1882" fg:w="3"/><text x="20.6644%" y="1183.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (3 samples, 0.03%)</title><rect x="20.7289%" y="1141" width="0.0325%" height="15" fill="rgb(242,26,26)" fg:x="1911" fg:w="3"/><text x="20.9789%" y="1151.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.01%)</title><rect x="20.7506%" y="1125" width="0.0108%" height="15" fill="rgb(221,92,48)" fg:x="1913" fg:w="1"/><text x="21.0006%" y="1135.50"></text></g><g><title>ntdll`RtlFreeHeap (11 samples, 0.12%)</title><rect x="20.7289%" y="1157" width="0.1193%" height="15" fill="rgb(209,209,32)" fg:x="1911" fg:w="11"/><text x="20.9789%" y="1167.50"></text></g><g><title>ntdll`memset (8 samples, 0.09%)</title><rect x="20.7615%" y="1141" width="0.0868%" height="15" fill="rgb(221,70,22)" fg:x="1914" fg:w="8"/><text x="21.0115%" y="1151.50"></text></g><g><title>ntdll`RtlEqualUnicodeString (1 samples, 0.01%)</title><rect x="20.8374%" y="1125" width="0.0108%" height="15" fill="rgb(248,145,5)" fg:x="1921" fg:w="1"/><text x="21.0874%" y="1135.50"></text></g><g><title>ntdll`RtlSetUserValueHeap (1 samples, 0.01%)</title><rect x="20.8374%" y="1109" width="0.0108%" height="15" fill="rgb(226,116,26)" fg:x="1921" fg:w="1"/><text x="21.0874%" y="1119.50"></text></g><g><title>ntdll`RtlFreeHeap (1 samples, 0.01%)</title><rect x="20.8374%" y="1093" width="0.0108%" height="15" fill="rgb(244,5,17)" fg:x="1921" fg:w="1"/><text x="21.0874%" y="1103.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.01%)</title><rect x="20.8374%" y="1077" width="0.0108%" height="15" fill="rgb(252,159,33)" fg:x="1921" fg:w="1"/><text x="21.0874%" y="1087.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.01%)</title><rect x="20.8374%" y="1061" width="0.0108%" height="15" fill="rgb(206,71,0)" fg:x="1921" fg:w="1"/><text x="21.0874%" y="1071.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.01%)</title><rect x="20.8374%" y="1045" width="0.0108%" height="15" fill="rgb(233,118,54)" fg:x="1921" fg:w="1"/><text x="21.0874%" y="1055.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.01%)</title><rect x="20.8374%" y="1029" width="0.0108%" height="15" fill="rgb(234,83,48)" fg:x="1921" fg:w="1"/><text x="21.0874%" y="1039.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.01%)</title><rect x="20.8374%" y="1013" width="0.0108%" height="15" fill="rgb(228,3,54)" fg:x="1921" fg:w="1"/><text x="21.0874%" y="1023.50"></text></g><g><title>ntdll`RtlAllocateAndInitializeSid (1 samples, 0.01%)</title><rect x="20.8374%" y="997" width="0.0108%" height="15" fill="rgb(226,155,13)" fg:x="1921" fg:w="1"/><text x="21.0874%" y="1007.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;lasso::keys::Spur,ref$&lt;str$&gt;,ahash::random_state::RandomState&gt;::insert&lt;lasso::keys::Spur,ref$ (3 samples, 0.03%)</title><rect x="20.8591%" y="1125" width="0.0325%" height="15" fill="rgb(241,28,37)" fg:x="1923" fg:w="3"/><text x="21.1091%" y="1135.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::entry&lt;ref$ (2 samples, 0.02%)</title><rect x="20.8916%" y="1125" width="0.0217%" height="15" fill="rgb(233,93,10)" fg:x="1926" fg:w="2"/><text x="21.1416%" y="1135.50"></text></g><g><title>stelpatch-benchmark`dashmap::lock::compare_exchange (1 samples, 0.01%)</title><rect x="20.9025%" y="1109" width="0.0108%" height="15" fill="rgb(225,113,19)" fg:x="1927" fg:w="1"/><text x="21.1525%" y="1119.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::get&lt;ref$ (1 samples, 0.01%)</title><rect x="20.9133%" y="1125" width="0.0108%" height="15" fill="rgb(241,2,18)" fg:x="1928" fg:w="1"/><text x="21.1633%" y="1135.50"></text></g><g><title>VCRUNTIME140`memcmp (1 samples, 0.01%)</title><rect x="20.9133%" y="1109" width="0.0108%" height="15" fill="rgb(228,207,21)" fg:x="1928" fg:w="1"/><text x="21.1633%" y="1119.50"></text></g><g><title>stelpatch-benchmark`enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;::into_value (9 samples, 0.10%)</title><rect x="20.8482%" y="1157" width="0.0976%" height="15" fill="rgb(213,211,35)" fg:x="1922" fg:w="9"/><text x="21.0982%" y="1167.50"></text></g><g><title>stelpatch-benchmark`lasso::multi_threaded::ThreadedRodeo&lt;lasso::keys::Spur,ahash::random_state::RandomState&gt;::get_or_intern&lt;lasso::keys::Spur,ahash::random_state::RandomState,ref$ (9 samples, 0.10%)</title><rect x="20.8482%" y="1141" width="0.0976%" height="15" fill="rgb(209,83,10)" fg:x="1922" fg:w="9"/><text x="21.0982%" y="1151.50"></text></g><g><title>stelpatch-benchmark`dashmap::mapref::entry::VacantEntry&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::insert&lt;ref$ (2 samples, 0.02%)</title><rect x="20.9242%" y="1125" width="0.0217%" height="15" fill="rgb(209,164,1)" fg:x="1929" fg:w="2"/><text x="21.1742%" y="1135.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState,ref$ (12 samples, 0.13%)</title><rect x="21.0435%" y="1141" width="0.1302%" height="15" fill="rgb(213,184,43)" fg:x="1940" fg:w="12"/><text x="21.2935%" y="1151.50"></text></g><g><title>stelpatch-benchmark`core::hash::sip::impl$5::write (5 samples, 0.05%)</title><rect x="21.1194%" y="1125" width="0.0542%" height="15" fill="rgb(231,61,34)" fg:x="1947" fg:w="5"/><text x="21.3694%" y="1135.50"></text></g><g><title>stelpatch-benchmark`hashbrown::map::HashMap&lt;lasso::keys::Spur,stelpatch::cw_model::PropertyInfoList,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::insert (30 samples, 0.33%)</title><rect x="20.9459%" y="1157" width="0.3254%" height="15" fill="rgb(235,75,3)" fg:x="1931" fg:w="30"/><text x="21.1959%" y="1167.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;lasso::keys::Spur,stelpatch::cw_model::PropertyInfoList&gt;,alloc::alloc::Global&gt;::insert&lt;tuple$&lt;lasso::keys::Spur,stelpatch::cw_model::PropertyInfoList&gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0 (9 samples, 0.10%)</title><rect x="21.1737%" y="1141" width="0.0976%" height="15" fill="rgb(220,106,47)" fg:x="1952" fg:w="9"/><text x="21.4237%" y="1151.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::impl$18::into_iter&lt;tuple$&lt;ref$ (2 samples, 0.02%)</title><rect x="21.2713%" y="1157" width="0.0217%" height="15" fill="rgb(210,196,33)" fg:x="1961" fg:w="2"/><text x="21.5213%" y="1167.50"></text></g><g><title>ntdll`RtlReleaseSRWLockExclusive (1 samples, 0.01%)</title><rect x="21.3364%" y="1141" width="0.0108%" height="15" fill="rgb(229,154,42)" fg:x="1967" fg:w="1"/><text x="21.5864%" y="1151.50"></text></g><g><title>stelpatch-benchmark`dashmap::lock::compare_exchange (1 samples, 0.01%)</title><rect x="21.3798%" y="1125" width="0.0108%" height="15" fill="rgb(228,114,26)" fg:x="1971" fg:w="1"/><text x="21.6298%" y="1135.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;lasso::keys::Spur,ref$&lt;str$&gt;,ahash::random_state::RandomState&gt;::insert&lt;lasso::keys::Spur,ref$ (5 samples, 0.05%)</title><rect x="21.3472%" y="1141" width="0.0542%" height="15" fill="rgb(208,144,1)" fg:x="1968" fg:w="5"/><text x="21.5972%" y="1151.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global&gt;::insert&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;lasso::keys::Spur,lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$ (1 samples, 0.01%)</title><rect x="21.3906%" y="1125" width="0.0108%" height="15" fill="rgb(239,112,37)" fg:x="1972" fg:w="1"/><text x="21.6406%" y="1135.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::entry&lt;ref$ (1 samples, 0.01%)</title><rect x="21.4015%" y="1141" width="0.0108%" height="15" fill="rgb(210,96,50)" fg:x="1973" fg:w="1"/><text x="21.6515%" y="1151.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;ahash::random_state::RandomState,ref$&lt;ref$ (1 samples, 0.01%)</title><rect x="21.4015%" y="1125" width="0.0108%" height="15" fill="rgb(222,178,2)" fg:x="1973" fg:w="1"/><text x="21.6515%" y="1135.50"></text></g><g><title>VCRUNTIME140`memcmp (6 samples, 0.07%)</title><rect x="21.7377%" y="1125" width="0.0651%" height="15" fill="rgb(226,74,18)" fg:x="2004" fg:w="6"/><text x="21.9877%" y="1135.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::get&lt;ref$ (49 samples, 0.53%)</title><rect x="21.4123%" y="1141" width="0.5315%" height="15" fill="rgb(225,67,54)" fg:x="1974" fg:w="49"/><text x="21.6623%" y="1151.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;ahash::random_state::RandomState,ref$ (13 samples, 0.14%)</title><rect x="21.8028%" y="1125" width="0.1410%" height="15" fill="rgb(251,92,32)" fg:x="2010" fg:w="13"/><text x="22.0528%" y="1135.50"></text></g><g><title>VCRUNTIME140`memcmp (1 samples, 0.01%)</title><rect x="21.9547%" y="1125" width="0.0108%" height="15" fill="rgb(228,149,22)" fg:x="2024" fg:w="1"/><text x="22.2047%" y="1135.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;ahash::random_state::RandomState,ref$&lt;ref$ (2 samples, 0.02%)</title><rect x="21.9655%" y="1125" width="0.0217%" height="15" fill="rgb(243,54,13)" fg:x="2025" fg:w="2"/><text x="22.2155%" y="1135.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;ahash::random_state::RandomState,ref$&lt;ref$ (1 samples, 0.01%)</title><rect x="21.9980%" y="1109" width="0.0108%" height="15" fill="rgb(243,180,28)" fg:x="2028" fg:w="1"/><text x="22.2480%" y="1119.50"></text></g><g><title>stelpatch-benchmark`lasso::multi_threaded::ThreadedRodeo&lt;lasso::keys::Spur,ahash::random_state::RandomState&gt;::get_or_intern&lt;lasso::keys::Spur,ahash::random_state::RandomState,ref$ (68 samples, 0.74%)</title><rect x="21.2930%" y="1157" width="0.7376%" height="15" fill="rgb(208,167,24)" fg:x="1963" fg:w="68"/><text x="21.5430%" y="1167.50"></text></g><g><title>stelpatch-benchmark`dashmap::mapref::entry::VacantEntry&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::insert&lt;ref$ (8 samples, 0.09%)</title><rect x="21.9438%" y="1141" width="0.0868%" height="15" fill="rgb(245,73,45)" fg:x="2023" fg:w="8"/><text x="22.1938%" y="1151.50"></text></g><g><title>stelpatch-benchmark`hashbrown::map::HashMap&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt;,ahash::random_state::RandomState,alloc::alloc::Global&gt;::insert&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue (4 samples, 0.04%)</title><rect x="21.9872%" y="1125" width="0.0434%" height="15" fill="rgb(237,203,48)" fg:x="2027" fg:w="4"/><text x="22.2372%" y="1135.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt; &gt;,alloc::alloc::Global&gt;::insert&lt;tuple$&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,dashmap::util::SharedValue (2 samples, 0.02%)</title><rect x="22.0089%" y="1109" width="0.0217%" height="15" fill="rgb(211,197,16)" fg:x="2029" fg:w="2"/><text x="22.2589%" y="1119.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;lasso::keys::Spur,stelpatch::cw_model::ConditionalBlock&gt;,alloc::alloc::Global&gt;::with_capacity&lt;tuple$ (1 samples, 0.01%)</title><rect x="22.0631%" y="1141" width="0.0108%" height="15" fill="rgb(243,99,51)" fg:x="2034" fg:w="1"/><text x="22.3131%" y="1151.50"></text></g><g><title>ntdll`RtlCreateTimer (4 samples, 0.04%)</title><rect x="22.1499%" y="1093" width="0.0434%" height="15" fill="rgb(215,123,29)" fg:x="2042" fg:w="4"/><text x="22.3999%" y="1103.50"></text></g><g><title>ntdll`RtlSetUserValueHeap (2 samples, 0.02%)</title><rect x="22.1933%" y="1093" width="0.0217%" height="15" fill="rgb(239,186,37)" fg:x="2046" fg:w="2"/><text x="22.4433%" y="1103.50"></text></g><g><title>stelpatch-benchmark`stelpatch::cw_model::Entity::new (18 samples, 0.20%)</title><rect x="22.0306%" y="1157" width="0.1952%" height="15" fill="rgb(252,136,39)" fg:x="2031" fg:w="18"/><text x="22.2806%" y="1167.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;lasso::keys::Spur,stelpatch::cw_model::PropertyInfoList&gt;,alloc::alloc::Global&gt;::with_capacity&lt;tuple$ (14 samples, 0.15%)</title><rect x="22.0740%" y="1141" width="0.1519%" height="15" fill="rgb(223,213,32)" fg:x="2035" fg:w="14"/><text x="22.3240%" y="1151.50"></text></g><g><title>ntdll`RtlAllocateHeap (14 samples, 0.15%)</title><rect x="22.0740%" y="1125" width="0.1519%" height="15" fill="rgb(233,115,5)" fg:x="2035" fg:w="14"/><text x="22.3240%" y="1135.50"></text></g><g><title>ntdll`RtlAllocateHeap (11 samples, 0.12%)</title><rect x="22.1065%" y="1109" width="0.1193%" height="15" fill="rgb(207,226,44)" fg:x="2038" fg:w="11"/><text x="22.3565%" y="1119.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.01%)</title><rect x="22.2150%" y="1093" width="0.0108%" height="15" fill="rgb(208,126,0)" fg:x="2048" fg:w="1"/><text x="22.4650%" y="1103.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.01%)</title><rect x="22.2150%" y="1077" width="0.0108%" height="15" fill="rgb(244,66,21)" fg:x="2048" fg:w="1"/><text x="22.4650%" y="1087.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="22.2150%" y="1061" width="0.0108%" height="15" fill="rgb(222,97,12)" fg:x="2048" fg:w="1"/><text x="22.4650%" y="1071.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="22.2150%" y="1045" width="0.0108%" height="15" fill="rgb(219,213,19)" fg:x="2048" fg:w="1"/><text x="22.4650%" y="1055.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.01%)</title><rect x="22.2150%" y="1029" width="0.0108%" height="15" fill="rgb(252,169,30)" fg:x="2048" fg:w="1"/><text x="22.4650%" y="1039.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.01%)</title><rect x="22.2150%" y="1013" width="0.0108%" height="15" fill="rgb(206,32,51)" fg:x="2048" fg:w="1"/><text x="22.4650%" y="1023.50"></text></g><g><title>ntdll`NtAllocateVirtualMemory (1 samples, 0.01%)</title><rect x="22.2150%" y="997" width="0.0108%" height="15" fill="rgb(250,172,42)" fg:x="2048" fg:w="1"/><text x="22.4650%" y="1007.50"></text></g><g><title>VCRUNTIME140`memcpy (9 samples, 0.10%)</title><rect x="22.6489%" y="1141" width="0.0976%" height="15" fill="rgb(209,34,43)" fg:x="2088" fg:w="9"/><text x="22.8989%" y="1151.50"></text></g><g><title>ntdll`RtlCreateTimer (30 samples, 0.33%)</title><rect x="23.1695%" y="1109" width="0.3254%" height="15" fill="rgb(223,11,35)" fg:x="2136" fg:w="30"/><text x="23.4195%" y="1119.50"></text></g><g><title>ntdll`RtlSetUserValueHeap (4 samples, 0.04%)</title><rect x="23.4950%" y="1109" width="0.0434%" height="15" fill="rgb(251,219,26)" fg:x="2166" fg:w="4"/><text x="23.7450%" y="1119.50"></text></g><g><title>ntdll`NtProtectVirtualMemory (2 samples, 0.02%)</title><rect x="23.5383%" y="1077" width="0.0217%" height="15" fill="rgb(231,119,3)" fg:x="2170" fg:w="2"/><text x="23.7883%" y="1087.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.01%)</title><rect x="23.5600%" y="1029" width="0.0108%" height="15" fill="rgb(216,97,11)" fg:x="2172" fg:w="1"/><text x="23.8100%" y="1039.50"></text></g><g><title>ntdll`RtlRunOnceBeginInitialize (1 samples, 0.01%)</title><rect x="23.5600%" y="1013" width="0.0108%" height="15" fill="rgb(223,59,9)" fg:x="2172" fg:w="1"/><text x="23.8100%" y="1023.50"></text></g><g><title>ntdll`NtAllocateVirtualMemory (1 samples, 0.01%)</title><rect x="23.5709%" y="1013" width="0.0108%" height="15" fill="rgb(233,93,31)" fg:x="2173" fg:w="1"/><text x="23.8209%" y="1023.50"></text></g><g><title>ntdll`RtlProtectHeap (3 samples, 0.03%)</title><rect x="23.5709%" y="1029" width="0.0325%" height="15" fill="rgb(239,81,33)" fg:x="2173" fg:w="3"/><text x="23.8209%" y="1039.50"></text></g><g><title>ntdll`RtlProtectHeap (2 samples, 0.02%)</title><rect x="23.5817%" y="1013" width="0.0217%" height="15" fill="rgb(213,120,34)" fg:x="2174" fg:w="2"/><text x="23.8317%" y="1023.50"></text></g><g><title>ntdll`RtlAllocateHeap (5 samples, 0.05%)</title><rect x="23.5600%" y="1077" width="0.0542%" height="15" fill="rgb(243,49,53)" fg:x="2172" fg:w="5"/><text x="23.8100%" y="1087.50"></text></g><g><title>ntdll`RtlAllocateHeap (5 samples, 0.05%)</title><rect x="23.5600%" y="1061" width="0.0542%" height="15" fill="rgb(247,216,33)" fg:x="2172" fg:w="5"/><text x="23.8100%" y="1071.50"></text></g><g><title>ntdll`RtlProtectHeap (5 samples, 0.05%)</title><rect x="23.5600%" y="1045" width="0.0542%" height="15" fill="rgb(226,26,14)" fg:x="2172" fg:w="5"/><text x="23.8100%" y="1055.50"></text></g><g><title>ntdll`RtlQueueWorkItem (1 samples, 0.01%)</title><rect x="23.6034%" y="1029" width="0.0108%" height="15" fill="rgb(215,49,53)" fg:x="2176" fg:w="1"/><text x="23.8534%" y="1039.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (8 samples, 0.09%)</title><rect x="23.5383%" y="1109" width="0.0868%" height="15" fill="rgb(245,162,40)" fg:x="2170" fg:w="8"/><text x="23.7883%" y="1119.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (8 samples, 0.09%)</title><rect x="23.5383%" y="1093" width="0.0868%" height="15" fill="rgb(229,68,17)" fg:x="2170" fg:w="8"/><text x="23.7883%" y="1103.50"></text></g><g><title>ntdll`RtlReAllocateHeap (1 samples, 0.01%)</title><rect x="23.6143%" y="1077" width="0.0108%" height="15" fill="rgb(213,182,10)" fg:x="2177" fg:w="1"/><text x="23.8643%" y="1087.50"></text></g><g><title>ntdll`RtlReAllocateHeap (1 samples, 0.01%)</title><rect x="23.6143%" y="1061" width="0.0108%" height="15" fill="rgb(245,125,30)" fg:x="2177" fg:w="1"/><text x="23.8643%" y="1071.50"></text></g><g><title>ntdll`RtlReleaseSRWLockShared (1 samples, 0.01%)</title><rect x="23.6143%" y="1045" width="0.0108%" height="15" fill="rgb(232,202,2)" fg:x="2177" fg:w="1"/><text x="23.8643%" y="1055.50"></text></g><g><title>ntdll`RtlAllocateHeap (82 samples, 0.89%)</title><rect x="22.7465%" y="1141" width="0.8895%" height="15" fill="rgb(237,140,51)" fg:x="2097" fg:w="82"/><text x="22.9965%" y="1151.50"></text></g><g><title>ntdll`RtlAllocateHeap (72 samples, 0.78%)</title><rect x="22.8550%" y="1125" width="0.7810%" height="15" fill="rgb(236,157,25)" fg:x="2107" fg:w="72"/><text x="23.1050%" y="1135.50"></text></g><g><title>ntdll`memset (1 samples, 0.01%)</title><rect x="23.6251%" y="1109" width="0.0108%" height="15" fill="rgb(219,209,0)" fg:x="2178" fg:w="1"/><text x="23.8751%" y="1119.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (12 samples, 0.13%)</title><rect x="23.6685%" y="1125" width="0.1302%" height="15" fill="rgb(240,116,54)" fg:x="2182" fg:w="12"/><text x="23.9185%" y="1135.50"></text></g><g><title>ntdll`RtlFreeHeap (34 samples, 0.37%)</title><rect x="23.6360%" y="1141" width="0.3688%" height="15" fill="rgb(216,10,36)" fg:x="2179" fg:w="34"/><text x="23.8860%" y="1151.50"></text></g><g><title>ntdll`memset (19 samples, 0.21%)</title><rect x="23.7987%" y="1125" width="0.2061%" height="15" fill="rgb(222,72,44)" fg:x="2194" fg:w="19"/><text x="24.0487%" y="1135.50"></text></g><g><title>ntdll`RtlEqualUnicodeString (3 samples, 0.03%)</title><rect x="23.9722%" y="1109" width="0.0325%" height="15" fill="rgb(232,159,9)" fg:x="2210" fg:w="3"/><text x="24.2222%" y="1119.50"></text></g><g><title>ntdll`RtlSetUserValueHeap (3 samples, 0.03%)</title><rect x="23.9722%" y="1093" width="0.0325%" height="15" fill="rgb(210,39,32)" fg:x="2210" fg:w="3"/><text x="24.2222%" y="1103.50"></text></g><g><title>ntdll`RtlFreeHeap (3 samples, 0.03%)</title><rect x="23.9722%" y="1077" width="0.0325%" height="15" fill="rgb(216,194,45)" fg:x="2210" fg:w="3"/><text x="24.2222%" y="1087.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (3 samples, 0.03%)</title><rect x="23.9722%" y="1061" width="0.0325%" height="15" fill="rgb(218,18,35)" fg:x="2210" fg:w="3"/><text x="24.2222%" y="1071.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (3 samples, 0.03%)</title><rect x="23.9722%" y="1045" width="0.0325%" height="15" fill="rgb(207,83,51)" fg:x="2210" fg:w="3"/><text x="24.2222%" y="1055.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (3 samples, 0.03%)</title><rect x="23.9722%" y="1029" width="0.0325%" height="15" fill="rgb(225,63,43)" fg:x="2210" fg:w="3"/><text x="24.2222%" y="1039.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (3 samples, 0.03%)</title><rect x="23.9722%" y="1013" width="0.0325%" height="15" fill="rgb(207,57,36)" fg:x="2210" fg:w="3"/><text x="24.2222%" y="1023.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (3 samples, 0.03%)</title><rect x="23.9722%" y="997" width="0.0325%" height="15" fill="rgb(216,99,33)" fg:x="2210" fg:w="3"/><text x="24.2222%" y="1007.50"></text></g><g><title>ntdll`TpWaitForWait (3 samples, 0.03%)</title><rect x="23.9722%" y="981" width="0.0325%" height="15" fill="rgb(225,42,16)" fg:x="2210" fg:w="3"/><text x="24.2222%" y="991.50"></text></g><g><title>ntdll`NtFreeVirtualMemory (3 samples, 0.03%)</title><rect x="23.9722%" y="965" width="0.0325%" height="15" fill="rgb(220,201,45)" fg:x="2210" fg:w="3"/><text x="24.2222%" y="975.50"></text></g><g><title>stelpatch-benchmark`_rust_dealloc (1 samples, 0.01%)</title><rect x="24.0048%" y="1141" width="0.0108%" height="15" fill="rgb(225,33,4)" fg:x="2213" fg:w="1"/><text x="24.2548%" y="1151.50"></text></g><g><title>stelpatch-benchmark`dashmap::lock::compare_exchange (1 samples, 0.01%)</title><rect x="24.2543%" y="1093" width="0.0108%" height="15" fill="rgb(224,33,50)" fg:x="2236" fg:w="1"/><text x="24.5043%" y="1103.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.02%)</title><rect x="24.2868%" y="1061" width="0.0217%" height="15" fill="rgb(246,198,51)" fg:x="2239" fg:w="2"/><text x="24.5368%" y="1071.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.02%)</title><rect x="24.2868%" y="1045" width="0.0217%" height="15" fill="rgb(205,22,4)" fg:x="2239" fg:w="2"/><text x="24.5368%" y="1055.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.01%)</title><rect x="24.2976%" y="1029" width="0.0108%" height="15" fill="rgb(206,3,8)" fg:x="2240" fg:w="1"/><text x="24.5476%" y="1039.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.01%)</title><rect x="24.2976%" y="1013" width="0.0108%" height="15" fill="rgb(251,23,15)" fg:x="2240" fg:w="1"/><text x="24.5476%" y="1023.50"></text></g><g><title>ntdll`NtAllocateVirtualMemory (1 samples, 0.01%)</title><rect x="24.2976%" y="997" width="0.0108%" height="15" fill="rgb(252,88,28)" fg:x="2240" fg:w="1"/><text x="24.5476%" y="1007.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;lasso::keys::Spur,ref$&lt;str$&gt;,ahash::random_state::RandomState&gt;::insert&lt;lasso::keys::Spur,ref$ (15 samples, 0.16%)</title><rect x="24.1566%" y="1109" width="0.1627%" height="15" fill="rgb(212,127,14)" fg:x="2227" fg:w="15"/><text x="24.4066%" y="1119.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global&gt;::insert&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;lasso::keys::Spur,lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$ (5 samples, 0.05%)</title><rect x="24.2651%" y="1093" width="0.0542%" height="15" fill="rgb(247,145,37)" fg:x="2237" fg:w="5"/><text x="24.5151%" y="1103.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global&gt;::reserve_rehash&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;lasso::keys::Spur,lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$ (4 samples, 0.04%)</title><rect x="24.2760%" y="1077" width="0.0434%" height="15" fill="rgb(209,117,53)" fg:x="2238" fg:w="4"/><text x="24.5260%" y="1087.50"></text></g><g><title>ntdll`RtlFreeHeap (1 samples, 0.01%)</title><rect x="24.3085%" y="1061" width="0.0108%" height="15" fill="rgb(212,90,42)" fg:x="2241" fg:w="1"/><text x="24.5585%" y="1071.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::entry&lt;ref$ (1 samples, 0.01%)</title><rect x="24.3193%" y="1109" width="0.0108%" height="15" fill="rgb(218,164,37)" fg:x="2242" fg:w="1"/><text x="24.5693%" y="1119.50"></text></g><g><title>VCRUNTIME140`memcmp (4 samples, 0.04%)</title><rect x="24.6556%" y="1093" width="0.0434%" height="15" fill="rgb(246,65,34)" fg:x="2273" fg:w="4"/><text x="24.9056%" y="1103.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::get&lt;ref$ (42 samples, 0.46%)</title><rect x="24.3302%" y="1109" width="0.4556%" height="15" fill="rgb(231,100,33)" fg:x="2243" fg:w="42"/><text x="24.5802%" y="1119.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;ahash::random_state::RandomState,ref$ (8 samples, 0.09%)</title><rect x="24.6990%" y="1093" width="0.0868%" height="15" fill="rgb(228,126,14)" fg:x="2277" fg:w="8"/><text x="24.9490%" y="1103.50"></text></g><g><title>VCRUNTIME140`memcmp (1 samples, 0.01%)</title><rect x="24.7858%" y="1093" width="0.0108%" height="15" fill="rgb(215,173,21)" fg:x="2285" fg:w="1"/><text x="25.0358%" y="1103.50"></text></g><g><title>stelpatch-benchmark`dashmap::mapref::entry::VacantEntry&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::insert&lt;ref$ (17 samples, 0.18%)</title><rect x="24.7858%" y="1109" width="0.1844%" height="15" fill="rgb(210,6,40)" fg:x="2285" fg:w="17"/><text x="25.0358%" y="1119.50"></text></g><g><title>stelpatch-benchmark`hashbrown::map::HashMap&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt;,ahash::random_state::RandomState,alloc::alloc::Global&gt;::insert&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue (16 samples, 0.17%)</title><rect x="24.7966%" y="1093" width="0.1736%" height="15" fill="rgb(212,48,18)" fg:x="2286" fg:w="16"/><text x="25.0466%" y="1103.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt; &gt;,alloc::alloc::Global&gt;::insert&lt;tuple$&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,dashmap::util::SharedValue (14 samples, 0.15%)</title><rect x="24.8183%" y="1077" width="0.1519%" height="15" fill="rgb(230,214,11)" fg:x="2288" fg:w="14"/><text x="25.0683%" y="1087.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt; &gt;,alloc::alloc::Global&gt;::reserve_rehash&lt;tuple$&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,dashmap::util::SharedValue (14 samples, 0.15%)</title><rect x="24.8183%" y="1061" width="0.1519%" height="15" fill="rgb(254,105,39)" fg:x="2288" fg:w="14"/><text x="25.0683%" y="1071.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;ahash::random_state::RandomState,ref$&lt;ref$ (12 samples, 0.13%)</title><rect x="24.8400%" y="1045" width="0.1302%" height="15" fill="rgb(245,158,5)" fg:x="2290" fg:w="12"/><text x="25.0900%" y="1055.50"></text></g><g><title>stelpatch-benchmark`lasso::multi_threaded::ThreadedRodeo&lt;lasso::keys::Spur,ahash::random_state::RandomState&gt;::get_or_intern&lt;lasso::keys::Spur,ahash::random_state::RandomState,ref$ (82 samples, 0.89%)</title><rect x="24.0916%" y="1125" width="0.8895%" height="15" fill="rgb(249,208,11)" fg:x="2221" fg:w="82"/><text x="24.3416%" y="1135.50"></text></g><g><title>stelpatch-benchmark`lasso::arena::Arena::store_str (1 samples, 0.01%)</title><rect x="24.9702%" y="1109" width="0.0108%" height="15" fill="rgb(210,39,28)" fg:x="2302" fg:w="1"/><text x="25.2202%" y="1119.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (5 samples, 0.05%)</title><rect x="25.3932%" y="1093" width="0.0542%" height="15" fill="rgb(211,56,53)" fg:x="2341" fg:w="5"/><text x="25.6432%" y="1103.50"></text></g><g><title>ntdll`RtlEqualUnicodeString (1 samples, 0.01%)</title><rect x="25.5125%" y="1077" width="0.0108%" height="15" fill="rgb(226,201,30)" fg:x="2352" fg:w="1"/><text x="25.7625%" y="1087.50"></text></g><g><title>ntdll`RtlSetUserValueHeap (1 samples, 0.01%)</title><rect x="25.5125%" y="1061" width="0.0108%" height="15" fill="rgb(239,101,34)" fg:x="2352" fg:w="1"/><text x="25.7625%" y="1071.50"></text></g><g><title>ntdll`RtlFreeHeap (1 samples, 0.01%)</title><rect x="25.5125%" y="1045" width="0.0108%" height="15" fill="rgb(226,209,5)" fg:x="2352" fg:w="1"/><text x="25.7625%" y="1055.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.01%)</title><rect x="25.5125%" y="1029" width="0.0108%" height="15" fill="rgb(250,105,47)" fg:x="2352" fg:w="1"/><text x="25.7625%" y="1039.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.01%)</title><rect x="25.5125%" y="1013" width="0.0108%" height="15" fill="rgb(230,72,3)" fg:x="2352" fg:w="1"/><text x="25.7625%" y="1023.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.01%)</title><rect x="25.5125%" y="997" width="0.0108%" height="15" fill="rgb(232,218,39)" fg:x="2352" fg:w="1"/><text x="25.7625%" y="1007.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.01%)</title><rect x="25.5125%" y="981" width="0.0108%" height="15" fill="rgb(248,166,6)" fg:x="2352" fg:w="1"/><text x="25.7625%" y="991.50"></text></g><g><title>ntdll`RtlFreeHeap (15 samples, 0.16%)</title><rect x="25.3715%" y="1109" width="0.1627%" height="15" fill="rgb(247,89,20)" fg:x="2339" fg:w="15"/><text x="25.6215%" y="1119.50"></text></g><g><title>ntdll`memset (8 samples, 0.09%)</title><rect x="25.4474%" y="1093" width="0.0868%" height="15" fill="rgb(248,130,54)" fg:x="2346" fg:w="8"/><text x="25.6974%" y="1103.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.01%)</title><rect x="25.5234%" y="1077" width="0.0108%" height="15" fill="rgb(234,196,4)" fg:x="2353" fg:w="1"/><text x="25.7734%" y="1087.50"></text></g><g><title>stelpatch-benchmark`dashmap::lock::compare_exchange (1 samples, 0.01%)</title><rect x="25.5668%" y="1061" width="0.0108%" height="15" fill="rgb(250,143,31)" fg:x="2357" fg:w="1"/><text x="25.8168%" y="1071.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;lasso::keys::Spur,ref$&lt;str$&gt;,ahash::random_state::RandomState&gt;::insert&lt;lasso::keys::Spur,ref$ (2 samples, 0.02%)</title><rect x="25.5668%" y="1077" width="0.0217%" height="15" fill="rgb(211,110,34)" fg:x="2357" fg:w="2"/><text x="25.8168%" y="1087.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global&gt;::insert&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;lasso::keys::Spur,lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$ (1 samples, 0.01%)</title><rect x="25.5776%" y="1061" width="0.0108%" height="15" fill="rgb(215,124,48)" fg:x="2358" fg:w="1"/><text x="25.8276%" y="1071.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global&gt;::reserve_rehash&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;lasso::keys::Spur,lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$ (1 samples, 0.01%)</title><rect x="25.5776%" y="1045" width="0.0108%" height="15" fill="rgb(216,46,13)" fg:x="2358" fg:w="1"/><text x="25.8276%" y="1055.50"></text></g><g><title>VCRUNTIME140`memcmp (1 samples, 0.01%)</title><rect x="25.6752%" y="1061" width="0.0108%" height="15" fill="rgb(205,184,25)" fg:x="2367" fg:w="1"/><text x="25.9252%" y="1071.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::get&lt;ref$ (12 samples, 0.13%)</title><rect x="25.5885%" y="1077" width="0.1302%" height="15" fill="rgb(228,1,10)" fg:x="2359" fg:w="12"/><text x="25.8385%" y="1087.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;ahash::random_state::RandomState,ref$ (3 samples, 0.03%)</title><rect x="25.6861%" y="1061" width="0.0325%" height="15" fill="rgb(213,116,27)" fg:x="2368" fg:w="3"/><text x="25.9361%" y="1071.50"></text></g><g><title>stelpatch-benchmark`dashmap::mapref::entry::VacantEntry&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::insert&lt;ref$ (1 samples, 0.01%)</title><rect x="25.7186%" y="1077" width="0.0108%" height="15" fill="rgb(241,95,50)" fg:x="2371" fg:w="1"/><text x="25.9686%" y="1087.50"></text></g><g><title>stelpatch-benchmark`hashbrown::map::HashMap&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt;,ahash::random_state::RandomState,alloc::alloc::Global&gt;::insert&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue (1 samples, 0.01%)</title><rect x="25.7186%" y="1061" width="0.0108%" height="15" fill="rgb(238,48,32)" fg:x="2371" fg:w="1"/><text x="25.9686%" y="1071.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;ahash::random_state::RandomState,ref$&lt;ref$ (1 samples, 0.01%)</title><rect x="25.7186%" y="1045" width="0.0108%" height="15" fill="rgb(235,113,49)" fg:x="2371" fg:w="1"/><text x="25.9686%" y="1055.50"></text></g><g><title>stelpatch-benchmark`enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;::into_value (19 samples, 0.21%)</title><rect x="25.5342%" y="1109" width="0.2061%" height="15" fill="rgb(205,127,43)" fg:x="2354" fg:w="19"/><text x="25.7842%" y="1119.50"></text></g><g><title>stelpatch-benchmark`lasso::multi_threaded::ThreadedRodeo&lt;lasso::keys::Spur,ahash::random_state::RandomState&gt;::get_or_intern&lt;lasso::keys::Spur,ahash::random_state::RandomState,ref$ (18 samples, 0.20%)</title><rect x="25.5451%" y="1093" width="0.1952%" height="15" fill="rgb(250,162,2)" fg:x="2355" fg:w="18"/><text x="25.7951%" y="1103.50"></text></g><g><title>stelpatch-benchmark`lasso::arena::Arena::store_str (1 samples, 0.01%)</title><rect x="25.7295%" y="1077" width="0.0108%" height="15" fill="rgb(220,13,41)" fg:x="2372" fg:w="1"/><text x="25.9795%" y="1087.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState,ref$ (8 samples, 0.09%)</title><rect x="25.8054%" y="1093" width="0.0868%" height="15" fill="rgb(249,221,25)" fg:x="2379" fg:w="8"/><text x="26.0554%" y="1103.50"></text></g><g><title>stelpatch-benchmark`hashbrown::map::HashMap&lt;lasso::keys::Spur,stelpatch::cw_model::PropertyInfoList,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::insert (22 samples, 0.24%)</title><rect x="25.7403%" y="1109" width="0.2386%" height="15" fill="rgb(215,208,19)" fg:x="2373" fg:w="22"/><text x="25.9903%" y="1119.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;lasso::keys::Spur,stelpatch::cw_model::PropertyInfoList&gt;,alloc::alloc::Global&gt;::insert&lt;tuple$&lt;lasso::keys::Spur,stelpatch::cw_model::PropertyInfoList&gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0 (8 samples, 0.09%)</title><rect x="25.8922%" y="1093" width="0.0868%" height="15" fill="rgb(236,175,2)" fg:x="2387" fg:w="8"/><text x="26.1422%" y="1103.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::impl$17::drop&lt;tuple$&lt;ref$ (1 samples, 0.01%)</title><rect x="25.9790%" y="1109" width="0.0108%" height="15" fill="rgb(241,52,2)" fg:x="2395" fg:w="1"/><text x="26.2290%" y="1119.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::impl$18::into_iter&lt;tuple$&lt;ref$ (9 samples, 0.10%)</title><rect x="25.9898%" y="1109" width="0.0976%" height="15" fill="rgb(248,140,14)" fg:x="2396" fg:w="9"/><text x="26.2398%" y="1119.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::impl$33::drop&lt;tuple$&lt;ref$ (3 samples, 0.03%)</title><rect x="26.0874%" y="1109" width="0.0325%" height="15" fill="rgb(253,22,42)" fg:x="2405" fg:w="3"/><text x="26.3374%" y="1119.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;lasso::keys::Spur,ref$&lt;str$&gt;,ahash::random_state::RandomState&gt;::insert&lt;lasso::keys::Spur,ref$ (4 samples, 0.04%)</title><rect x="26.2501%" y="1093" width="0.0434%" height="15" fill="rgb(234,61,47)" fg:x="2420" fg:w="4"/><text x="26.5001%" y="1103.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global&gt;::insert&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;lasso::keys::Spur,lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$ (3 samples, 0.03%)</title><rect x="26.2610%" y="1077" width="0.0325%" height="15" fill="rgb(208,226,15)" fg:x="2421" fg:w="3"/><text x="26.5110%" y="1087.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global&gt;::reserve_rehash&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;lasso::keys::Spur,lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$ (2 samples, 0.02%)</title><rect x="26.2718%" y="1061" width="0.0217%" height="15" fill="rgb(217,221,4)" fg:x="2422" fg:w="2"/><text x="26.5218%" y="1071.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::entry&lt;ref$ (2 samples, 0.02%)</title><rect x="26.2935%" y="1093" width="0.0217%" height="15" fill="rgb(212,174,34)" fg:x="2424" fg:w="2"/><text x="26.5435%" y="1103.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;ahash::random_state::RandomState,ref$ (1 samples, 0.01%)</title><rect x="26.3044%" y="1077" width="0.0108%" height="15" fill="rgb(253,83,4)" fg:x="2425" fg:w="1"/><text x="26.5544%" y="1087.50"></text></g><g><title>VCRUNTIME140`memcmp (7 samples, 0.08%)</title><rect x="26.7600%" y="1077" width="0.0759%" height="15" fill="rgb(250,195,49)" fg:x="2467" fg:w="7"/><text x="27.0100%" y="1087.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::get&lt;ref$ (61 samples, 0.66%)</title><rect x="26.3152%" y="1093" width="0.6617%" height="15" fill="rgb(241,192,25)" fg:x="2426" fg:w="61"/><text x="26.5652%" y="1103.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;ahash::random_state::RandomState,ref$ (13 samples, 0.14%)</title><rect x="26.8359%" y="1077" width="0.1410%" height="15" fill="rgb(208,124,10)" fg:x="2474" fg:w="13"/><text x="27.0859%" y="1087.50"></text></g><g><title>stelpatch-benchmark`dashmap::mapref::entry::VacantEntry&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::insert&lt;ref$ (5 samples, 0.05%)</title><rect x="26.9769%" y="1093" width="0.0542%" height="15" fill="rgb(222,33,0)" fg:x="2487" fg:w="5"/><text x="27.2269%" y="1103.50"></text></g><g><title>stelpatch-benchmark`hashbrown::map::HashMap&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt;,ahash::random_state::RandomState,alloc::alloc::Global&gt;::insert&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue (4 samples, 0.04%)</title><rect x="26.9877%" y="1077" width="0.0434%" height="15" fill="rgb(234,209,28)" fg:x="2488" fg:w="4"/><text x="27.2377%" y="1087.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt; &gt;,alloc::alloc::Global&gt;::insert&lt;tuple$&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,dashmap::util::SharedValue (4 samples, 0.04%)</title><rect x="26.9877%" y="1061" width="0.0434%" height="15" fill="rgb(224,11,23)" fg:x="2488" fg:w="4"/><text x="27.2377%" y="1071.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt; &gt;,alloc::alloc::Global&gt;::reserve_rehash&lt;tuple$&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,dashmap::util::SharedValue (2 samples, 0.02%)</title><rect x="27.0094%" y="1045" width="0.0217%" height="15" fill="rgb(232,99,1)" fg:x="2490" fg:w="2"/><text x="27.2594%" y="1055.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;ahash::random_state::RandomState,ref$&lt;ref$ (2 samples, 0.02%)</title><rect x="27.0094%" y="1029" width="0.0217%" height="15" fill="rgb(237,95,45)" fg:x="2490" fg:w="2"/><text x="27.2594%" y="1039.50"></text></g><g><title>stelpatch-benchmark`lasso::multi_threaded::ThreadedRodeo&lt;lasso::keys::Spur,ahash::random_state::RandomState&gt;::get_or_intern&lt;lasso::keys::Spur,ahash::random_state::RandomState,ref$ (86 samples, 0.93%)</title><rect x="26.1200%" y="1109" width="0.9329%" height="15" fill="rgb(208,109,11)" fg:x="2408" fg:w="86"/><text x="26.3700%" y="1119.50"></text></g><g><title>stelpatch-benchmark`lasso::arena::Arena::store_str (2 samples, 0.02%)</title><rect x="27.0311%" y="1093" width="0.0217%" height="15" fill="rgb(216,190,48)" fg:x="2492" fg:w="2"/><text x="27.2811%" y="1103.50"></text></g><g><title>VCRUNTIME140`memcpy (2 samples, 0.02%)</title><rect x="27.0311%" y="1077" width="0.0217%" height="15" fill="rgb(251,171,36)" fg:x="2492" fg:w="2"/><text x="27.2811%" y="1087.50"></text></g><g><title>ntdll`RtlCreateTimer (3 samples, 0.03%)</title><rect x="27.1396%" y="1061" width="0.0325%" height="15" fill="rgb(230,62,22)" fg:x="2502" fg:w="3"/><text x="27.3896%" y="1071.50"></text></g><g><title>ntdll`RtlAllocateHeap (9 samples, 0.10%)</title><rect x="27.0962%" y="1093" width="0.0976%" height="15" fill="rgb(225,114,35)" fg:x="2498" fg:w="9"/><text x="27.3462%" y="1103.50"></text></g><g><title>ntdll`RtlAllocateHeap (8 samples, 0.09%)</title><rect x="27.1071%" y="1077" width="0.0868%" height="15" fill="rgb(215,118,42)" fg:x="2499" fg:w="8"/><text x="27.3571%" y="1087.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (2 samples, 0.02%)</title><rect x="27.1721%" y="1061" width="0.0217%" height="15" fill="rgb(243,119,21)" fg:x="2505" fg:w="2"/><text x="27.4221%" y="1071.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (2 samples, 0.02%)</title><rect x="27.1721%" y="1045" width="0.0217%" height="15" fill="rgb(252,177,53)" fg:x="2505" fg:w="2"/><text x="27.4221%" y="1055.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.02%)</title><rect x="27.1721%" y="1029" width="0.0217%" height="15" fill="rgb(237,209,29)" fg:x="2505" fg:w="2"/><text x="27.4221%" y="1039.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.02%)</title><rect x="27.1721%" y="1013" width="0.0217%" height="15" fill="rgb(212,65,23)" fg:x="2505" fg:w="2"/><text x="27.4221%" y="1023.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.01%)</title><rect x="27.1830%" y="997" width="0.0108%" height="15" fill="rgb(230,222,46)" fg:x="2506" fg:w="1"/><text x="27.4330%" y="1007.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.01%)</title><rect x="27.1830%" y="981" width="0.0108%" height="15" fill="rgb(215,135,32)" fg:x="2506" fg:w="1"/><text x="27.4330%" y="991.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;lasso::keys::Spur,stelpatch::cw_model::ConditionalBlock&gt;,alloc::alloc::Global&gt;::with_capacity&lt;tuple$ (1 samples, 0.01%)</title><rect x="27.1938%" y="1093" width="0.0108%" height="15" fill="rgb(246,101,22)" fg:x="2507" fg:w="1"/><text x="27.4438%" y="1103.50"></text></g><g><title>ntdll`RtlCreateTimer (14 samples, 0.15%)</title><rect x="27.3674%" y="1045" width="0.1519%" height="15" fill="rgb(206,107,13)" fg:x="2523" fg:w="14"/><text x="27.6174%" y="1055.50"></text></g><g><title>ntdll`RtlSetUserValueHeap (1 samples, 0.01%)</title><rect x="27.5193%" y="1045" width="0.0108%" height="15" fill="rgb(250,100,44)" fg:x="2537" fg:w="1"/><text x="27.7693%" y="1055.50"></text></g><g><title>ntdll`NtProtectVirtualMemory (1 samples, 0.01%)</title><rect x="27.5301%" y="1013" width="0.0108%" height="15" fill="rgb(231,147,38)" fg:x="2538" fg:w="1"/><text x="27.7801%" y="1023.50"></text></g><g><title>ntdll`RtlAllocateHeap (30 samples, 0.33%)</title><rect x="27.2264%" y="1077" width="0.3254%" height="15" fill="rgb(229,8,40)" fg:x="2510" fg:w="30"/><text x="27.4764%" y="1087.50"></text></g><g><title>ntdll`RtlAllocateHeap (27 samples, 0.29%)</title><rect x="27.2589%" y="1061" width="0.2929%" height="15" fill="rgb(221,135,30)" fg:x="2513" fg:w="27"/><text x="27.5089%" y="1071.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (2 samples, 0.02%)</title><rect x="27.5301%" y="1045" width="0.0217%" height="15" fill="rgb(249,193,18)" fg:x="2538" fg:w="2"/><text x="27.7801%" y="1055.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (2 samples, 0.02%)</title><rect x="27.5301%" y="1029" width="0.0217%" height="15" fill="rgb(209,133,39)" fg:x="2538" fg:w="2"/><text x="27.7801%" y="1039.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="27.5409%" y="1013" width="0.0108%" height="15" fill="rgb(232,100,14)" fg:x="2539" fg:w="1"/><text x="27.7909%" y="1023.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="27.5409%" y="997" width="0.0108%" height="15" fill="rgb(224,185,1)" fg:x="2539" fg:w="1"/><text x="27.7909%" y="1007.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.01%)</title><rect x="27.5409%" y="981" width="0.0108%" height="15" fill="rgb(223,139,8)" fg:x="2539" fg:w="1"/><text x="27.7909%" y="991.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.01%)</title><rect x="27.5409%" y="965" width="0.0108%" height="15" fill="rgb(232,213,38)" fg:x="2539" fg:w="1"/><text x="27.7909%" y="975.50"></text></g><g><title>ntdll`NtAllocateVirtualMemory (1 samples, 0.01%)</title><rect x="27.5409%" y="949" width="0.0108%" height="15" fill="rgb(207,94,22)" fg:x="2539" fg:w="1"/><text x="27.7909%" y="959.50"></text></g><g><title>stelpatch-benchmark`stelpatch::cw_model::Entity::new (47 samples, 0.51%)</title><rect x="27.0528%" y="1109" width="0.5098%" height="15" fill="rgb(219,183,54)" fg:x="2494" fg:w="47"/><text x="27.3028%" y="1119.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;lasso::keys::Spur,stelpatch::cw_model::PropertyInfoList&gt;,alloc::alloc::Global&gt;::with_capacity&lt;tuple$ (33 samples, 0.36%)</title><rect x="27.2047%" y="1093" width="0.3580%" height="15" fill="rgb(216,185,54)" fg:x="2508" fg:w="33"/><text x="27.4547%" y="1103.50"></text></g><g><title>stelpatch-benchmark`std::alloc::__default_lib_allocator::__rdl_alloc (1 samples, 0.01%)</title><rect x="27.5518%" y="1077" width="0.0108%" height="15" fill="rgb(254,217,39)" fg:x="2540" fg:w="1"/><text x="27.8018%" y="1087.50"></text></g><g><title>KERNEL32`HeapFree (1 samples, 0.01%)</title><rect x="28.0508%" y="1093" width="0.0108%" height="15" fill="rgb(240,178,23)" fg:x="2586" fg:w="1"/><text x="28.3008%" y="1103.50"></text></g><g><title>VCRUNTIME140`memcpy (10 samples, 0.11%)</title><rect x="28.0616%" y="1093" width="0.1085%" height="15" fill="rgb(218,11,47)" fg:x="2587" fg:w="10"/><text x="28.3116%" y="1103.50"></text></g><g><title>ntdll`RtlCreateTimer (32 samples, 0.35%)</title><rect x="28.5606%" y="1061" width="0.3471%" height="15" fill="rgb(218,51,51)" fg:x="2633" fg:w="32"/><text x="28.8106%" y="1071.50"></text></g><g><title>ntdll`RtlSetUserValueHeap (2 samples, 0.02%)</title><rect x="28.9077%" y="1061" width="0.0217%" height="15" fill="rgb(238,126,27)" fg:x="2665" fg:w="2"/><text x="29.1577%" y="1071.50"></text></g><g><title>ntdll`NtAllocateVirtualMemory (3 samples, 0.03%)</title><rect x="28.9294%" y="965" width="0.0325%" height="15" fill="rgb(249,202,22)" fg:x="2667" fg:w="3"/><text x="29.1794%" y="975.50"></text></g><g><title>ntdll`RtlAllocateHeap (75 samples, 0.81%)</title><rect x="28.1701%" y="1093" width="0.8135%" height="15" fill="rgb(254,195,49)" fg:x="2597" fg:w="75"/><text x="28.4201%" y="1103.50"></text></g><g><title>ntdll`RtlAllocateHeap (68 samples, 0.74%)</title><rect x="28.2460%" y="1077" width="0.7376%" height="15" fill="rgb(208,123,14)" fg:x="2604" fg:w="68"/><text x="28.4960%" y="1087.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (5 samples, 0.05%)</title><rect x="28.9294%" y="1061" width="0.0542%" height="15" fill="rgb(224,200,8)" fg:x="2667" fg:w="5"/><text x="29.1794%" y="1071.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (5 samples, 0.05%)</title><rect x="28.9294%" y="1045" width="0.0542%" height="15" fill="rgb(217,61,36)" fg:x="2667" fg:w="5"/><text x="29.1794%" y="1055.50"></text></g><g><title>ntdll`RtlAllocateHeap (5 samples, 0.05%)</title><rect x="28.9294%" y="1029" width="0.0542%" height="15" fill="rgb(206,35,45)" fg:x="2667" fg:w="5"/><text x="29.1794%" y="1039.50"></text></g><g><title>ntdll`RtlAllocateHeap (5 samples, 0.05%)</title><rect x="28.9294%" y="1013" width="0.0542%" height="15" fill="rgb(217,65,33)" fg:x="2667" fg:w="5"/><text x="29.1794%" y="1023.50"></text></g><g><title>ntdll`RtlProtectHeap (5 samples, 0.05%)</title><rect x="28.9294%" y="997" width="0.0542%" height="15" fill="rgb(222,158,48)" fg:x="2667" fg:w="5"/><text x="29.1794%" y="1007.50"></text></g><g><title>ntdll`RtlProtectHeap (5 samples, 0.05%)</title><rect x="28.9294%" y="981" width="0.0542%" height="15" fill="rgb(254,2,54)" fg:x="2667" fg:w="5"/><text x="29.1794%" y="991.50"></text></g><g><title>ntdll`RtlProtectHeap (2 samples, 0.02%)</title><rect x="28.9619%" y="965" width="0.0217%" height="15" fill="rgb(250,143,38)" fg:x="2670" fg:w="2"/><text x="29.2119%" y="975.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (5 samples, 0.05%)</title><rect x="28.9945%" y="1077" width="0.0542%" height="15" fill="rgb(248,25,0)" fg:x="2673" fg:w="5"/><text x="29.2445%" y="1087.50"></text></g><g><title>ntdll`RtlEqualUnicodeString (5 samples, 0.05%)</title><rect x="29.2656%" y="1061" width="0.0542%" height="15" fill="rgb(206,152,27)" fg:x="2698" fg:w="5"/><text x="29.5156%" y="1071.50"></text></g><g><title>ntdll`RtlSetUserValueHeap (5 samples, 0.05%)</title><rect x="29.2656%" y="1045" width="0.0542%" height="15" fill="rgb(240,77,30)" fg:x="2698" fg:w="5"/><text x="29.5156%" y="1055.50"></text></g><g><title>ntdll`RtlFreeHeap (4 samples, 0.04%)</title><rect x="29.2765%" y="1029" width="0.0434%" height="15" fill="rgb(231,5,3)" fg:x="2699" fg:w="4"/><text x="29.5265%" y="1039.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (4 samples, 0.04%)</title><rect x="29.2765%" y="1013" width="0.0434%" height="15" fill="rgb(207,226,32)" fg:x="2699" fg:w="4"/><text x="29.5265%" y="1023.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (4 samples, 0.04%)</title><rect x="29.2765%" y="997" width="0.0434%" height="15" fill="rgb(222,207,47)" fg:x="2699" fg:w="4"/><text x="29.5265%" y="1007.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (4 samples, 0.04%)</title><rect x="29.2765%" y="981" width="0.0434%" height="15" fill="rgb(229,115,45)" fg:x="2699" fg:w="4"/><text x="29.5265%" y="991.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (4 samples, 0.04%)</title><rect x="29.2765%" y="965" width="0.0434%" height="15" fill="rgb(224,191,6)" fg:x="2699" fg:w="4"/><text x="29.5265%" y="975.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (4 samples, 0.04%)</title><rect x="29.2765%" y="949" width="0.0434%" height="15" fill="rgb(230,227,24)" fg:x="2699" fg:w="4"/><text x="29.5265%" y="959.50"></text></g><g><title>ntdll`TpWaitForWait (4 samples, 0.04%)</title><rect x="29.2765%" y="933" width="0.0434%" height="15" fill="rgb(228,80,19)" fg:x="2699" fg:w="4"/><text x="29.5265%" y="943.50"></text></g><g><title>ntdll`NtFreeVirtualMemory (4 samples, 0.04%)</title><rect x="29.2765%" y="917" width="0.0434%" height="15" fill="rgb(247,229,0)" fg:x="2699" fg:w="4"/><text x="29.5265%" y="927.50"></text></g><g><title>ntdll`RtlFreeHeap (32 samples, 0.35%)</title><rect x="28.9836%" y="1093" width="0.3471%" height="15" fill="rgb(237,194,15)" fg:x="2672" fg:w="32"/><text x="29.2336%" y="1103.50"></text></g><g><title>ntdll`memset (26 samples, 0.28%)</title><rect x="29.0487%" y="1077" width="0.2820%" height="15" fill="rgb(219,203,20)" fg:x="2678" fg:w="26"/><text x="29.2987%" y="1087.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.01%)</title><rect x="29.3199%" y="1061" width="0.0108%" height="15" fill="rgb(234,128,8)" fg:x="2703" fg:w="1"/><text x="29.5699%" y="1071.50"></text></g><g><title>ntdll`RtlReleaseSRWLockExclusive (1 samples, 0.01%)</title><rect x="29.4826%" y="1061" width="0.0108%" height="15" fill="rgb(248,202,8)" fg:x="2718" fg:w="1"/><text x="29.7326%" y="1071.50"></text></g><g><title>stelpatch-benchmark`dashmap::lock::compare_exchange (1 samples, 0.01%)</title><rect x="29.5802%" y="1045" width="0.0108%" height="15" fill="rgb(206,104,37)" fg:x="2727" fg:w="1"/><text x="29.8302%" y="1055.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;lasso::keys::Spur,ref$&lt;str$&gt;,ahash::random_state::RandomState&gt;::insert&lt;lasso::keys::Spur,ref$ (17 samples, 0.18%)</title><rect x="29.4934%" y="1061" width="0.1844%" height="15" fill="rgb(223,8,27)" fg:x="2719" fg:w="17"/><text x="29.7434%" y="1071.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global&gt;::insert&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;lasso::keys::Spur,lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$ (8 samples, 0.09%)</title><rect x="29.5911%" y="1045" width="0.0868%" height="15" fill="rgb(216,217,28)" fg:x="2728" fg:w="8"/><text x="29.8411%" y="1055.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global&gt;::reserve_rehash&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;lasso::keys::Spur,lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$ (7 samples, 0.08%)</title><rect x="29.6019%" y="1029" width="0.0759%" height="15" fill="rgb(249,199,1)" fg:x="2729" fg:w="7"/><text x="29.8519%" y="1039.50"></text></g><g><title>ntdll`RtlAllocateHeap (3 samples, 0.03%)</title><rect x="29.6453%" y="1013" width="0.0325%" height="15" fill="rgb(240,85,17)" fg:x="2733" fg:w="3"/><text x="29.8953%" y="1023.50"></text></g><g><title>ntdll`RtlAllocateHeap (3 samples, 0.03%)</title><rect x="29.6453%" y="997" width="0.0325%" height="15" fill="rgb(206,108,45)" fg:x="2733" fg:w="3"/><text x="29.8953%" y="1007.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.01%)</title><rect x="29.6670%" y="981" width="0.0108%" height="15" fill="rgb(245,210,41)" fg:x="2735" fg:w="1"/><text x="29.9170%" y="991.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.01%)</title><rect x="29.6670%" y="965" width="0.0108%" height="15" fill="rgb(206,13,37)" fg:x="2735" fg:w="1"/><text x="29.9170%" y="975.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.01%)</title><rect x="29.6670%" y="949" width="0.0108%" height="15" fill="rgb(250,61,18)" fg:x="2735" fg:w="1"/><text x="29.9170%" y="959.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;ahash::random_state::RandomState,ref$ (1 samples, 0.01%)</title><rect x="29.6778%" y="1045" width="0.0108%" height="15" fill="rgb(235,172,48)" fg:x="2736" fg:w="1"/><text x="29.9278%" y="1055.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::entry&lt;ref$ (2 samples, 0.02%)</title><rect x="29.6778%" y="1061" width="0.0217%" height="15" fill="rgb(249,201,17)" fg:x="2736" fg:w="2"/><text x="29.9278%" y="1071.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;ahash::random_state::RandomState,ref$&lt;ref$ (1 samples, 0.01%)</title><rect x="29.6887%" y="1045" width="0.0108%" height="15" fill="rgb(219,208,6)" fg:x="2737" fg:w="1"/><text x="29.9387%" y="1055.50"></text></g><g><title>VCRUNTIME140`memcmp (3 samples, 0.03%)</title><rect x="29.9599%" y="1045" width="0.0325%" height="15" fill="rgb(248,31,23)" fg:x="2762" fg:w="3"/><text x="30.2099%" y="1055.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::get&lt;ref$ (35 samples, 0.38%)</title><rect x="29.6995%" y="1061" width="0.3797%" height="15" fill="rgb(245,15,42)" fg:x="2738" fg:w="35"/><text x="29.9495%" y="1071.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;ahash::random_state::RandomState,ref$ (8 samples, 0.09%)</title><rect x="29.9924%" y="1045" width="0.0868%" height="15" fill="rgb(222,217,39)" fg:x="2765" fg:w="8"/><text x="30.2424%" y="1055.50"></text></g><g><title>VCRUNTIME140`memcmp (1 samples, 0.01%)</title><rect x="30.0900%" y="1045" width="0.0108%" height="15" fill="rgb(210,219,27)" fg:x="2774" fg:w="1"/><text x="30.3400%" y="1055.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="30.1985%" y="997" width="0.0108%" height="15" fill="rgb(252,166,36)" fg:x="2784" fg:w="1"/><text x="30.4485%" y="1007.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="30.1985%" y="981" width="0.0108%" height="15" fill="rgb(245,132,34)" fg:x="2784" fg:w="1"/><text x="30.4485%" y="991.50"></text></g><g><title>ntdll`RtlCreateTimer (1 samples, 0.01%)</title><rect x="30.1985%" y="965" width="0.0108%" height="15" fill="rgb(236,54,3)" fg:x="2784" fg:w="1"/><text x="30.4485%" y="975.50"></text></g><g><title>ntdll`memset (1 samples, 0.01%)</title><rect x="30.1985%" y="949" width="0.0108%" height="15" fill="rgb(241,173,43)" fg:x="2784" fg:w="1"/><text x="30.4485%" y="959.50"></text></g><g><title>stelpatch-benchmark`lasso::multi_threaded::ThreadedRodeo&lt;lasso::keys::Spur,ahash::random_state::RandomState&gt;::get_or_intern&lt;lasso::keys::Spur,ahash::random_state::RandomState,ref$ (89 samples, 0.97%)</title><rect x="29.4067%" y="1077" width="0.9654%" height="15" fill="rgb(215,190,9)" fg:x="2711" fg:w="89"/><text x="29.6567%" y="1087.50"></text></g><g><title>stelpatch-benchmark`dashmap::mapref::entry::VacantEntry&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::insert&lt;ref$ (27 samples, 0.29%)</title><rect x="30.0792%" y="1061" width="0.2929%" height="15" fill="rgb(242,101,16)" fg:x="2773" fg:w="27"/><text x="30.3292%" y="1071.50"></text></g><g><title>stelpatch-benchmark`hashbrown::map::HashMap&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt;,ahash::random_state::RandomState,alloc::alloc::Global&gt;::insert&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue (25 samples, 0.27%)</title><rect x="30.1009%" y="1045" width="0.2712%" height="15" fill="rgb(223,190,21)" fg:x="2775" fg:w="25"/><text x="30.3509%" y="1055.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt; &gt;,alloc::alloc::Global&gt;::insert&lt;tuple$&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,dashmap::util::SharedValue (22 samples, 0.24%)</title><rect x="30.1334%" y="1029" width="0.2386%" height="15" fill="rgb(215,228,25)" fg:x="2778" fg:w="22"/><text x="30.3834%" y="1039.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt; &gt;,alloc::alloc::Global&gt;::reserve_rehash&lt;tuple$&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,dashmap::util::SharedValue (20 samples, 0.22%)</title><rect x="30.1551%" y="1013" width="0.2169%" height="15" fill="rgb(225,36,22)" fg:x="2780" fg:w="20"/><text x="30.4051%" y="1023.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;ahash::random_state::RandomState,ref$&lt;ref$ (15 samples, 0.16%)</title><rect x="30.2094%" y="997" width="0.1627%" height="15" fill="rgb(251,106,46)" fg:x="2785" fg:w="15"/><text x="30.4594%" y="1007.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (3 samples, 0.03%)</title><rect x="30.7951%" y="1045" width="0.0325%" height="15" fill="rgb(208,90,1)" fg:x="2839" fg:w="3"/><text x="31.0451%" y="1055.50"></text></g><g><title>ntdll`RtlFreeHeap (13 samples, 0.14%)</title><rect x="30.7734%" y="1061" width="0.1410%" height="15" fill="rgb(243,10,4)" fg:x="2837" fg:w="13"/><text x="31.0234%" y="1071.50"></text></g><g><title>ntdll`memset (8 samples, 0.09%)</title><rect x="30.8276%" y="1045" width="0.0868%" height="15" fill="rgb(212,137,27)" fg:x="2842" fg:w="8"/><text x="31.0776%" y="1055.50"></text></g><g><title>ntdll`RtlEqualUnicodeString (1 samples, 0.01%)</title><rect x="30.9036%" y="1029" width="0.0108%" height="15" fill="rgb(231,220,49)" fg:x="2849" fg:w="1"/><text x="31.1536%" y="1039.50"></text></g><g><title>ntdll`RtlSetUserValueHeap (1 samples, 0.01%)</title><rect x="30.9036%" y="1013" width="0.0108%" height="15" fill="rgb(237,96,20)" fg:x="2849" fg:w="1"/><text x="31.1536%" y="1023.50"></text></g><g><title>ntdll`RtlFreeHeap (1 samples, 0.01%)</title><rect x="30.9036%" y="997" width="0.0108%" height="15" fill="rgb(239,229,30)" fg:x="2849" fg:w="1"/><text x="31.1536%" y="1007.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.01%)</title><rect x="30.9036%" y="981" width="0.0108%" height="15" fill="rgb(219,65,33)" fg:x="2849" fg:w="1"/><text x="31.1536%" y="991.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.01%)</title><rect x="30.9036%" y="965" width="0.0108%" height="15" fill="rgb(243,134,7)" fg:x="2849" fg:w="1"/><text x="31.1536%" y="975.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.01%)</title><rect x="30.9036%" y="949" width="0.0108%" height="15" fill="rgb(216,177,54)" fg:x="2849" fg:w="1"/><text x="31.1536%" y="959.50"></text></g><g><title>ntdll`NtAllocateVirtualMemory (1 samples, 0.01%)</title><rect x="30.9036%" y="933" width="0.0108%" height="15" fill="rgb(211,160,20)" fg:x="2849" fg:w="1"/><text x="31.1536%" y="943.50"></text></g><g><title>stelpatch-benchmark`_rust_dealloc (1 samples, 0.01%)</title><rect x="30.9144%" y="1061" width="0.0108%" height="15" fill="rgb(239,85,39)" fg:x="2850" fg:w="1"/><text x="31.1644%" y="1071.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;lasso::keys::Spur,ref$&lt;str$&gt;,ahash::random_state::RandomState&gt;::insert&lt;lasso::keys::Spur,ref$ (10 samples, 0.11%)</title><rect x="31.0012%" y="1029" width="0.1085%" height="15" fill="rgb(232,125,22)" fg:x="2858" fg:w="10"/><text x="31.2512%" y="1039.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global&gt;::insert&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;lasso::keys::Spur,lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$ (4 samples, 0.04%)</title><rect x="31.0663%" y="1013" width="0.0434%" height="15" fill="rgb(244,57,34)" fg:x="2864" fg:w="4"/><text x="31.3163%" y="1023.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global&gt;::reserve_rehash&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;lasso::keys::Spur,lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$ (2 samples, 0.02%)</title><rect x="31.0880%" y="997" width="0.0217%" height="15" fill="rgb(214,203,32)" fg:x="2866" fg:w="2"/><text x="31.3380%" y="1007.50"></text></g><g><title>ntdll`RtlFreeHeap (1 samples, 0.01%)</title><rect x="31.0988%" y="981" width="0.0108%" height="15" fill="rgb(207,58,43)" fg:x="2867" fg:w="1"/><text x="31.3488%" y="991.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.01%)</title><rect x="31.0988%" y="965" width="0.0108%" height="15" fill="rgb(215,193,15)" fg:x="2867" fg:w="1"/><text x="31.3488%" y="975.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.01%)</title><rect x="31.0988%" y="949" width="0.0108%" height="15" fill="rgb(232,15,44)" fg:x="2867" fg:w="1"/><text x="31.3488%" y="959.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.01%)</title><rect x="31.0988%" y="933" width="0.0108%" height="15" fill="rgb(212,3,48)" fg:x="2867" fg:w="1"/><text x="31.3488%" y="943.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.01%)</title><rect x="31.0988%" y="917" width="0.0108%" height="15" fill="rgb(218,128,7)" fg:x="2867" fg:w="1"/><text x="31.3488%" y="927.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;ahash::random_state::RandomState,ref$ (1 samples, 0.01%)</title><rect x="31.1314%" y="1013" width="0.0108%" height="15" fill="rgb(226,216,39)" fg:x="2870" fg:w="1"/><text x="31.3814%" y="1023.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::entry&lt;ref$ (5 samples, 0.05%)</title><rect x="31.1097%" y="1029" width="0.0542%" height="15" fill="rgb(243,47,51)" fg:x="2868" fg:w="5"/><text x="31.3597%" y="1039.50"></text></g><g><title>stelpatch-benchmark`dashmap::lock::compare_exchange (2 samples, 0.02%)</title><rect x="31.1422%" y="1013" width="0.0217%" height="15" fill="rgb(241,183,40)" fg:x="2871" fg:w="2"/><text x="31.3922%" y="1023.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::get&lt;ref$ (12 samples, 0.13%)</title><rect x="31.1639%" y="1029" width="0.1302%" height="15" fill="rgb(231,217,32)" fg:x="2873" fg:w="12"/><text x="31.4139%" y="1039.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;ahash::random_state::RandomState,ref$ (1 samples, 0.01%)</title><rect x="31.2832%" y="1013" width="0.0108%" height="15" fill="rgb(229,61,38)" fg:x="2884" fg:w="1"/><text x="31.5332%" y="1023.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;ahash::random_state::RandomState,ref$&lt;ref$ (1 samples, 0.01%)</title><rect x="31.2941%" y="1013" width="0.0108%" height="15" fill="rgb(225,210,5)" fg:x="2885" fg:w="1"/><text x="31.5441%" y="1023.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;ahash::random_state::RandomState,ref$&lt;ref$ (1 samples, 0.01%)</title><rect x="31.3049%" y="997" width="0.0108%" height="15" fill="rgb(231,79,45)" fg:x="2886" fg:w="1"/><text x="31.5549%" y="1007.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="31.3591%" y="965" width="0.0108%" height="15" fill="rgb(224,100,7)" fg:x="2891" fg:w="1"/><text x="31.6091%" y="975.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="31.3591%" y="949" width="0.0108%" height="15" fill="rgb(241,198,18)" fg:x="2891" fg:w="1"/><text x="31.6091%" y="959.50"></text></g><g><title>stelpatch-benchmark`dashmap::mapref::entry::VacantEntry&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::insert&lt;ref$ (11 samples, 0.12%)</title><rect x="31.2941%" y="1029" width="0.1193%" height="15" fill="rgb(252,97,53)" fg:x="2885" fg:w="11"/><text x="31.5441%" y="1039.50"></text></g><g><title>stelpatch-benchmark`hashbrown::map::HashMap&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt;,ahash::random_state::RandomState,alloc::alloc::Global&gt;::insert&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue (10 samples, 0.11%)</title><rect x="31.3049%" y="1013" width="0.1085%" height="15" fill="rgb(220,88,7)" fg:x="2886" fg:w="10"/><text x="31.5549%" y="1023.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt; &gt;,alloc::alloc::Global&gt;::insert&lt;tuple$&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,dashmap::util::SharedValue (9 samples, 0.10%)</title><rect x="31.3158%" y="997" width="0.0976%" height="15" fill="rgb(213,176,14)" fg:x="2887" fg:w="9"/><text x="31.5658%" y="1007.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt; &gt;,alloc::alloc::Global&gt;::reserve_rehash&lt;tuple$&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,dashmap::util::SharedValue (7 samples, 0.08%)</title><rect x="31.3375%" y="981" width="0.0759%" height="15" fill="rgb(246,73,7)" fg:x="2889" fg:w="7"/><text x="31.5875%" y="991.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;ahash::random_state::RandomState,ref$&lt;ref$ (4 samples, 0.04%)</title><rect x="31.3700%" y="965" width="0.0434%" height="15" fill="rgb(245,64,36)" fg:x="2892" fg:w="4"/><text x="31.6200%" y="975.50"></text></g><g><title>stelpatch-benchmark`lasso::multi_threaded::ThreadedRodeo&lt;lasso::keys::Spur,ahash::random_state::RandomState&gt;::get_or_intern&lt;lasso::keys::Spur,ahash::random_state::RandomState,ref$ (45 samples, 0.49%)</title><rect x="30.9470%" y="1045" width="0.4881%" height="15" fill="rgb(245,80,10)" fg:x="2853" fg:w="45"/><text x="31.1970%" y="1055.50"></text></g><g><title>stelpatch-benchmark`lasso::arena::Arena::store_str (2 samples, 0.02%)</title><rect x="31.4134%" y="1029" width="0.0217%" height="15" fill="rgb(232,107,50)" fg:x="2896" fg:w="2"/><text x="31.6634%" y="1039.50"></text></g><g><title>VCRUNTIME140`memcpy (2 samples, 0.02%)</title><rect x="31.4134%" y="1013" width="0.0217%" height="15" fill="rgb(253,3,0)" fg:x="2896" fg:w="2"/><text x="31.6634%" y="1023.50"></text></g><g><title>ntdll`RtlFreeHeap (1 samples, 0.01%)</title><rect x="31.4351%" y="1029" width="0.0108%" height="15" fill="rgb(212,99,53)" fg:x="2898" fg:w="1"/><text x="31.6851%" y="1039.50"></text></g><g><title>ntdll`memset (1 samples, 0.01%)</title><rect x="31.4351%" y="1013" width="0.0108%" height="15" fill="rgb(249,111,54)" fg:x="2898" fg:w="1"/><text x="31.6851%" y="1023.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="31.4459%" y="1013" width="0.0108%" height="15" fill="rgb(249,55,30)" fg:x="2899" fg:w="1"/><text x="31.6959%" y="1023.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="31.4459%" y="997" width="0.0108%" height="15" fill="rgb(237,47,42)" fg:x="2899" fg:w="1"/><text x="31.6959%" y="1007.50"></text></g><g><title>ntdll`RtlSetUserValueHeap (1 samples, 0.01%)</title><rect x="31.4459%" y="981" width="0.0108%" height="15" fill="rgb(211,20,18)" fg:x="2899" fg:w="1"/><text x="31.6959%" y="991.50"></text></g><g><title>stelpatch-benchmark`enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;::into_value (50 samples, 0.54%)</title><rect x="30.9253%" y="1061" width="0.5424%" height="15" fill="rgb(231,203,46)" fg:x="2851" fg:w="50"/><text x="31.1753%" y="1071.50"></text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::ParsedEntity::into_entity (3 samples, 0.03%)</title><rect x="31.4351%" y="1045" width="0.0325%" height="15" fill="rgb(237,142,3)" fg:x="2898" fg:w="3"/><text x="31.6851%" y="1055.50"></text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::ParsedPropertyInfoList::into_property_info_list (2 samples, 0.02%)</title><rect x="31.4459%" y="1029" width="0.0217%" height="15" fill="rgb(241,107,1)" fg:x="2899" fg:w="2"/><text x="31.6959%" y="1039.50"></text></g><g><title>stelpatch-benchmark`enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;::into_value (1 samples, 0.01%)</title><rect x="31.4568%" y="1013" width="0.0108%" height="15" fill="rgb(229,83,13)" fg:x="2900" fg:w="1"/><text x="31.7068%" y="1023.50"></text></g><g><title>stelpatch-benchmark`lasso::multi_threaded::ThreadedRodeo&lt;lasso::keys::Spur,ahash::random_state::RandomState&gt;::get_or_intern&lt;lasso::keys::Spur,ahash::random_state::RandomState,ref$ (1 samples, 0.01%)</title><rect x="31.4568%" y="997" width="0.0108%" height="15" fill="rgb(241,91,40)" fg:x="2900" fg:w="1"/><text x="31.7068%" y="1007.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::get&lt;ref$ (1 samples, 0.01%)</title><rect x="31.4568%" y="981" width="0.0108%" height="15" fill="rgb(225,3,45)" fg:x="2900" fg:w="1"/><text x="31.7068%" y="991.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;ahash::random_state::RandomState,ref$ (1 samples, 0.01%)</title><rect x="31.4568%" y="965" width="0.0108%" height="15" fill="rgb(244,223,14)" fg:x="2900" fg:w="1"/><text x="31.7068%" y="975.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState,ref$ (9 samples, 0.10%)</title><rect x="31.5219%" y="1045" width="0.0976%" height="15" fill="rgb(224,124,37)" fg:x="2906" fg:w="9"/><text x="31.7719%" y="1055.50"></text></g><g><title>stelpatch-benchmark`core::hash::sip::impl$5::write (3 samples, 0.03%)</title><rect x="31.5869%" y="1029" width="0.0325%" height="15" fill="rgb(251,171,30)" fg:x="2912" fg:w="3"/><text x="31.8369%" y="1039.50"></text></g><g><title>stelpatch-benchmark`hashbrown::map::HashMap&lt;lasso::keys::Spur,stelpatch::cw_model::PropertyInfoList,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::insert (21 samples, 0.23%)</title><rect x="31.4676%" y="1061" width="0.2278%" height="15" fill="rgb(236,46,54)" fg:x="2901" fg:w="21"/><text x="31.7176%" y="1071.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;lasso::keys::Spur,stelpatch::cw_model::PropertyInfoList&gt;,alloc::alloc::Global&gt;::insert&lt;tuple$&lt;lasso::keys::Spur,stelpatch::cw_model::PropertyInfoList&gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0 (7 samples, 0.08%)</title><rect x="31.6195%" y="1045" width="0.0759%" height="15" fill="rgb(245,213,5)" fg:x="2915" fg:w="7"/><text x="31.8695%" y="1055.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::impl$18::into_iter&lt;tuple$&lt;ref$ (15 samples, 0.16%)</title><rect x="31.6954%" y="1061" width="0.1627%" height="15" fill="rgb(230,144,27)" fg:x="2922" fg:w="15"/><text x="31.9454%" y="1071.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::entry&lt;ref$ (1 samples, 0.01%)</title><rect x="31.9015%" y="1045" width="0.0108%" height="15" fill="rgb(220,86,6)" fg:x="2941" fg:w="1"/><text x="32.1515%" y="1055.50"></text></g><g><title>VCRUNTIME140`memcmp (9 samples, 0.10%)</title><rect x="32.1944%" y="1029" width="0.0976%" height="15" fill="rgb(240,20,13)" fg:x="2968" fg:w="9"/><text x="32.4444%" y="1039.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::get&lt;ref$ (42 samples, 0.46%)</title><rect x="31.9124%" y="1045" width="0.4556%" height="15" fill="rgb(217,89,34)" fg:x="2942" fg:w="42"/><text x="32.1624%" y="1055.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;ahash::random_state::RandomState,ref$ (7 samples, 0.08%)</title><rect x="32.2920%" y="1029" width="0.0759%" height="15" fill="rgb(229,13,5)" fg:x="2977" fg:w="7"/><text x="32.5420%" y="1039.50"></text></g><g><title>VCRUNTIME140`memcmp (1 samples, 0.01%)</title><rect x="32.3679%" y="1029" width="0.0108%" height="15" fill="rgb(244,67,35)" fg:x="2984" fg:w="1"/><text x="32.6179%" y="1039.50"></text></g><g><title>stelpatch-benchmark`lasso::multi_threaded::ThreadedRodeo&lt;lasso::keys::Spur,ahash::random_state::RandomState&gt;::get_or_intern&lt;lasso::keys::Spur,ahash::random_state::RandomState,ref$ (50 samples, 0.54%)</title><rect x="31.8581%" y="1061" width="0.5424%" height="15" fill="rgb(221,40,2)" fg:x="2937" fg:w="50"/><text x="32.1081%" y="1071.50"></text></g><g><title>stelpatch-benchmark`dashmap::mapref::entry::VacantEntry&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::insert&lt;ref$ (3 samples, 0.03%)</title><rect x="32.3679%" y="1045" width="0.0325%" height="15" fill="rgb(237,157,21)" fg:x="2984" fg:w="3"/><text x="32.6179%" y="1055.50"></text></g><g><title>stelpatch-benchmark`hashbrown::map::HashMap&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt;,ahash::random_state::RandomState,alloc::alloc::Global&gt;::insert&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue (2 samples, 0.02%)</title><rect x="32.3788%" y="1029" width="0.0217%" height="15" fill="rgb(222,94,11)" fg:x="2985" fg:w="2"/><text x="32.6288%" y="1039.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt; &gt;,alloc::alloc::Global&gt;::insert&lt;tuple$&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,dashmap::util::SharedValue (2 samples, 0.02%)</title><rect x="32.3788%" y="1013" width="0.0217%" height="15" fill="rgb(249,113,6)" fg:x="2985" fg:w="2"/><text x="32.6288%" y="1023.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt; &gt;,alloc::alloc::Global&gt;::reserve_rehash&lt;tuple$&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,dashmap::util::SharedValue (2 samples, 0.02%)</title><rect x="32.3788%" y="997" width="0.0217%" height="15" fill="rgb(238,137,36)" fg:x="2985" fg:w="2"/><text x="32.6288%" y="1007.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;ahash::random_state::RandomState,ref$&lt;ref$ (2 samples, 0.02%)</title><rect x="32.3788%" y="981" width="0.0217%" height="15" fill="rgb(210,102,26)" fg:x="2985" fg:w="2"/><text x="32.6288%" y="991.50"></text></g><g><title>ntdll`RtlCreateTimer (14 samples, 0.15%)</title><rect x="32.7584%" y="997" width="0.1519%" height="15" fill="rgb(218,30,30)" fg:x="3020" fg:w="14"/><text x="33.0084%" y="1007.50"></text></g><g><title>ntdll`RtlSetUserValueHeap (1 samples, 0.01%)</title><rect x="32.9103%" y="997" width="0.0108%" height="15" fill="rgb(214,67,26)" fg:x="3034" fg:w="1"/><text x="33.1603%" y="1007.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (2 samples, 0.02%)</title><rect x="32.9211%" y="997" width="0.0217%" height="15" fill="rgb(251,9,53)" fg:x="3035" fg:w="2"/><text x="33.1711%" y="1007.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (2 samples, 0.02%)</title><rect x="32.9211%" y="981" width="0.0217%" height="15" fill="rgb(228,204,25)" fg:x="3035" fg:w="2"/><text x="33.1711%" y="991.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.02%)</title><rect x="32.9211%" y="965" width="0.0217%" height="15" fill="rgb(207,153,8)" fg:x="3035" fg:w="2"/><text x="33.1711%" y="975.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.02%)</title><rect x="32.9211%" y="949" width="0.0217%" height="15" fill="rgb(242,9,16)" fg:x="3035" fg:w="2"/><text x="33.1711%" y="959.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.01%)</title><rect x="32.9320%" y="933" width="0.0108%" height="15" fill="rgb(217,211,10)" fg:x="3036" fg:w="1"/><text x="33.1820%" y="943.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.01%)</title><rect x="32.9320%" y="917" width="0.0108%" height="15" fill="rgb(219,228,52)" fg:x="3036" fg:w="1"/><text x="33.1820%" y="927.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.01%)</title><rect x="32.9320%" y="901" width="0.0108%" height="15" fill="rgb(231,92,29)" fg:x="3036" fg:w="1"/><text x="33.1820%" y="911.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;lasso::keys::Spur,stelpatch::cw_model::PropertyInfoList&gt;,alloc::alloc::Global&gt;::with_capacity&lt;tuple$ (42 samples, 0.46%)</title><rect x="32.5089%" y="1045" width="0.4556%" height="15" fill="rgb(232,8,23)" fg:x="2997" fg:w="42"/><text x="32.7589%" y="1055.50"></text></g><g><title>ntdll`RtlAllocateHeap (40 samples, 0.43%)</title><rect x="32.5306%" y="1029" width="0.4339%" height="15" fill="rgb(216,211,34)" fg:x="2999" fg:w="40"/><text x="32.7806%" y="1039.50"></text></g><g><title>ntdll`RtlAllocateHeap (34 samples, 0.37%)</title><rect x="32.5957%" y="1013" width="0.3688%" height="15" fill="rgb(236,151,0)" fg:x="3005" fg:w="34"/><text x="32.8457%" y="1023.50"></text></g><g><title>ntdll`memset (2 samples, 0.02%)</title><rect x="32.9428%" y="997" width="0.0217%" height="15" fill="rgb(209,168,3)" fg:x="3037" fg:w="2"/><text x="33.1928%" y="1007.50"></text></g><g><title>stelpatch-benchmark`stelpatch::cw_model::Entity::new (53 samples, 0.57%)</title><rect x="32.4005%" y="1061" width="0.5749%" height="15" fill="rgb(208,129,28)" fg:x="2987" fg:w="53"/><text x="32.6505%" y="1071.50"></text></g><g><title>stelpatch-benchmark`std::collections::hash::map::impl$82::new::KEYS::__getit::__KEY (1 samples, 0.01%)</title><rect x="32.9645%" y="1045" width="0.0108%" height="15" fill="rgb(229,78,22)" fg:x="3039" fg:w="1"/><text x="33.2145%" y="1055.50"></text></g><g><title>VCRUNTIME140`memcpy (6 samples, 0.07%)</title><rect x="33.5503%" y="1045" width="0.0651%" height="15" fill="rgb(228,187,13)" fg:x="3093" fg:w="6"/><text x="33.8003%" y="1055.50"></text></g><g><title>ntdll`RtlCreateTimer (31 samples, 0.34%)</title><rect x="34.0601%" y="1013" width="0.3363%" height="15" fill="rgb(240,119,24)" fg:x="3140" fg:w="31"/><text x="34.3101%" y="1023.50"></text></g><g><title>ntdll`RtlSetUserValueHeap (3 samples, 0.03%)</title><rect x="34.3964%" y="1013" width="0.0325%" height="15" fill="rgb(209,194,42)" fg:x="3171" fg:w="3"/><text x="34.6464%" y="1023.50"></text></g><g><title>ntdll`ExpInterlockedPopEntrySListResume (1 samples, 0.01%)</title><rect x="34.4289%" y="997" width="0.0108%" height="15" fill="rgb(247,200,46)" fg:x="3174" fg:w="1"/><text x="34.6789%" y="1007.50"></text></g><g><title>ntdll`NtProtectVirtualMemory (1 samples, 0.01%)</title><rect x="34.4397%" y="981" width="0.0108%" height="15" fill="rgb(218,76,16)" fg:x="3175" fg:w="1"/><text x="34.6897%" y="991.50"></text></g><g><title>ntdll`NtAllocateVirtualMemory (5 samples, 0.05%)</title><rect x="34.4506%" y="917" width="0.0542%" height="15" fill="rgb(225,21,48)" fg:x="3176" fg:w="5"/><text x="34.7006%" y="927.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (8 samples, 0.09%)</title><rect x="34.4289%" y="1013" width="0.0868%" height="15" fill="rgb(239,223,50)" fg:x="3174" fg:w="8"/><text x="34.6789%" y="1023.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (7 samples, 0.08%)</title><rect x="34.4397%" y="997" width="0.0759%" height="15" fill="rgb(244,45,21)" fg:x="3175" fg:w="7"/><text x="34.6897%" y="1007.50"></text></g><g><title>ntdll`RtlAllocateHeap (6 samples, 0.07%)</title><rect x="34.4506%" y="981" width="0.0651%" height="15" fill="rgb(232,33,43)" fg:x="3176" fg:w="6"/><text x="34.7006%" y="991.50"></text></g><g><title>ntdll`RtlAllocateHeap (6 samples, 0.07%)</title><rect x="34.4506%" y="965" width="0.0651%" height="15" fill="rgb(209,8,3)" fg:x="3176" fg:w="6"/><text x="34.7006%" y="975.50"></text></g><g><title>ntdll`RtlProtectHeap (6 samples, 0.07%)</title><rect x="34.4506%" y="949" width="0.0651%" height="15" fill="rgb(214,25,53)" fg:x="3176" fg:w="6"/><text x="34.7006%" y="959.50"></text></g><g><title>ntdll`RtlProtectHeap (6 samples, 0.07%)</title><rect x="34.4506%" y="933" width="0.0651%" height="15" fill="rgb(254,186,54)" fg:x="3176" fg:w="6"/><text x="34.7006%" y="943.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.01%)</title><rect x="34.5048%" y="917" width="0.0108%" height="15" fill="rgb(208,174,49)" fg:x="3181" fg:w="1"/><text x="34.7548%" y="927.50"></text></g><g><title>ntdll`RtlAllocateHeap (84 samples, 0.91%)</title><rect x="33.6154%" y="1045" width="0.9112%" height="15" fill="rgb(233,191,51)" fg:x="3099" fg:w="84"/><text x="33.8654%" y="1055.50"></text></g><g><title>ntdll`RtlAllocateHeap (78 samples, 0.85%)</title><rect x="33.6804%" y="1029" width="0.8461%" height="15" fill="rgb(222,134,10)" fg:x="3105" fg:w="78"/><text x="33.9304%" y="1039.50"></text></g><g><title>ntdll`memset (1 samples, 0.01%)</title><rect x="34.5157%" y="1013" width="0.0108%" height="15" fill="rgb(230,226,20)" fg:x="3182" fg:w="1"/><text x="34.7657%" y="1023.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (7 samples, 0.08%)</title><rect x="34.5482%" y="1029" width="0.0759%" height="15" fill="rgb(251,111,25)" fg:x="3185" fg:w="7"/><text x="34.7982%" y="1039.50"></text></g><g><title>ntdll`RtlFreeHeap (22 samples, 0.24%)</title><rect x="34.5265%" y="1045" width="0.2386%" height="15" fill="rgb(224,40,46)" fg:x="3183" fg:w="22"/><text x="34.7765%" y="1055.50"></text></g><g><title>ntdll`memset (13 samples, 0.14%)</title><rect x="34.6241%" y="1029" width="0.1410%" height="15" fill="rgb(236,108,47)" fg:x="3192" fg:w="13"/><text x="34.8741%" y="1039.50"></text></g><g><title>stelpatch-benchmark`_rust_alloc (1 samples, 0.01%)</title><rect x="34.7652%" y="1045" width="0.0108%" height="15" fill="rgb(234,93,0)" fg:x="3205" fg:w="1"/><text x="35.0152%" y="1055.50"></text></g><g><title>ntdll`RtlAcquireSRWLockExclusive (1 samples, 0.01%)</title><rect x="34.8736%" y="1013" width="0.0108%" height="15" fill="rgb(224,213,32)" fg:x="3215" fg:w="1"/><text x="35.1236%" y="1023.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;lasso::keys::Spur,ref$&lt;str$&gt;,ahash::random_state::RandomState&gt;::insert&lt;lasso::keys::Spur,ref$ (8 samples, 0.09%)</title><rect x="34.8845%" y="1013" width="0.0868%" height="15" fill="rgb(251,11,48)" fg:x="3216" fg:w="8"/><text x="35.1345%" y="1023.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global&gt;::insert&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;lasso::keys::Spur,lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$ (3 samples, 0.03%)</title><rect x="34.9387%" y="997" width="0.0325%" height="15" fill="rgb(236,173,5)" fg:x="3221" fg:w="3"/><text x="35.1887%" y="1007.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global&gt;::reserve_rehash&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;lasso::keys::Spur,lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$ (2 samples, 0.02%)</title><rect x="34.9496%" y="981" width="0.0217%" height="15" fill="rgb(230,95,12)" fg:x="3222" fg:w="2"/><text x="35.1996%" y="991.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::entry&lt;ref$ (4 samples, 0.04%)</title><rect x="34.9713%" y="1013" width="0.0434%" height="15" fill="rgb(232,209,1)" fg:x="3224" fg:w="4"/><text x="35.2213%" y="1023.50"></text></g><g><title>stelpatch-benchmark`dashmap::lock::compare_exchange (2 samples, 0.02%)</title><rect x="34.9929%" y="997" width="0.0217%" height="15" fill="rgb(232,6,1)" fg:x="3226" fg:w="2"/><text x="35.2429%" y="1007.50"></text></g><g><title>VCRUNTIME140`memcmp (11 samples, 0.12%)</title><rect x="35.3401%" y="997" width="0.1193%" height="15" fill="rgb(210,224,50)" fg:x="3258" fg:w="11"/><text x="35.5901%" y="1007.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::get&lt;ref$ (46 samples, 0.50%)</title><rect x="35.0146%" y="1013" width="0.4990%" height="15" fill="rgb(228,127,35)" fg:x="3228" fg:w="46"/><text x="35.2646%" y="1023.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;ahash::random_state::RandomState,ref$ (5 samples, 0.05%)</title><rect x="35.4594%" y="997" width="0.0542%" height="15" fill="rgb(245,102,45)" fg:x="3269" fg:w="5"/><text x="35.7094%" y="1007.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;ahash::random_state::RandomState,ref$&lt;ref$ (1 samples, 0.01%)</title><rect x="35.5136%" y="997" width="0.0108%" height="15" fill="rgb(214,1,49)" fg:x="3274" fg:w="1"/><text x="35.7636%" y="1007.50"></text></g><g><title>stelpatch-benchmark`dashmap::mapref::entry::VacantEntry&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::insert&lt;ref$ (13 samples, 0.14%)</title><rect x="35.5136%" y="1013" width="0.1410%" height="15" fill="rgb(226,163,40)" fg:x="3274" fg:w="13"/><text x="35.7636%" y="1023.50"></text></g><g><title>stelpatch-benchmark`hashbrown::map::HashMap&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt;,ahash::random_state::RandomState,alloc::alloc::Global&gt;::insert&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue (12 samples, 0.13%)</title><rect x="35.5245%" y="997" width="0.1302%" height="15" fill="rgb(239,212,28)" fg:x="3275" fg:w="12"/><text x="35.7745%" y="1007.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt; &gt;,alloc::alloc::Global&gt;::insert&lt;tuple$&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,dashmap::util::SharedValue (11 samples, 0.12%)</title><rect x="35.5353%" y="981" width="0.1193%" height="15" fill="rgb(220,20,13)" fg:x="3276" fg:w="11"/><text x="35.7853%" y="991.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt; &gt;,alloc::alloc::Global&gt;::reserve_rehash&lt;tuple$&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,dashmap::util::SharedValue (9 samples, 0.10%)</title><rect x="35.5570%" y="965" width="0.0976%" height="15" fill="rgb(210,164,35)" fg:x="3278" fg:w="9"/><text x="35.8070%" y="975.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;ahash::random_state::RandomState,ref$&lt;ref$ (7 samples, 0.08%)</title><rect x="35.5787%" y="949" width="0.0759%" height="15" fill="rgb(248,109,41)" fg:x="3280" fg:w="7"/><text x="35.8287%" y="959.50"></text></g><g><title>stelpatch-benchmark`lasso::multi_threaded::ThreadedRodeo&lt;lasso::keys::Spur,ahash::random_state::RandomState&gt;::get_or_intern&lt;lasso::keys::Spur,ahash::random_state::RandomState,ref$ (81 samples, 0.88%)</title><rect x="34.7977%" y="1029" width="0.8786%" height="15" fill="rgb(238,23,50)" fg:x="3208" fg:w="81"/><text x="35.0477%" y="1039.50"></text></g><g><title>stelpatch-benchmark`lasso::arena::Arena::store_str (2 samples, 0.02%)</title><rect x="35.6546%" y="1013" width="0.0217%" height="15" fill="rgb(211,48,49)" fg:x="3287" fg:w="2"/><text x="35.9046%" y="1023.50"></text></g><g><title>KERNEL32`HeapFree (1 samples, 0.01%)</title><rect x="35.9583%" y="1013" width="0.0108%" height="15" fill="rgb(223,36,21)" fg:x="3315" fg:w="1"/><text x="36.2083%" y="1023.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (6 samples, 0.07%)</title><rect x="35.9692%" y="997" width="0.0651%" height="15" fill="rgb(207,123,46)" fg:x="3316" fg:w="6"/><text x="36.2192%" y="1007.50"></text></g><g><title>ntdll`RtlFreeHeap (19 samples, 0.21%)</title><rect x="35.9692%" y="1013" width="0.2061%" height="15" fill="rgb(240,218,32)" fg:x="3316" fg:w="19"/><text x="36.2192%" y="1023.50"></text></g><g><title>ntdll`memset (13 samples, 0.14%)</title><rect x="36.0343%" y="997" width="0.1410%" height="15" fill="rgb(252,5,43)" fg:x="3322" fg:w="13"/><text x="36.2843%" y="1007.50"></text></g><g><title>ntdll`RtlDeleteBoundaryDescriptor (1 samples, 0.01%)</title><rect x="36.1644%" y="981" width="0.0108%" height="15" fill="rgb(252,84,19)" fg:x="3334" fg:w="1"/><text x="36.4144%" y="991.50"></text></g><g><title>stelpatch-benchmark`dashmap::lock::compare_exchange (1 samples, 0.01%)</title><rect x="36.3272%" y="965" width="0.0108%" height="15" fill="rgb(243,152,39)" fg:x="3349" fg:w="1"/><text x="36.5772%" y="975.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;lasso::keys::Spur,ref$&lt;str$&gt;,ahash::random_state::RandomState&gt;::insert&lt;lasso::keys::Spur,ref$ (11 samples, 0.12%)</title><rect x="36.2621%" y="981" width="0.1193%" height="15" fill="rgb(234,160,15)" fg:x="3343" fg:w="11"/><text x="36.5121%" y="991.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global&gt;::insert&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;lasso::keys::Spur,lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$ (4 samples, 0.04%)</title><rect x="36.3380%" y="965" width="0.0434%" height="15" fill="rgb(237,34,20)" fg:x="3350" fg:w="4"/><text x="36.5880%" y="975.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global&gt;::reserve_rehash&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;lasso::keys::Spur,lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$ (1 samples, 0.01%)</title><rect x="36.3705%" y="949" width="0.0108%" height="15" fill="rgb(229,97,13)" fg:x="3353" fg:w="1"/><text x="36.6205%" y="959.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="36.3705%" y="933" width="0.0108%" height="15" fill="rgb(234,71,50)" fg:x="3353" fg:w="1"/><text x="36.6205%" y="943.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="36.3705%" y="917" width="0.0108%" height="15" fill="rgb(253,155,4)" fg:x="3353" fg:w="1"/><text x="36.6205%" y="927.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::entry&lt;ref$ (2 samples, 0.02%)</title><rect x="36.3814%" y="981" width="0.0217%" height="15" fill="rgb(222,185,37)" fg:x="3354" fg:w="2"/><text x="36.6314%" y="991.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;ahash::random_state::RandomState,ref$ (1 samples, 0.01%)</title><rect x="36.3922%" y="965" width="0.0108%" height="15" fill="rgb(251,177,13)" fg:x="3355" fg:w="1"/><text x="36.6422%" y="975.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::get&lt;ref$ (12 samples, 0.13%)</title><rect x="36.4031%" y="981" width="0.1302%" height="15" fill="rgb(250,179,40)" fg:x="3356" fg:w="12"/><text x="36.6531%" y="991.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;ahash::random_state::RandomState,ref$ (2 samples, 0.02%)</title><rect x="36.5116%" y="965" width="0.0217%" height="15" fill="rgb(242,44,2)" fg:x="3366" fg:w="2"/><text x="36.7616%" y="975.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;ahash::random_state::RandomState,ref$&lt;ref$ (2 samples, 0.02%)</title><rect x="36.5766%" y="965" width="0.0217%" height="15" fill="rgb(216,177,13)" fg:x="3372" fg:w="2"/><text x="36.8266%" y="975.50"></text></g><g><title>stelpatch-benchmark`dashmap::mapref::entry::VacantEntry&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::insert&lt;ref$ (15 samples, 0.16%)</title><rect x="36.5332%" y="981" width="0.1627%" height="15" fill="rgb(216,106,43)" fg:x="3368" fg:w="15"/><text x="36.7832%" y="991.50"></text></g><g><title>stelpatch-benchmark`hashbrown::map::HashMap&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt;,ahash::random_state::RandomState,alloc::alloc::Global&gt;::insert&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue (9 samples, 0.10%)</title><rect x="36.5983%" y="965" width="0.0976%" height="15" fill="rgb(216,183,2)" fg:x="3374" fg:w="9"/><text x="36.8483%" y="975.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt; &gt;,alloc::alloc::Global&gt;::insert&lt;tuple$&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,dashmap::util::SharedValue (8 samples, 0.09%)</title><rect x="36.6092%" y="949" width="0.0868%" height="15" fill="rgb(249,75,3)" fg:x="3375" fg:w="8"/><text x="36.8592%" y="959.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt; &gt;,alloc::alloc::Global&gt;::reserve_rehash&lt;tuple$&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,dashmap::util::SharedValue (7 samples, 0.08%)</title><rect x="36.6200%" y="933" width="0.0759%" height="15" fill="rgb(219,67,39)" fg:x="3376" fg:w="7"/><text x="36.8700%" y="943.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;ahash::random_state::RandomState,ref$&lt;ref$ (7 samples, 0.08%)</title><rect x="36.6200%" y="917" width="0.0759%" height="15" fill="rgb(253,228,2)" fg:x="3376" fg:w="7"/><text x="36.8700%" y="927.50"></text></g><g><title>stelpatch-benchmark`enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;::into_value (51 samples, 0.55%)</title><rect x="36.1753%" y="1013" width="0.5532%" height="15" fill="rgb(235,138,27)" fg:x="3335" fg:w="51"/><text x="36.4253%" y="1023.50"></text></g><g><title>stelpatch-benchmark`lasso::multi_threaded::ThreadedRodeo&lt;lasso::keys::Spur,ahash::random_state::RandomState&gt;::get_or_intern&lt;lasso::keys::Spur,ahash::random_state::RandomState,ref$ (49 samples, 0.53%)</title><rect x="36.1970%" y="997" width="0.5315%" height="15" fill="rgb(236,97,51)" fg:x="3337" fg:w="49"/><text x="36.4470%" y="1007.50"></text></g><g><title>stelpatch-benchmark`lasso::arena::Arena::store_str (3 samples, 0.03%)</title><rect x="36.6960%" y="981" width="0.0325%" height="15" fill="rgb(240,80,30)" fg:x="3383" fg:w="3"/><text x="36.9460%" y="991.50"></text></g><g><title>VCRUNTIME140`memcpy (3 samples, 0.03%)</title><rect x="36.6960%" y="965" width="0.0325%" height="15" fill="rgb(230,178,19)" fg:x="3383" fg:w="3"/><text x="36.9460%" y="975.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState,ref$ (6 samples, 0.07%)</title><rect x="36.7610%" y="997" width="0.0651%" height="15" fill="rgb(210,190,27)" fg:x="3389" fg:w="6"/><text x="37.0110%" y="1007.50"></text></g><g><title>stelpatch-benchmark`core::hash::sip::impl$5::write (2 samples, 0.02%)</title><rect x="36.8044%" y="981" width="0.0217%" height="15" fill="rgb(222,107,31)" fg:x="3393" fg:w="2"/><text x="37.0544%" y="991.50"></text></g><g><title>stelpatch-benchmark`hashbrown::map::HashMap&lt;lasso::keys::Spur,stelpatch::cw_model::PropertyInfoList,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::insert (14 samples, 0.15%)</title><rect x="36.7285%" y="1013" width="0.1519%" height="15" fill="rgb(216,127,34)" fg:x="3386" fg:w="14"/><text x="36.9785%" y="1023.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;lasso::keys::Spur,stelpatch::cw_model::PropertyInfoList&gt;,alloc::alloc::Global&gt;::insert&lt;tuple$&lt;lasso::keys::Spur,stelpatch::cw_model::PropertyInfoList&gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0 (5 samples, 0.05%)</title><rect x="36.8261%" y="997" width="0.0542%" height="15" fill="rgb(234,116,52)" fg:x="3395" fg:w="5"/><text x="37.0761%" y="1007.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::impl$17::drop&lt;tuple$&lt;ref$ (1 samples, 0.01%)</title><rect x="36.8804%" y="1013" width="0.0108%" height="15" fill="rgb(222,124,15)" fg:x="3400" fg:w="1"/><text x="37.1304%" y="1023.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::impl$18::into_iter&lt;tuple$&lt;ref$ (3 samples, 0.03%)</title><rect x="36.8912%" y="1013" width="0.0325%" height="15" fill="rgb(231,179,28)" fg:x="3401" fg:w="3"/><text x="37.1412%" y="1023.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;lasso::keys::Spur,ref$&lt;str$&gt;,ahash::random_state::RandomState&gt;::insert&lt;lasso::keys::Spur,ref$ (2 samples, 0.02%)</title><rect x="36.9346%" y="997" width="0.0217%" height="15" fill="rgb(226,93,45)" fg:x="3405" fg:w="2"/><text x="37.1846%" y="1007.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global&gt;::insert&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;lasso::keys::Spur,lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$ (2 samples, 0.02%)</title><rect x="36.9346%" y="981" width="0.0217%" height="15" fill="rgb(215,8,51)" fg:x="3405" fg:w="2"/><text x="37.1846%" y="991.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global&gt;::reserve_rehash&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;lasso::keys::Spur,lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$ (1 samples, 0.01%)</title><rect x="36.9454%" y="965" width="0.0108%" height="15" fill="rgb(223,106,5)" fg:x="3406" fg:w="1"/><text x="37.1954%" y="975.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="36.9454%" y="949" width="0.0108%" height="15" fill="rgb(250,191,5)" fg:x="3406" fg:w="1"/><text x="37.1954%" y="959.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="36.9454%" y="933" width="0.0108%" height="15" fill="rgb(242,132,44)" fg:x="3406" fg:w="1"/><text x="37.1954%" y="943.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::entry&lt;ref$ (1 samples, 0.01%)</title><rect x="36.9563%" y="997" width="0.0108%" height="15" fill="rgb(251,152,29)" fg:x="3407" fg:w="1"/><text x="37.2063%" y="1007.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;ahash::random_state::RandomState,ref$ (1 samples, 0.01%)</title><rect x="36.9563%" y="981" width="0.0108%" height="15" fill="rgb(218,179,5)" fg:x="3407" fg:w="1"/><text x="37.2063%" y="991.50"></text></g><g><title>VCRUNTIME140`memcmp (2 samples, 0.02%)</title><rect x="37.1624%" y="981" width="0.0217%" height="15" fill="rgb(227,67,19)" fg:x="3426" fg:w="2"/><text x="37.4124%" y="991.50"></text></g><g><title>stelpatch-benchmark`lasso::multi_threaded::ThreadedRodeo&lt;lasso::keys::Spur,ahash::random_state::RandomState&gt;::get_or_intern&lt;lasso::keys::Spur,ahash::random_state::RandomState,ref$ (30 samples, 0.33%)</title><rect x="36.9237%" y="1013" width="0.3254%" height="15" fill="rgb(233,119,31)" fg:x="3404" fg:w="30"/><text x="37.1737%" y="1023.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::get&lt;ref$ (26 samples, 0.28%)</title><rect x="36.9671%" y="997" width="0.2820%" height="15" fill="rgb(241,120,22)" fg:x="3408" fg:w="26"/><text x="37.2171%" y="1007.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;ahash::random_state::RandomState,ref$ (6 samples, 0.07%)</title><rect x="37.1841%" y="981" width="0.0651%" height="15" fill="rgb(224,102,30)" fg:x="3428" fg:w="6"/><text x="37.4341%" y="991.50"></text></g><g><title>ntdll`RtlAllocateHeap (6 samples, 0.07%)</title><rect x="37.2709%" y="997" width="0.0651%" height="15" fill="rgb(210,164,37)" fg:x="3436" fg:w="6"/><text x="37.5209%" y="1007.50"></text></g><g><title>ntdll`RtlAllocateHeap (6 samples, 0.07%)</title><rect x="37.2709%" y="981" width="0.0651%" height="15" fill="rgb(226,191,16)" fg:x="3436" fg:w="6"/><text x="37.5209%" y="991.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;lasso::keys::Spur,stelpatch::cw_model::ConditionalBlock&gt;,alloc::alloc::Global&gt;::with_capacity&lt;tuple$ (1 samples, 0.01%)</title><rect x="37.3359%" y="997" width="0.0108%" height="15" fill="rgb(214,40,45)" fg:x="3442" fg:w="1"/><text x="37.5859%" y="1007.50"></text></g><g><title>VCRUNTIME140`memset (1 samples, 0.01%)</title><rect x="37.3793%" y="981" width="0.0108%" height="15" fill="rgb(244,29,26)" fg:x="3446" fg:w="1"/><text x="37.6293%" y="991.50"></text></g><g><title>ntdll`RtlCreateTimer (8 samples, 0.09%)</title><rect x="37.5203%" y="949" width="0.0868%" height="15" fill="rgb(216,16,5)" fg:x="3459" fg:w="8"/><text x="37.7703%" y="959.50"></text></g><g><title>ntdll`NtAllocateVirtualMemory (1 samples, 0.01%)</title><rect x="37.6071%" y="853" width="0.0108%" height="15" fill="rgb(249,76,35)" fg:x="3467" fg:w="1"/><text x="37.8571%" y="863.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.02%)</title><rect x="37.6071%" y="917" width="0.0217%" height="15" fill="rgb(207,11,44)" fg:x="3467" fg:w="2"/><text x="37.8571%" y="927.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.02%)</title><rect x="37.6071%" y="901" width="0.0217%" height="15" fill="rgb(228,190,49)" fg:x="3467" fg:w="2"/><text x="37.8571%" y="911.50"></text></g><g><title>ntdll`RtlProtectHeap (2 samples, 0.02%)</title><rect x="37.6071%" y="885" width="0.0217%" height="15" fill="rgb(214,173,12)" fg:x="3467" fg:w="2"/><text x="37.8571%" y="895.50"></text></g><g><title>ntdll`RtlProtectHeap (2 samples, 0.02%)</title><rect x="37.6071%" y="869" width="0.0217%" height="15" fill="rgb(218,26,35)" fg:x="3467" fg:w="2"/><text x="37.8571%" y="879.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.01%)</title><rect x="37.6180%" y="853" width="0.0108%" height="15" fill="rgb(220,200,19)" fg:x="3468" fg:w="1"/><text x="37.8680%" y="863.50"></text></g><g><title>stelpatch-benchmark`stelpatch::cw_model::Entity::new (36 samples, 0.39%)</title><rect x="37.2492%" y="1013" width="0.3905%" height="15" fill="rgb(239,95,49)" fg:x="3434" fg:w="36"/><text x="37.4992%" y="1023.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;lasso::keys::Spur,stelpatch::cw_model::PropertyInfoList&gt;,alloc::alloc::Global&gt;::with_capacity&lt;tuple$ (27 samples, 0.29%)</title><rect x="37.3468%" y="997" width="0.2929%" height="15" fill="rgb(235,85,53)" fg:x="3443" fg:w="27"/><text x="37.5968%" y="1007.50"></text></g><g><title>ntdll`RtlAllocateHeap (23 samples, 0.25%)</title><rect x="37.3902%" y="981" width="0.2495%" height="15" fill="rgb(233,133,31)" fg:x="3447" fg:w="23"/><text x="37.6402%" y="991.50"></text></g><g><title>ntdll`RtlAllocateHeap (23 samples, 0.25%)</title><rect x="37.3902%" y="965" width="0.2495%" height="15" fill="rgb(218,25,20)" fg:x="3447" fg:w="23"/><text x="37.6402%" y="975.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (3 samples, 0.03%)</title><rect x="37.6071%" y="949" width="0.0325%" height="15" fill="rgb(252,210,38)" fg:x="3467" fg:w="3"/><text x="37.8571%" y="959.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (3 samples, 0.03%)</title><rect x="37.6071%" y="933" width="0.0325%" height="15" fill="rgb(242,134,21)" fg:x="3467" fg:w="3"/><text x="37.8571%" y="943.50"></text></g><g><title>ntdll`RtlReAllocateHeap (1 samples, 0.01%)</title><rect x="37.6288%" y="917" width="0.0108%" height="15" fill="rgb(213,28,48)" fg:x="3469" fg:w="1"/><text x="37.8788%" y="927.50"></text></g><g><title>ntdll`RtlReAllocateHeap (1 samples, 0.01%)</title><rect x="37.6288%" y="901" width="0.0108%" height="15" fill="rgb(250,196,2)" fg:x="3469" fg:w="1"/><text x="37.8788%" y="911.50"></text></g><g><title>ntdll`RtlReleaseSRWLockShared (1 samples, 0.01%)</title><rect x="37.6288%" y="885" width="0.0108%" height="15" fill="rgb(227,5,17)" fg:x="3469" fg:w="1"/><text x="37.8788%" y="895.50"></text></g><g><title>VCRUNTIME140`memcpy (3 samples, 0.03%)</title><rect x="37.9108%" y="997" width="0.0325%" height="15" fill="rgb(221,226,24)" fg:x="3495" fg:w="3"/><text x="38.1608%" y="1007.50"></text></g><g><title>ntdll`RtlCreateTimer (15 samples, 0.16%)</title><rect x="38.1495%" y="965" width="0.1627%" height="15" fill="rgb(211,5,48)" fg:x="3517" fg:w="15"/><text x="38.3995%" y="975.50"></text></g><g><title>ntdll`RtlSetUserValueHeap (1 samples, 0.01%)</title><rect x="38.3122%" y="965" width="0.0108%" height="15" fill="rgb(219,150,6)" fg:x="3532" fg:w="1"/><text x="38.5622%" y="975.50"></text></g><g><title>ntdll`NtProtectVirtualMemory (1 samples, 0.01%)</title><rect x="38.3230%" y="933" width="0.0108%" height="15" fill="rgb(251,46,16)" fg:x="3533" fg:w="1"/><text x="38.5730%" y="943.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (3 samples, 0.03%)</title><rect x="38.3230%" y="965" width="0.0325%" height="15" fill="rgb(220,204,40)" fg:x="3533" fg:w="3"/><text x="38.5730%" y="975.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (3 samples, 0.03%)</title><rect x="38.3230%" y="949" width="0.0325%" height="15" fill="rgb(211,85,2)" fg:x="3533" fg:w="3"/><text x="38.5730%" y="959.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.02%)</title><rect x="38.3339%" y="933" width="0.0217%" height="15" fill="rgb(229,17,7)" fg:x="3534" fg:w="2"/><text x="38.5839%" y="943.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.02%)</title><rect x="38.3339%" y="917" width="0.0217%" height="15" fill="rgb(239,72,28)" fg:x="3534" fg:w="2"/><text x="38.5839%" y="927.50"></text></g><g><title>ntdll`RtlProtectHeap (2 samples, 0.02%)</title><rect x="38.3339%" y="901" width="0.0217%" height="15" fill="rgb(230,47,54)" fg:x="3534" fg:w="2"/><text x="38.5839%" y="911.50"></text></g><g><title>ntdll`RtlProtectHeap (2 samples, 0.02%)</title><rect x="38.3339%" y="885" width="0.0217%" height="15" fill="rgb(214,50,8)" fg:x="3534" fg:w="2"/><text x="38.5839%" y="895.50"></text></g><g><title>ntdll`NtAllocateVirtualMemory (2 samples, 0.02%)</title><rect x="38.3339%" y="869" width="0.0217%" height="15" fill="rgb(216,198,43)" fg:x="3534" fg:w="2"/><text x="38.5839%" y="879.50"></text></g><g><title>ntdll`RtlAllocateHeap (39 samples, 0.42%)</title><rect x="37.9434%" y="997" width="0.4230%" height="15" fill="rgb(234,20,35)" fg:x="3498" fg:w="39"/><text x="38.1934%" y="1007.50"></text></g><g><title>ntdll`RtlAllocateHeap (32 samples, 0.35%)</title><rect x="38.0193%" y="981" width="0.3471%" height="15" fill="rgb(254,45,19)" fg:x="3505" fg:w="32"/><text x="38.2693%" y="991.50"></text></g><g><title>ntdll`memset (1 samples, 0.01%)</title><rect x="38.3556%" y="965" width="0.0108%" height="15" fill="rgb(219,14,44)" fg:x="3536" fg:w="1"/><text x="38.6056%" y="975.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (7 samples, 0.08%)</title><rect x="38.3773%" y="981" width="0.0759%" height="15" fill="rgb(217,220,26)" fg:x="3538" fg:w="7"/><text x="38.6273%" y="991.50"></text></g><g><title>ntdll`RtlFreeHeap (1 samples, 0.01%)</title><rect x="38.4423%" y="965" width="0.0108%" height="15" fill="rgb(213,158,28)" fg:x="3544" fg:w="1"/><text x="38.6923%" y="975.50"></text></g><g><title>ntdll`RtlFreeHeap (11 samples, 0.12%)</title><rect x="38.3664%" y="997" width="0.1193%" height="15" fill="rgb(252,51,52)" fg:x="3537" fg:w="11"/><text x="38.6164%" y="1007.50"></text></g><g><title>ntdll`memset (3 samples, 0.03%)</title><rect x="38.4532%" y="981" width="0.0325%" height="15" fill="rgb(246,89,16)" fg:x="3545" fg:w="3"/><text x="38.7032%" y="991.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;lasso::keys::Spur,ref$&lt;str$&gt;,ahash::random_state::RandomState&gt;::insert&lt;lasso::keys::Spur,ref$ (1 samples, 0.01%)</title><rect x="38.5400%" y="965" width="0.0108%" height="15" fill="rgb(216,158,49)" fg:x="3553" fg:w="1"/><text x="38.7900%" y="975.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global&gt;::insert&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;lasso::keys::Spur,lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$ (1 samples, 0.01%)</title><rect x="38.5400%" y="949" width="0.0108%" height="15" fill="rgb(236,107,19)" fg:x="3553" fg:w="1"/><text x="38.7900%" y="959.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global&gt;::reserve_rehash&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;lasso::keys::Spur,lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$ (1 samples, 0.01%)</title><rect x="38.5400%" y="933" width="0.0108%" height="15" fill="rgb(228,185,30)" fg:x="3553" fg:w="1"/><text x="38.7900%" y="943.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="38.5400%" y="917" width="0.0108%" height="15" fill="rgb(246,134,8)" fg:x="3553" fg:w="1"/><text x="38.7900%" y="927.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="38.5400%" y="901" width="0.0108%" height="15" fill="rgb(214,143,50)" fg:x="3553" fg:w="1"/><text x="38.7900%" y="911.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.01%)</title><rect x="38.5400%" y="885" width="0.0108%" height="15" fill="rgb(228,75,8)" fg:x="3553" fg:w="1"/><text x="38.7900%" y="895.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.01%)</title><rect x="38.5400%" y="869" width="0.0108%" height="15" fill="rgb(207,175,4)" fg:x="3553" fg:w="1"/><text x="38.7900%" y="879.50"></text></g><g><title>ntdll`NtAllocateVirtualMemory (1 samples, 0.01%)</title><rect x="38.5400%" y="853" width="0.0108%" height="15" fill="rgb(205,108,24)" fg:x="3553" fg:w="1"/><text x="38.7900%" y="863.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::entry&lt;ref$ (1 samples, 0.01%)</title><rect x="38.5508%" y="965" width="0.0108%" height="15" fill="rgb(244,120,49)" fg:x="3554" fg:w="1"/><text x="38.8008%" y="975.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;ahash::random_state::RandomState,ref$ (1 samples, 0.01%)</title><rect x="38.5508%" y="949" width="0.0108%" height="15" fill="rgb(223,47,38)" fg:x="3554" fg:w="1"/><text x="38.8008%" y="959.50"></text></g><g><title>VCRUNTIME140`memcmp (4 samples, 0.04%)</title><rect x="38.7895%" y="949" width="0.0434%" height="15" fill="rgb(229,179,11)" fg:x="3576" fg:w="4"/><text x="39.0395%" y="959.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::get&lt;ref$ (28 samples, 0.30%)</title><rect x="38.5617%" y="965" width="0.3037%" height="15" fill="rgb(231,122,1)" fg:x="3555" fg:w="28"/><text x="38.8117%" y="975.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;ahash::random_state::RandomState,ref$ (3 samples, 0.03%)</title><rect x="38.8328%" y="949" width="0.0325%" height="15" fill="rgb(245,119,9)" fg:x="3580" fg:w="3"/><text x="39.0828%" y="959.50"></text></g><g><title>stelpatch-benchmark`lasso::multi_threaded::ThreadedRodeo&lt;lasso::keys::Spur,ahash::random_state::RandomState&gt;::get_or_intern&lt;lasso::keys::Spur,ahash::random_state::RandomState,ref$ (35 samples, 0.38%)</title><rect x="38.5183%" y="981" width="0.3797%" height="15" fill="rgb(241,163,25)" fg:x="3551" fg:w="35"/><text x="38.7683%" y="991.50"></text></g><g><title>stelpatch-benchmark`dashmap::mapref::entry::VacantEntry&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::insert&lt;ref$ (3 samples, 0.03%)</title><rect x="38.8654%" y="965" width="0.0325%" height="15" fill="rgb(217,214,3)" fg:x="3583" fg:w="3"/><text x="39.1154%" y="975.50"></text></g><g><title>stelpatch-benchmark`hashbrown::map::HashMap&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt;,ahash::random_state::RandomState,alloc::alloc::Global&gt;::insert&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue (3 samples, 0.03%)</title><rect x="38.8654%" y="949" width="0.0325%" height="15" fill="rgb(240,86,28)" fg:x="3583" fg:w="3"/><text x="39.1154%" y="959.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt; &gt;,alloc::alloc::Global&gt;::insert&lt;tuple$&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,dashmap::util::SharedValue (3 samples, 0.03%)</title><rect x="38.8654%" y="933" width="0.0325%" height="15" fill="rgb(215,47,9)" fg:x="3583" fg:w="3"/><text x="39.1154%" y="943.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt; &gt;,alloc::alloc::Global&gt;::reserve_rehash&lt;tuple$&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,dashmap::util::SharedValue (3 samples, 0.03%)</title><rect x="38.8654%" y="917" width="0.0325%" height="15" fill="rgb(252,25,45)" fg:x="3583" fg:w="3"/><text x="39.1154%" y="927.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;ahash::random_state::RandomState,ref$&lt;ref$ (2 samples, 0.02%)</title><rect x="38.8762%" y="901" width="0.0217%" height="15" fill="rgb(251,164,9)" fg:x="3584" fg:w="2"/><text x="39.1262%" y="911.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (4 samples, 0.04%)</title><rect x="38.9630%" y="949" width="0.0434%" height="15" fill="rgb(233,194,0)" fg:x="3592" fg:w="4"/><text x="39.2130%" y="959.50"></text></g><g><title>ntdll`RtlFreeHeap (1 samples, 0.01%)</title><rect x="38.9956%" y="933" width="0.0108%" height="15" fill="rgb(249,111,24)" fg:x="3595" fg:w="1"/><text x="39.2456%" y="943.50"></text></g><g><title>ntdll`RtlFreeHeap (8 samples, 0.09%)</title><rect x="38.9630%" y="965" width="0.0868%" height="15" fill="rgb(250,223,3)" fg:x="3592" fg:w="8"/><text x="39.2130%" y="975.50"></text></g><g><title>ntdll`memset (4 samples, 0.04%)</title><rect x="39.0064%" y="949" width="0.0434%" height="15" fill="rgb(236,178,37)" fg:x="3596" fg:w="4"/><text x="39.2564%" y="959.50"></text></g><g><title>stelpatch-benchmark`hashbrown::map::HashMap&lt;lasso::keys::Spur,stelpatch::cw_model::PropertyInfoList,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::insert (3 samples, 0.03%)</title><rect x="39.0498%" y="965" width="0.0325%" height="15" fill="rgb(241,158,50)" fg:x="3600" fg:w="3"/><text x="39.2998%" y="975.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;lasso::keys::Spur,stelpatch::cw_model::PropertyInfoList&gt;,alloc::alloc::Global&gt;::insert&lt;tuple$&lt;lasso::keys::Spur,stelpatch::cw_model::PropertyInfoList&gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0 (2 samples, 0.02%)</title><rect x="39.0606%" y="949" width="0.0217%" height="15" fill="rgb(213,121,41)" fg:x="3601" fg:w="2"/><text x="39.3106%" y="959.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::impl$18::into_iter&lt;tuple$&lt;ref$ (3 samples, 0.03%)</title><rect x="39.0823%" y="965" width="0.0325%" height="15" fill="rgb(240,92,3)" fg:x="3603" fg:w="3"/><text x="39.3323%" y="975.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::impl$33::drop&lt;tuple$&lt;ref$ (1 samples, 0.01%)</title><rect x="39.1149%" y="965" width="0.0108%" height="15" fill="rgb(205,123,3)" fg:x="3606" fg:w="1"/><text x="39.3649%" y="975.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;lasso::keys::Spur,ref$&lt;str$&gt;,ahash::random_state::RandomState&gt;::insert&lt;lasso::keys::Spur,ref$ (1 samples, 0.01%)</title><rect x="39.1583%" y="949" width="0.0108%" height="15" fill="rgb(205,97,47)" fg:x="3610" fg:w="1"/><text x="39.4083%" y="959.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global&gt;::insert&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;lasso::keys::Spur,lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$ (1 samples, 0.01%)</title><rect x="39.1583%" y="933" width="0.0108%" height="15" fill="rgb(247,152,14)" fg:x="3610" fg:w="1"/><text x="39.4083%" y="943.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global&gt;::reserve_rehash&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;lasso::keys::Spur,lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$ (1 samples, 0.01%)</title><rect x="39.1583%" y="917" width="0.0108%" height="15" fill="rgb(248,195,53)" fg:x="3610" fg:w="1"/><text x="39.4083%" y="927.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::get&lt;ref$ (13 samples, 0.14%)</title><rect x="39.1691%" y="949" width="0.1410%" height="15" fill="rgb(226,201,16)" fg:x="3611" fg:w="13"/><text x="39.4191%" y="959.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;ahash::random_state::RandomState,ref$ (6 samples, 0.07%)</title><rect x="39.2450%" y="933" width="0.0651%" height="15" fill="rgb(205,98,0)" fg:x="3618" fg:w="6"/><text x="39.4950%" y="943.50"></text></g><g><title>stelpatch-benchmark`lasso::multi_threaded::ThreadedRodeo&lt;lasso::keys::Spur,ahash::random_state::RandomState&gt;::get_or_intern&lt;lasso::keys::Spur,ahash::random_state::RandomState,ref$ (18 samples, 0.20%)</title><rect x="39.1257%" y="965" width="0.1952%" height="15" fill="rgb(214,191,48)" fg:x="3607" fg:w="18"/><text x="39.3757%" y="975.50"></text></g><g><title>stelpatch-benchmark`dashmap::mapref::entry::VacantEntry&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::insert&lt;ref$ (1 samples, 0.01%)</title><rect x="39.3101%" y="949" width="0.0108%" height="15" fill="rgb(237,112,39)" fg:x="3624" fg:w="1"/><text x="39.5601%" y="959.50"></text></g><g><title>stelpatch-benchmark`hashbrown::map::HashMap&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt;,ahash::random_state::RandomState,alloc::alloc::Global&gt;::insert&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue (1 samples, 0.01%)</title><rect x="39.3101%" y="933" width="0.0108%" height="15" fill="rgb(247,203,27)" fg:x="3624" fg:w="1"/><text x="39.5601%" y="943.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt; &gt;,alloc::alloc::Global&gt;::insert&lt;tuple$&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,dashmap::util::SharedValue (1 samples, 0.01%)</title><rect x="39.3101%" y="917" width="0.0108%" height="15" fill="rgb(235,124,28)" fg:x="3624" fg:w="1"/><text x="39.5601%" y="927.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt; &gt;,alloc::alloc::Global&gt;::reserve_rehash&lt;tuple$&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,dashmap::util::SharedValue (1 samples, 0.01%)</title><rect x="39.3101%" y="901" width="0.0108%" height="15" fill="rgb(208,207,46)" fg:x="3624" fg:w="1"/><text x="39.5601%" y="911.50"></text></g><g><title>ntdll`RtlCreateTimer (6 samples, 0.07%)</title><rect x="39.4403%" y="901" width="0.0651%" height="15" fill="rgb(234,176,4)" fg:x="3636" fg:w="6"/><text x="39.6903%" y="911.50"></text></g><g><title>ntdll`RtlSetUserValueHeap (1 samples, 0.01%)</title><rect x="39.5054%" y="901" width="0.0108%" height="15" fill="rgb(230,133,28)" fg:x="3642" fg:w="1"/><text x="39.7554%" y="911.50"></text></g><g><title>stelpatch-benchmark`stelpatch::cw_model::Entity::new (19 samples, 0.21%)</title><rect x="39.3210%" y="965" width="0.2061%" height="15" fill="rgb(211,137,40)" fg:x="3625" fg:w="19"/><text x="39.5710%" y="975.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;lasso::keys::Spur,stelpatch::cw_model::PropertyInfoList&gt;,alloc::alloc::Global&gt;::with_capacity&lt;tuple$ (15 samples, 0.16%)</title><rect x="39.3644%" y="949" width="0.1627%" height="15" fill="rgb(254,35,13)" fg:x="3629" fg:w="15"/><text x="39.6144%" y="959.50"></text></g><g><title>ntdll`RtlAllocateHeap (14 samples, 0.15%)</title><rect x="39.3752%" y="933" width="0.1519%" height="15" fill="rgb(225,49,51)" fg:x="3630" fg:w="14"/><text x="39.6252%" y="943.50"></text></g><g><title>ntdll`RtlAllocateHeap (13 samples, 0.14%)</title><rect x="39.3861%" y="917" width="0.1410%" height="15" fill="rgb(251,10,15)" fg:x="3631" fg:w="13"/><text x="39.6361%" y="927.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.01%)</title><rect x="39.5162%" y="901" width="0.0108%" height="15" fill="rgb(228,207,15)" fg:x="3643" fg:w="1"/><text x="39.7662%" y="911.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.01%)</title><rect x="39.5162%" y="885" width="0.0108%" height="15" fill="rgb(241,99,19)" fg:x="3643" fg:w="1"/><text x="39.7662%" y="895.50"></text></g><g><title>ntdll`NtProtectVirtualMemory (1 samples, 0.01%)</title><rect x="39.5162%" y="869" width="0.0108%" height="15" fill="rgb(207,104,49)" fg:x="3643" fg:w="1"/><text x="39.7662%" y="879.50"></text></g><g><title>KERNEL32`HeapFree (2 samples, 0.02%)</title><rect x="39.6355%" y="949" width="0.0217%" height="15" fill="rgb(234,99,18)" fg:x="3654" fg:w="2"/><text x="39.8855%" y="959.50"></text></g><g><title>VCRUNTIME140`memcpy (1 samples, 0.01%)</title><rect x="39.6572%" y="949" width="0.0108%" height="15" fill="rgb(213,191,49)" fg:x="3656" fg:w="1"/><text x="39.9072%" y="959.50"></text></g><g><title>ntdll`RtlCreateTimer (12 samples, 0.13%)</title><rect x="39.7223%" y="917" width="0.1302%" height="15" fill="rgb(210,226,19)" fg:x="3662" fg:w="12"/><text x="39.9723%" y="927.50"></text></g><g><title>ntdll`RtlSetUserValueHeap (1 samples, 0.01%)</title><rect x="39.8525%" y="917" width="0.0108%" height="15" fill="rgb(229,97,18)" fg:x="3674" fg:w="1"/><text x="40.1025%" y="927.50"></text></g><g><title>ntdll`RtlAllocateHeap (19 samples, 0.21%)</title><rect x="39.6681%" y="949" width="0.2061%" height="15" fill="rgb(211,167,15)" fg:x="3657" fg:w="19"/><text x="39.9181%" y="959.50"></text></g><g><title>ntdll`RtlAllocateHeap (19 samples, 0.21%)</title><rect x="39.6681%" y="933" width="0.2061%" height="15" fill="rgb(210,169,34)" fg:x="3657" fg:w="19"/><text x="39.9181%" y="943.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.01%)</title><rect x="39.8633%" y="917" width="0.0108%" height="15" fill="rgb(241,121,31)" fg:x="3675" fg:w="1"/><text x="40.1133%" y="927.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.01%)</title><rect x="39.8633%" y="901" width="0.0108%" height="15" fill="rgb(232,40,11)" fg:x="3675" fg:w="1"/><text x="40.1133%" y="911.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="39.8633%" y="885" width="0.0108%" height="15" fill="rgb(205,86,26)" fg:x="3675" fg:w="1"/><text x="40.1133%" y="895.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="39.8633%" y="869" width="0.0108%" height="15" fill="rgb(231,126,28)" fg:x="3675" fg:w="1"/><text x="40.1133%" y="879.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.01%)</title><rect x="39.8742%" y="933" width="0.0108%" height="15" fill="rgb(219,221,18)" fg:x="3676" fg:w="1"/><text x="40.1242%" y="943.50"></text></g><g><title>ntdll`RtlFreeHeap (3 samples, 0.03%)</title><rect x="39.8742%" y="949" width="0.0325%" height="15" fill="rgb(211,40,0)" fg:x="3676" fg:w="3"/><text x="40.1242%" y="959.50"></text></g><g><title>ntdll`memset (2 samples, 0.02%)</title><rect x="39.8850%" y="933" width="0.0217%" height="15" fill="rgb(239,85,43)" fg:x="3677" fg:w="2"/><text x="40.1350%" y="943.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;lasso::keys::Spur,ref$&lt;str$&gt;,ahash::random_state::RandomState&gt;::insert&lt;lasso::keys::Spur,ref$ (2 samples, 0.02%)</title><rect x="39.9176%" y="917" width="0.0217%" height="15" fill="rgb(231,55,21)" fg:x="3680" fg:w="2"/><text x="40.1676%" y="927.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global&gt;::insert&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;lasso::keys::Spur,lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$ (1 samples, 0.01%)</title><rect x="39.9284%" y="901" width="0.0108%" height="15" fill="rgb(225,184,43)" fg:x="3681" fg:w="1"/><text x="40.1784%" y="911.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::entry&lt;ref$ (2 samples, 0.02%)</title><rect x="39.9393%" y="917" width="0.0217%" height="15" fill="rgb(251,158,41)" fg:x="3682" fg:w="2"/><text x="40.1893%" y="927.50"></text></g><g><title>VCRUNTIME140`memcmp (2 samples, 0.02%)</title><rect x="40.0369%" y="901" width="0.0217%" height="15" fill="rgb(234,159,37)" fg:x="3691" fg:w="2"/><text x="40.2869%" y="911.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::get&lt;ref$ (10 samples, 0.11%)</title><rect x="39.9610%" y="917" width="0.1085%" height="15" fill="rgb(216,204,22)" fg:x="3684" fg:w="10"/><text x="40.2110%" y="927.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;ahash::random_state::RandomState,ref$ (1 samples, 0.01%)</title><rect x="40.0586%" y="901" width="0.0108%" height="15" fill="rgb(214,17,3)" fg:x="3693" fg:w="1"/><text x="40.3086%" y="911.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="40.0911%" y="853" width="0.0108%" height="15" fill="rgb(212,111,17)" fg:x="3696" fg:w="1"/><text x="40.3411%" y="863.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="40.0911%" y="837" width="0.0108%" height="15" fill="rgb(221,157,24)" fg:x="3696" fg:w="1"/><text x="40.3411%" y="847.50"></text></g><g><title>stelpatch-benchmark`lasso::multi_threaded::ThreadedRodeo&lt;lasso::keys::Spur,ahash::random_state::RandomState&gt;::get_or_intern&lt;lasso::keys::Spur,ahash::random_state::RandomState,ref$ (22 samples, 0.24%)</title><rect x="39.9176%" y="933" width="0.2386%" height="15" fill="rgb(252,16,13)" fg:x="3680" fg:w="22"/><text x="40.1676%" y="943.50"></text></g><g><title>stelpatch-benchmark`dashmap::mapref::entry::VacantEntry&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::insert&lt;ref$ (8 samples, 0.09%)</title><rect x="40.0694%" y="917" width="0.0868%" height="15" fill="rgb(221,62,2)" fg:x="3694" fg:w="8"/><text x="40.3194%" y="927.50"></text></g><g><title>stelpatch-benchmark`hashbrown::map::HashMap&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt;,ahash::random_state::RandomState,alloc::alloc::Global&gt;::insert&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue (8 samples, 0.09%)</title><rect x="40.0694%" y="901" width="0.0868%" height="15" fill="rgb(247,87,22)" fg:x="3694" fg:w="8"/><text x="40.3194%" y="911.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt; &gt;,alloc::alloc::Global&gt;::insert&lt;tuple$&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,dashmap::util::SharedValue (8 samples, 0.09%)</title><rect x="40.0694%" y="885" width="0.0868%" height="15" fill="rgb(215,73,9)" fg:x="3694" fg:w="8"/><text x="40.3194%" y="895.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt; &gt;,alloc::alloc::Global&gt;::reserve_rehash&lt;tuple$&lt;ref$&lt;str$&gt;,dashmap::util::SharedValue&lt;lasso::keys::Spur&gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,dashmap::util::SharedValue (7 samples, 0.08%)</title><rect x="40.0803%" y="869" width="0.0759%" height="15" fill="rgb(207,175,33)" fg:x="3695" fg:w="7"/><text x="40.3303%" y="879.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;ahash::random_state::RandomState,ref$&lt;ref$ (5 samples, 0.05%)</title><rect x="40.1020%" y="853" width="0.0542%" height="15" fill="rgb(243,129,54)" fg:x="3697" fg:w="5"/><text x="40.3520%" y="863.50"></text></g><g><title>ntdll`RtlFreeHeap (1 samples, 0.01%)</title><rect x="40.2104%" y="917" width="0.0108%" height="15" fill="rgb(227,119,45)" fg:x="3707" fg:w="1"/><text x="40.4604%" y="927.50"></text></g><g><title>ntdll`memset (1 samples, 0.01%)</title><rect x="40.2104%" y="901" width="0.0108%" height="15" fill="rgb(205,109,36)" fg:x="3707" fg:w="1"/><text x="40.4604%" y="911.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;lasso::keys::Spur,ref$&lt;str$&gt;,ahash::random_state::RandomState&gt;::insert&lt;lasso::keys::Spur,ref$ (1 samples, 0.01%)</title><rect x="40.2213%" y="901" width="0.0108%" height="15" fill="rgb(205,6,39)" fg:x="3708" fg:w="1"/><text x="40.4713%" y="911.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global&gt;::insert&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;lasso::keys::Spur,lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$ (1 samples, 0.01%)</title><rect x="40.2213%" y="885" width="0.0108%" height="15" fill="rgb(221,32,16)" fg:x="3708" fg:w="1"/><text x="40.4713%" y="895.50"></text></g><g><title>stelpatch-benchmark`lasso::multi_threaded::ThreadedRodeo&lt;lasso::keys::Spur,ahash::random_state::RandomState&gt;::get_or_intern&lt;lasso::keys::Spur,ahash::random_state::RandomState,ref$ (3 samples, 0.03%)</title><rect x="40.2213%" y="917" width="0.0325%" height="15" fill="rgb(228,144,50)" fg:x="3708" fg:w="3"/><text x="40.4713%" y="927.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::get&lt;ref$ (2 samples, 0.02%)</title><rect x="40.2321%" y="901" width="0.0217%" height="15" fill="rgb(229,201,53)" fg:x="3709" fg:w="2"/><text x="40.4821%" y="911.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;ahash::random_state::RandomState,ref$ (1 samples, 0.01%)</title><rect x="40.2430%" y="885" width="0.0108%" height="15" fill="rgb(249,153,27)" fg:x="3710" fg:w="1"/><text x="40.4930%" y="895.50"></text></g><g><title>ntdll`RtlCreateTimer (2 samples, 0.02%)</title><rect x="40.3081%" y="853" width="0.0217%" height="15" fill="rgb(227,106,25)" fg:x="3716" fg:w="2"/><text x="40.5581%" y="863.50"></text></g><g><title>ntdll`RtlAllocateHeap (4 samples, 0.04%)</title><rect x="40.2972%" y="885" width="0.0434%" height="15" fill="rgb(230,65,29)" fg:x="3715" fg:w="4"/><text x="40.5472%" y="895.50"></text></g><g><title>ntdll`RtlAllocateHeap (3 samples, 0.03%)</title><rect x="40.3081%" y="869" width="0.0325%" height="15" fill="rgb(221,57,46)" fg:x="3716" fg:w="3"/><text x="40.5581%" y="879.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.01%)</title><rect x="40.3298%" y="853" width="0.0108%" height="15" fill="rgb(229,161,17)" fg:x="3718" fg:w="1"/><text x="40.5798%" y="863.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.01%)</title><rect x="40.3298%" y="837" width="0.0108%" height="15" fill="rgb(222,213,11)" fg:x="3718" fg:w="1"/><text x="40.5798%" y="847.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="40.3298%" y="821" width="0.0108%" height="15" fill="rgb(235,35,13)" fg:x="3718" fg:w="1"/><text x="40.5798%" y="831.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="40.3298%" y="805" width="0.0108%" height="15" fill="rgb(233,158,34)" fg:x="3718" fg:w="1"/><text x="40.5798%" y="815.50"></text></g><g><title>stelpatch-benchmark`stelpatch::cw_model::Entity::new (9 samples, 0.10%)</title><rect x="40.2538%" y="917" width="0.0976%" height="15" fill="rgb(215,151,48)" fg:x="3711" fg:w="9"/><text x="40.5038%" y="927.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;lasso::keys::Spur,stelpatch::cw_model::PropertyInfoList&gt;,alloc::alloc::Global&gt;::with_capacity&lt;tuple$ (5 samples, 0.05%)</title><rect x="40.2972%" y="901" width="0.0542%" height="15" fill="rgb(229,84,14)" fg:x="3715" fg:w="5"/><text x="40.5472%" y="911.50"></text></g><g><title>stelpatch-benchmark`std::alloc::__default_lib_allocator::__rdl_alloc (1 samples, 0.01%)</title><rect x="40.3406%" y="885" width="0.0108%" height="15" fill="rgb(229,68,14)" fg:x="3719" fg:w="1"/><text x="40.5906%" y="895.50"></text></g><g><title>VCRUNTIME140`memcpy (1 samples, 0.01%)</title><rect x="40.3840%" y="901" width="0.0108%" height="15" fill="rgb(243,106,26)" fg:x="3723" fg:w="1"/><text x="40.6340%" y="911.50"></text></g><g><title>ntdll`RtlCreateTimer (4 samples, 0.04%)</title><rect x="40.5033%" y="869" width="0.0434%" height="15" fill="rgb(206,45,38)" fg:x="3734" fg:w="4"/><text x="40.7533%" y="879.50"></text></g><g><title>ntdll`RtlAllocateHeap (15 samples, 0.16%)</title><rect x="40.3948%" y="901" width="0.1627%" height="15" fill="rgb(226,6,15)" fg:x="3724" fg:w="15"/><text x="40.6448%" y="911.50"></text></g><g><title>ntdll`RtlAllocateHeap (12 samples, 0.13%)</title><rect x="40.4274%" y="885" width="0.1302%" height="15" fill="rgb(232,22,54)" fg:x="3727" fg:w="12"/><text x="40.6774%" y="895.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.01%)</title><rect x="40.5467%" y="869" width="0.0108%" height="15" fill="rgb(229,222,32)" fg:x="3738" fg:w="1"/><text x="40.7967%" y="879.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.01%)</title><rect x="40.5467%" y="853" width="0.0108%" height="15" fill="rgb(228,62,29)" fg:x="3738" fg:w="1"/><text x="40.7967%" y="863.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="40.5467%" y="837" width="0.0108%" height="15" fill="rgb(251,103,34)" fg:x="3738" fg:w="1"/><text x="40.7967%" y="847.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="40.5467%" y="821" width="0.0108%" height="15" fill="rgb(233,12,30)" fg:x="3738" fg:w="1"/><text x="40.7967%" y="831.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.01%)</title><rect x="40.5467%" y="805" width="0.0108%" height="15" fill="rgb(238,52,0)" fg:x="3738" fg:w="1"/><text x="40.7967%" y="815.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.01%)</title><rect x="40.5467%" y="789" width="0.0108%" height="15" fill="rgb(223,98,5)" fg:x="3738" fg:w="1"/><text x="40.7967%" y="799.50"></text></g><g><title>ntdll`NtAllocateVirtualMemory (1 samples, 0.01%)</title><rect x="40.5467%" y="773" width="0.0108%" height="15" fill="rgb(228,75,37)" fg:x="3738" fg:w="1"/><text x="40.7967%" y="783.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.01%)</title><rect x="40.5684%" y="885" width="0.0108%" height="15" fill="rgb(205,115,49)" fg:x="3740" fg:w="1"/><text x="40.8184%" y="895.50"></text></g><g><title>ntdll`RtlFreeHeap (3 samples, 0.03%)</title><rect x="40.5575%" y="901" width="0.0325%" height="15" fill="rgb(250,154,43)" fg:x="3739" fg:w="3"/><text x="40.8075%" y="911.50"></text></g><g><title>ntdll`memset (1 samples, 0.01%)</title><rect x="40.5792%" y="885" width="0.0108%" height="15" fill="rgb(226,43,29)" fg:x="3741" fg:w="1"/><text x="40.8292%" y="895.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;lasso::keys::Spur,ref$&lt;str$&gt;,ahash::random_state::RandomState&gt;::insert&lt;lasso::keys::Spur,ref$ (2 samples, 0.02%)</title><rect x="40.6118%" y="869" width="0.0217%" height="15" fill="rgb(249,228,39)" fg:x="3744" fg:w="2"/><text x="40.8618%" y="879.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global&gt;::insert&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;lasso::keys::Spur,lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$ (1 samples, 0.01%)</title><rect x="40.6226%" y="853" width="0.0108%" height="15" fill="rgb(216,79,43)" fg:x="3745" fg:w="1"/><text x="40.8726%" y="863.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global&gt;::reserve_rehash&lt;tuple$&lt;lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;lasso::keys::Spur,lasso::keys::Spur,dashmap::util::SharedValue&lt;ref$ (1 samples, 0.01%)</title><rect x="40.6226%" y="837" width="0.0108%" height="15" fill="rgb(228,95,12)" fg:x="3745" fg:w="1"/><text x="40.8726%" y="847.50"></text></g><g><title>VCRUNTIME140`memcmp (1 samples, 0.01%)</title><rect x="40.6552%" y="853" width="0.0108%" height="15" fill="rgb(249,221,15)" fg:x="3748" fg:w="1"/><text x="40.9052%" y="863.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::get&lt;ref$ (4 samples, 0.04%)</title><rect x="40.6335%" y="869" width="0.0434%" height="15" fill="rgb(233,34,13)" fg:x="3746" fg:w="4"/><text x="40.8835%" y="879.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;ahash::random_state::RandomState,ref$ (1 samples, 0.01%)</title><rect x="40.6660%" y="853" width="0.0108%" height="15" fill="rgb(214,103,39)" fg:x="3749" fg:w="1"/><text x="40.9160%" y="863.50"></text></g><g><title>stelpatch-benchmark`lasso::multi_threaded::ThreadedRodeo&lt;lasso::keys::Spur,ahash::random_state::RandomState&gt;::get_or_intern&lt;lasso::keys::Spur,ahash::random_state::RandomState,ref$ (7 samples, 0.08%)</title><rect x="40.6118%" y="885" width="0.0759%" height="15" fill="rgb(251,126,39)" fg:x="3744" fg:w="7"/><text x="40.8618%" y="895.50"></text></g><g><title>stelpatch-benchmark`lasso::arena::Arena::store_str (1 samples, 0.01%)</title><rect x="40.6769%" y="869" width="0.0108%" height="15" fill="rgb(214,216,36)" fg:x="3750" fg:w="1"/><text x="40.9269%" y="879.50"></text></g><g><title>VCRUNTIME140`memcpy (1 samples, 0.01%)</title><rect x="40.6769%" y="853" width="0.0108%" height="15" fill="rgb(220,221,8)" fg:x="3750" fg:w="1"/><text x="40.9269%" y="863.50"></text></g><g><title>stelpatch-benchmark`hashbrown::map::HashMap&lt;lasso::keys::Spur,stelpatch::cw_model::PropertyInfoList,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::insert (2 samples, 0.02%)</title><rect x="40.6986%" y="869" width="0.0217%" height="15" fill="rgb(240,216,3)" fg:x="3752" fg:w="2"/><text x="40.9486%" y="879.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState,ref$ (1 samples, 0.01%)</title><rect x="40.7094%" y="853" width="0.0108%" height="15" fill="rgb(232,218,17)" fg:x="3753" fg:w="1"/><text x="40.9594%" y="863.50"></text></g><g><title>stelpatch-benchmark`lasso::multi_threaded::ThreadedRodeo&lt;lasso::keys::Spur,ahash::random_state::RandomState&gt;::get_or_intern&lt;lasso::keys::Spur,ahash::random_state::RandomState,ref$ (2 samples, 0.02%)</title><rect x="40.7203%" y="869" width="0.0217%" height="15" fill="rgb(229,163,45)" fg:x="3754" fg:w="2"/><text x="40.9703%" y="879.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::get&lt;ref$ (2 samples, 0.02%)</title><rect x="40.7203%" y="853" width="0.0217%" height="15" fill="rgb(231,110,42)" fg:x="3754" fg:w="2"/><text x="40.9703%" y="863.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;ahash::random_state::RandomState,ref$ (1 samples, 0.01%)</title><rect x="40.7311%" y="837" width="0.0108%" height="15" fill="rgb(208,170,48)" fg:x="3755" fg:w="1"/><text x="40.9811%" y="847.50"></text></g><g><title>stelpatch-benchmark`stelpatch::cw_model::Entity::new (3 samples, 0.03%)</title><rect x="40.7419%" y="869" width="0.0325%" height="15" fill="rgb(239,116,25)" fg:x="3756" fg:w="3"/><text x="40.9919%" y="879.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;lasso::keys::Spur,stelpatch::cw_model::PropertyInfoList&gt;,alloc::alloc::Global&gt;::with_capacity&lt;tuple$ (1 samples, 0.01%)</title><rect x="40.7636%" y="853" width="0.0108%" height="15" fill="rgb(219,200,50)" fg:x="3758" fg:w="1"/><text x="41.0136%" y="863.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="40.7636%" y="837" width="0.0108%" height="15" fill="rgb(245,200,0)" fg:x="3758" fg:w="1"/><text x="41.0136%" y="847.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="40.7636%" y="821" width="0.0108%" height="15" fill="rgb(245,119,33)" fg:x="3758" fg:w="1"/><text x="41.0136%" y="831.50"></text></g><g><title>ntdll`RtlSetUserValueHeap (1 samples, 0.01%)</title><rect x="40.7636%" y="805" width="0.0108%" height="15" fill="rgb(231,125,12)" fg:x="3758" fg:w="1"/><text x="41.0136%" y="815.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.02%)</title><rect x="40.7962%" y="853" width="0.0217%" height="15" fill="rgb(216,96,41)" fg:x="3761" fg:w="2"/><text x="41.0462%" y="863.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.02%)</title><rect x="40.7962%" y="837" width="0.0217%" height="15" fill="rgb(248,43,45)" fg:x="3761" fg:w="2"/><text x="41.0462%" y="847.50"></text></g><g><title>ntdll`RtlCreateTimer (2 samples, 0.02%)</title><rect x="40.7962%" y="821" width="0.0217%" height="15" fill="rgb(217,222,7)" fg:x="3761" fg:w="2"/><text x="41.0462%" y="831.50"></text></g><g><title>ntdll`RtlFreeHeap (2 samples, 0.02%)</title><rect x="40.8179%" y="853" width="0.0217%" height="15" fill="rgb(233,28,6)" fg:x="3763" fg:w="2"/><text x="41.0679%" y="863.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.01%)</title><rect x="40.8287%" y="837" width="0.0108%" height="15" fill="rgb(231,218,15)" fg:x="3764" fg:w="1"/><text x="41.0787%" y="847.50"></text></g><g><title>stelpatch-benchmark`lasso::multi_threaded::ThreadedRodeo&lt;lasso::keys::Spur,ahash::random_state::RandomState&gt;::get_or_intern&lt;lasso::keys::Spur,ahash::random_state::RandomState,ref$ (5 samples, 0.05%)</title><rect x="40.8396%" y="837" width="0.0542%" height="15" fill="rgb(226,171,48)" fg:x="3765" fg:w="5"/><text x="41.0896%" y="847.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::get&lt;ref$ (5 samples, 0.05%)</title><rect x="40.8396%" y="821" width="0.0542%" height="15" fill="rgb(235,201,9)" fg:x="3765" fg:w="5"/><text x="41.0896%" y="831.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;ahash::random_state::RandomState,ref$ (1 samples, 0.01%)</title><rect x="40.8830%" y="805" width="0.0108%" height="15" fill="rgb(217,80,15)" fg:x="3769" fg:w="1"/><text x="41.1330%" y="815.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::impl$18::into_iter&lt;tuple$&lt;ref$ (1 samples, 0.01%)</title><rect x="40.9047%" y="821" width="0.0108%" height="15" fill="rgb(219,152,8)" fg:x="3771" fg:w="1"/><text x="41.1547%" y="831.50"></text></g><g><title>stelpatch-benchmark`lasso::multi_threaded::ThreadedRodeo&lt;lasso::keys::Spur,ahash::random_state::RandomState&gt;::get_or_intern&lt;lasso::keys::Spur,ahash::random_state::RandomState,ref$ (1 samples, 0.01%)</title><rect x="40.9155%" y="821" width="0.0108%" height="15" fill="rgb(243,107,38)" fg:x="3772" fg:w="1"/><text x="41.1655%" y="831.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::get&lt;ref$ (1 samples, 0.01%)</title><rect x="40.9155%" y="805" width="0.0108%" height="15" fill="rgb(231,17,5)" fg:x="3772" fg:w="1"/><text x="41.1655%" y="815.50"></text></g><g><title>VCRUNTIME140`memcmp (1 samples, 0.01%)</title><rect x="40.9155%" y="789" width="0.0108%" height="15" fill="rgb(209,25,54)" fg:x="3772" fg:w="1"/><text x="41.1655%" y="799.50"></text></g><g><title>ntdll`RtlCreateTimer (2 samples, 0.02%)</title><rect x="40.9263%" y="757" width="0.0217%" height="15" fill="rgb(219,0,2)" fg:x="3773" fg:w="2"/><text x="41.1763%" y="767.50"></text></g><g><title>stelpatch-benchmark`stelpatch::cw_model::Entity::new (3 samples, 0.03%)</title><rect x="40.9263%" y="821" width="0.0325%" height="15" fill="rgb(246,9,5)" fg:x="3773" fg:w="3"/><text x="41.1763%" y="831.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;lasso::keys::Spur,stelpatch::cw_model::PropertyInfoList&gt;,alloc::alloc::Global&gt;::with_capacity&lt;tuple$ (3 samples, 0.03%)</title><rect x="40.9263%" y="805" width="0.0325%" height="15" fill="rgb(226,159,4)" fg:x="3773" fg:w="3"/><text x="41.1763%" y="815.50"></text></g><g><title>ntdll`RtlAllocateHeap (3 samples, 0.03%)</title><rect x="40.9263%" y="789" width="0.0325%" height="15" fill="rgb(219,175,34)" fg:x="3773" fg:w="3"/><text x="41.1763%" y="799.50"></text></g><g><title>ntdll`RtlAllocateHeap (3 samples, 0.03%)</title><rect x="40.9263%" y="773" width="0.0325%" height="15" fill="rgb(236,10,46)" fg:x="3773" fg:w="3"/><text x="41.1763%" y="783.50"></text></g><g><title>ntdll`RtlSetUserValueHeap (1 samples, 0.01%)</title><rect x="40.9480%" y="757" width="0.0108%" height="15" fill="rgb(240,211,16)" fg:x="3775" fg:w="1"/><text x="41.1980%" y="767.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.02%)</title><rect x="40.9589%" y="805" width="0.0217%" height="15" fill="rgb(205,3,43)" fg:x="3776" fg:w="2"/><text x="41.2089%" y="815.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="40.9697%" y="789" width="0.0108%" height="15" fill="rgb(245,7,22)" fg:x="3777" fg:w="1"/><text x="41.2197%" y="799.50"></text></g><g><title>stelpatch-benchmark`lasso::multi_threaded::ThreadedRodeo&lt;lasso::keys::Spur,ahash::random_state::RandomState&gt;::get_or_intern&lt;lasso::keys::Spur,ahash::random_state::RandomState,ref$ (2 samples, 0.02%)</title><rect x="40.9806%" y="789" width="0.0217%" height="15" fill="rgb(239,132,32)" fg:x="3778" fg:w="2"/><text x="41.2306%" y="799.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::get&lt;ref$ (2 samples, 0.02%)</title><rect x="40.9806%" y="773" width="0.0217%" height="15" fill="rgb(228,202,34)" fg:x="3778" fg:w="2"/><text x="41.2306%" y="783.50"></text></g><g><title>ntdll`RtlFreeHeap (1 samples, 0.01%)</title><rect x="41.0131%" y="773" width="0.0108%" height="15" fill="rgb(254,200,22)" fg:x="3781" fg:w="1"/><text x="41.2631%" y="783.50"></text></g><g><title>ntdll`memset (1 samples, 0.01%)</title><rect x="41.0131%" y="757" width="0.0108%" height="15" fill="rgb(219,10,39)" fg:x="3781" fg:w="1"/><text x="41.2631%" y="767.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::impl$18::into_iter&lt;tuple$&lt;ref$ (1 samples, 0.01%)</title><rect x="41.0240%" y="773" width="0.0108%" height="15" fill="rgb(226,210,39)" fg:x="3782" fg:w="1"/><text x="41.2740%" y="783.50"></text></g><g><title>ntdll`RtlFreeHeap (1 samples, 0.01%)</title><rect x="41.0348%" y="725" width="0.0108%" height="15" fill="rgb(208,219,16)" fg:x="3783" fg:w="1"/><text x="41.2848%" y="735.50"></text></g><g><title>ntdll`memset (1 samples, 0.01%)</title><rect x="41.0348%" y="709" width="0.0108%" height="15" fill="rgb(216,158,51)" fg:x="3783" fg:w="1"/><text x="41.2848%" y="719.50"></text></g><g><title>stelpatch-benchmark`lasso::multi_threaded::ThreadedRodeo&lt;lasso::keys::Spur,ahash::random_state::RandomState&gt;::get_or_intern&lt;lasso::keys::Spur,ahash::random_state::RandomState,ref$ (1 samples, 0.01%)</title><rect x="41.0457%" y="693" width="0.0108%" height="15" fill="rgb(233,14,44)" fg:x="3784" fg:w="1"/><text x="41.2957%" y="703.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::get&lt;ref$ (1 samples, 0.01%)</title><rect x="41.0457%" y="677" width="0.0108%" height="15" fill="rgb(237,97,39)" fg:x="3784" fg:w="1"/><text x="41.2957%" y="687.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;ahash::random_state::RandomState,ref$ (1 samples, 0.01%)</title><rect x="41.0457%" y="661" width="0.0108%" height="15" fill="rgb(218,198,43)" fg:x="3784" fg:w="1"/><text x="41.2957%" y="671.50"></text></g><g><title>stelpatch-benchmark`enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;::into_value (238 samples, 2.58%)</title><rect x="38.4857%" y="997" width="2.5816%" height="15" fill="rgb(231,104,20)" fg:x="3548" fg:w="238"/><text x="38.7357%" y="1007.50">st..</text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::ParsedEntity::into_entity (200 samples, 2.17%)</title><rect x="38.8979%" y="981" width="2.1694%" height="15" fill="rgb(254,36,13)" fg:x="3586" fg:w="200"/><text x="39.1479%" y="991.50">s..</text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::ParsedPropertyInfoList::into_property_info_list (142 samples, 1.54%)</title><rect x="39.5271%" y="965" width="1.5403%" height="15" fill="rgb(248,14,50)" fg:x="3644" fg:w="142"/><text x="39.7771%" y="975.50"></text></g><g><title>stelpatch-benchmark`enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;::into_value (107 samples, 1.16%)</title><rect x="39.9067%" y="949" width="1.1606%" height="15" fill="rgb(217,107,29)" fg:x="3679" fg:w="107"/><text x="40.1567%" y="959.50"></text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::ParsedEntity::into_entity (84 samples, 0.91%)</title><rect x="40.1562%" y="933" width="0.9112%" height="15" fill="rgb(251,169,33)" fg:x="3702" fg:w="84"/><text x="40.4062%" y="943.50"></text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::ParsedPropertyInfoList::into_property_info_list (66 samples, 0.72%)</title><rect x="40.3514%" y="917" width="0.7159%" height="15" fill="rgb(217,108,32)" fg:x="3720" fg:w="66"/><text x="40.6014%" y="927.50"></text></g><g><title>stelpatch-benchmark`enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;::into_value (44 samples, 0.48%)</title><rect x="40.5901%" y="901" width="0.4773%" height="15" fill="rgb(219,66,42)" fg:x="3742" fg:w="44"/><text x="40.8401%" y="911.50"></text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::ParsedEntity::into_entity (35 samples, 0.38%)</title><rect x="40.6877%" y="885" width="0.3797%" height="15" fill="rgb(206,180,7)" fg:x="3751" fg:w="35"/><text x="40.9377%" y="895.50"></text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::ParsedPropertyInfoList::into_property_info_list (27 samples, 0.29%)</title><rect x="40.7745%" y="869" width="0.2929%" height="15" fill="rgb(208,226,31)" fg:x="3759" fg:w="27"/><text x="41.0245%" y="879.50"></text></g><g><title>stelpatch-benchmark`enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;::into_value (21 samples, 0.23%)</title><rect x="40.8396%" y="853" width="0.2278%" height="15" fill="rgb(218,26,49)" fg:x="3765" fg:w="21"/><text x="41.0896%" y="863.50"></text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::ParsedEntity::into_entity (16 samples, 0.17%)</title><rect x="40.8938%" y="837" width="0.1736%" height="15" fill="rgb(233,197,48)" fg:x="3770" fg:w="16"/><text x="41.1438%" y="847.50"></text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::ParsedPropertyInfoList::into_property_info_list (10 samples, 0.11%)</title><rect x="40.9589%" y="821" width="0.1085%" height="15" fill="rgb(252,181,51)" fg:x="3776" fg:w="10"/><text x="41.2089%" y="831.50"></text></g><g><title>stelpatch-benchmark`enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;::into_value (8 samples, 0.09%)</title><rect x="40.9806%" y="805" width="0.0868%" height="15" fill="rgb(253,90,19)" fg:x="3778" fg:w="8"/><text x="41.2306%" y="815.50"></text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::ParsedEntity::into_entity (6 samples, 0.07%)</title><rect x="41.0023%" y="789" width="0.0651%" height="15" fill="rgb(215,171,30)" fg:x="3780" fg:w="6"/><text x="41.2523%" y="799.50"></text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::ParsedPropertyInfoList::into_property_info_list (3 samples, 0.03%)</title><rect x="41.0348%" y="773" width="0.0325%" height="15" fill="rgb(214,222,9)" fg:x="3783" fg:w="3"/><text x="41.2848%" y="783.50"></text></g><g><title>stelpatch-benchmark`enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;::into_value (3 samples, 0.03%)</title><rect x="41.0348%" y="757" width="0.0325%" height="15" fill="rgb(223,3,22)" fg:x="3783" fg:w="3"/><text x="41.2848%" y="767.50"></text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::ParsedEntity::into_entity (3 samples, 0.03%)</title><rect x="41.0348%" y="741" width="0.0325%" height="15" fill="rgb(225,196,46)" fg:x="3783" fg:w="3"/><text x="41.2848%" y="751.50"></text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::ParsedPropertyInfoList::into_property_info_list (2 samples, 0.02%)</title><rect x="41.0457%" y="725" width="0.0217%" height="15" fill="rgb(209,110,37)" fg:x="3784" fg:w="2"/><text x="41.2957%" y="735.50"></text></g><g><title>stelpatch-benchmark`enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;::into_value (2 samples, 0.02%)</title><rect x="41.0457%" y="709" width="0.0217%" height="15" fill="rgb(249,89,12)" fg:x="3784" fg:w="2"/><text x="41.2957%" y="719.50"></text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::ParsedEntity::into_entity (1 samples, 0.01%)</title><rect x="41.0565%" y="693" width="0.0108%" height="15" fill="rgb(226,27,33)" fg:x="3785" fg:w="1"/><text x="41.3065%" y="703.50"></text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::ParsedPropertyInfoList::into_property_info_list (1 samples, 0.01%)</title><rect x="41.0565%" y="677" width="0.0108%" height="15" fill="rgb(213,82,22)" fg:x="3785" fg:w="1"/><text x="41.3065%" y="687.50"></text></g><g><title>stelpatch-benchmark`enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;::into_value (1 samples, 0.01%)</title><rect x="41.0565%" y="661" width="0.0108%" height="15" fill="rgb(248,140,0)" fg:x="3785" fg:w="1"/><text x="41.3065%" y="671.50"></text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::ParsedEntity::into_entity (1 samples, 0.01%)</title><rect x="41.0565%" y="645" width="0.0108%" height="15" fill="rgb(228,106,3)" fg:x="3785" fg:w="1"/><text x="41.3065%" y="655.50"></text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::ParsedPropertyInfoList::into_property_info_list (1 samples, 0.01%)</title><rect x="41.0565%" y="629" width="0.0108%" height="15" fill="rgb(209,23,37)" fg:x="3785" fg:w="1"/><text x="41.3065%" y="639.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="41.0565%" y="613" width="0.0108%" height="15" fill="rgb(241,93,50)" fg:x="3785" fg:w="1"/><text x="41.3065%" y="623.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="41.0565%" y="597" width="0.0108%" height="15" fill="rgb(253,46,43)" fg:x="3785" fg:w="1"/><text x="41.3065%" y="607.50"></text></g><g><title>stelpatch-benchmark`enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;::into_value (581 samples, 6.30%)</title><rect x="34.7760%" y="1045" width="6.3022%" height="15" fill="rgb(226,206,43)" fg:x="3206" fg:w="581"/><text x="35.0260%" y="1055.50">stelpatc..</text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::ParsedEntity::into_entity (498 samples, 5.40%)</title><rect x="35.6763%" y="1029" width="5.4019%" height="15" fill="rgb(217,54,7)" fg:x="3289" fg:w="498"/><text x="35.9263%" y="1039.50">stelpat..</text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::ParsedPropertyInfoList::into_property_info_list (317 samples, 3.44%)</title><rect x="37.6397%" y="1013" width="3.4386%" height="15" fill="rgb(223,5,52)" fg:x="3470" fg:w="317"/><text x="37.8897%" y="1023.50">ste..</text></g><g><title>stelpatch-benchmark`std::alloc::__default_lib_allocator::__rdl_alloc (1 samples, 0.01%)</title><rect x="41.0674%" y="997" width="0.0108%" height="15" fill="rgb(206,52,46)" fg:x="3786" fg:w="1"/><text x="41.3174%" y="1007.50"></text></g><g><title>stelpatch-benchmark`enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;::into_value (1,084 samples, 11.76%)</title><rect x="29.3307%" y="1093" width="11.7583%" height="15" fill="rgb(253,136,11)" fg:x="2704" fg:w="1084"/><text x="29.5807%" y="1103.50">stelpatch-benchma..</text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::ParsedEntity::into_entity (988 samples, 10.72%)</title><rect x="30.3721%" y="1077" width="10.7170%" height="15" fill="rgb(208,106,33)" fg:x="2800" fg:w="988"/><text x="30.6221%" y="1087.50">stelpatch-benchm..</text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::ParsedPropertyInfoList::into_property_info_list (748 samples, 8.11%)</title><rect x="32.9754%" y="1061" width="8.1137%" height="15" fill="rgb(206,54,4)" fg:x="3040" fg:w="748"/><text x="33.2254%" y="1071.50">stelpatch-b..</text></g><g><title>stelpatch-benchmark`std::alloc::__default_lib_allocator::__rdl_alloc (1 samples, 0.01%)</title><rect x="41.0782%" y="1045" width="0.0108%" height="15" fill="rgb(213,3,15)" fg:x="3787" fg:w="1"/><text x="41.3282%" y="1055.50"></text></g><g><title>stelpatch-benchmark`std::alloc::__default_lib_allocator::__rdl_alloc (1 samples, 0.01%)</title><rect x="41.0891%" y="1093" width="0.0108%" height="15" fill="rgb(252,211,39)" fg:x="3788" fg:w="1"/><text x="41.3391%" y="1103.50"></text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::ParsedModule::into_module (2,032 samples, 22.04%)</title><rect x="19.0693%" y="1221" width="22.0414%" height="15" fill="rgb(223,6,36)" fg:x="1758" fg:w="2032"/><text x="19.3193%" y="1231.50">stelpatch-benchmark`stelpatch::cw_p..</text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::ParsedPropertyInfoList::into_property_info_list (1,930 samples, 20.94%)</title><rect x="20.1757%" y="1205" width="20.9350%" height="15" fill="rgb(252,169,45)" fg:x="1860" fg:w="1930"/><text x="20.4257%" y="1215.50">stelpatch-benchmark`stelpatch::cw..</text></g><g><title>stelpatch-benchmark`enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;::into_value (1,905 samples, 20.66%)</title><rect x="20.4469%" y="1189" width="20.6638%" height="15" fill="rgb(212,48,26)" fg:x="1885" fg:w="1905"/><text x="20.6969%" y="1199.50">stelpatch-benchmark`enum2$&lt;stelpa..</text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::ParsedEntity::into_entity (1,903 samples, 20.64%)</title><rect x="20.4686%" y="1173" width="20.6422%" height="15" fill="rgb(251,102,48)" fg:x="1887" fg:w="1903"/><text x="20.7186%" y="1183.50">stelpatch-benchmark`stelpatch::c..</text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::ParsedPropertyInfoList::into_property_info_list (1,741 samples, 18.88%)</title><rect x="22.2258%" y="1157" width="18.8849%" height="15" fill="rgb(243,208,16)" fg:x="2049" fg:w="1741"/><text x="22.4758%" y="1167.50">stelpatch-benchmark`stelpatch:..</text></g><g><title>stelpatch-benchmark`enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;::into_value (1,576 samples, 17.10%)</title><rect x="24.0156%" y="1141" width="17.0951%" height="15" fill="rgb(219,96,24)" fg:x="2214" fg:w="1576"/><text x="24.2656%" y="1151.50">stelpatch-benchmark`enum2$..</text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::ParsedEntity::into_entity (1,487 samples, 16.13%)</title><rect x="24.9810%" y="1125" width="16.1297%" height="15" fill="rgb(219,33,29)" fg:x="2303" fg:w="1487"/><text x="25.2310%" y="1135.50">stelpatch-benchmark`stelp..</text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::ParsedPropertyInfoList::into_property_info_list (1,249 samples, 13.55%)</title><rect x="27.5626%" y="1109" width="13.5481%" height="15" fill="rgb(223,176,5)" fg:x="2541" fg:w="1249"/><text x="27.8126%" y="1119.50">stelpatch-benchmark`..</text></g><g><title>stelpatch-benchmark`std::alloc::__default_lib_allocator::__rdl_dealloc (1 samples, 0.01%)</title><rect x="41.0999%" y="1093" width="0.0108%" height="15" fill="rgb(228,140,14)" fg:x="3789" fg:w="1"/><text x="41.3499%" y="1103.50"></text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::ParsedModule::new (1 samples, 0.01%)</title><rect x="41.1107%" y="1221" width="0.0108%" height="15" fill="rgb(217,179,31)" fg:x="3790" fg:w="1"/><text x="41.3607%" y="1231.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="41.1107%" y="1205" width="0.0108%" height="15" fill="rgb(230,9,30)" fg:x="3790" fg:w="1"/><text x="41.3607%" y="1215.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="41.1107%" y="1189" width="0.0108%" height="15" fill="rgb(230,136,20)" fg:x="3790" fg:w="1"/><text x="41.3607%" y="1199.50"></text></g><g><title>VCRUNTIME140`memcpy (6 samples, 0.07%)</title><rect x="41.1758%" y="1205" width="0.0651%" height="15" fill="rgb(215,210,22)" fg:x="3796" fg:w="6"/><text x="41.4258%" y="1215.50"></text></g><g><title>ntdll`RtlAllocateHeap (7 samples, 0.08%)</title><rect x="41.2409%" y="1173" width="0.0759%" height="15" fill="rgb(218,43,5)" fg:x="3802" fg:w="7"/><text x="41.4909%" y="1183.50"></text></g><g><title>ntdll`RtlAllocateHeap (6 samples, 0.07%)</title><rect x="41.2518%" y="1157" width="0.0651%" height="15" fill="rgb(216,11,5)" fg:x="3803" fg:w="6"/><text x="41.5018%" y="1167.50"></text></g><g><title>ntdll`RtlCreateTimer (1 samples, 0.01%)</title><rect x="41.3060%" y="1141" width="0.0108%" height="15" fill="rgb(209,82,29)" fg:x="3808" fg:w="1"/><text x="41.5560%" y="1151.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.01%)</title><rect x="41.3277%" y="1093" width="0.0108%" height="15" fill="rgb(244,115,12)" fg:x="3810" fg:w="1"/><text x="41.5777%" y="1103.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.01%)</title><rect x="41.3277%" y="1077" width="0.0108%" height="15" fill="rgb(222,82,18)" fg:x="3810" fg:w="1"/><text x="41.5777%" y="1087.50"></text></g><g><title>ntdll`RtlSetUserValueHeap (2 samples, 0.02%)</title><rect x="41.3385%" y="1093" width="0.0217%" height="15" fill="rgb(249,227,8)" fg:x="3811" fg:w="2"/><text x="41.5885%" y="1103.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.01%)</title><rect x="41.3602%" y="1093" width="0.0108%" height="15" fill="rgb(253,141,45)" fg:x="3813" fg:w="1"/><text x="41.6102%" y="1103.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.01%)</title><rect x="41.3602%" y="1077" width="0.0108%" height="15" fill="rgb(234,184,4)" fg:x="3813" fg:w="1"/><text x="41.6102%" y="1087.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="41.3602%" y="1061" width="0.0108%" height="15" fill="rgb(218,194,23)" fg:x="3813" fg:w="1"/><text x="41.6102%" y="1071.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="41.3602%" y="1045" width="0.0108%" height="15" fill="rgb(235,66,41)" fg:x="3813" fg:w="1"/><text x="41.6102%" y="1055.50"></text></g><g><title>ntdll`RtlAllocateHeap (6 samples, 0.07%)</title><rect x="41.3168%" y="1125" width="0.0651%" height="15" fill="rgb(245,217,1)" fg:x="3809" fg:w="6"/><text x="41.5668%" y="1135.50"></text></g><g><title>ntdll`RtlAllocateHeap (6 samples, 0.07%)</title><rect x="41.3168%" y="1109" width="0.0651%" height="15" fill="rgb(229,91,1)" fg:x="3809" fg:w="6"/><text x="41.5668%" y="1119.50"></text></g><g><title>ntdll`memset (1 samples, 0.01%)</title><rect x="41.3711%" y="1093" width="0.0108%" height="15" fill="rgb(207,101,30)" fg:x="3814" fg:w="1"/><text x="41.6211%" y="1103.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::RawVec&lt;stelpatch::cw_model::PropertyInfo,alloc::alloc::Global&gt;::reserve_for_push (14 samples, 0.15%)</title><rect x="41.2409%" y="1205" width="0.1519%" height="15" fill="rgb(223,82,49)" fg:x="3802" fg:w="14"/><text x="41.4909%" y="1215.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::finish_grow (14 samples, 0.15%)</title><rect x="41.2409%" y="1189" width="0.1519%" height="15" fill="rgb(218,167,17)" fg:x="3802" fg:w="14"/><text x="41.4909%" y="1199.50"></text></g><g><title>ntdll`RtlReAllocateHeap (7 samples, 0.08%)</title><rect x="41.3168%" y="1173" width="0.0759%" height="15" fill="rgb(208,103,14)" fg:x="3809" fg:w="7"/><text x="41.5668%" y="1183.50"></text></g><g><title>ntdll`RtlReAllocateHeap (7 samples, 0.08%)</title><rect x="41.3168%" y="1157" width="0.0759%" height="15" fill="rgb(238,20,8)" fg:x="3809" fg:w="7"/><text x="41.5668%" y="1167.50"></text></g><g><title>ntdll`RtlReleaseSRWLockShared (7 samples, 0.08%)</title><rect x="41.3168%" y="1141" width="0.0759%" height="15" fill="rgb(218,80,54)" fg:x="3809" fg:w="7"/><text x="41.5668%" y="1151.50"></text></g><g><title>ntdll`RtlFreeHeap (1 samples, 0.01%)</title><rect x="41.3819%" y="1125" width="0.0108%" height="15" fill="rgb(240,144,17)" fg:x="3815" fg:w="1"/><text x="41.6319%" y="1135.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.01%)</title><rect x="41.3819%" y="1109" width="0.0108%" height="15" fill="rgb(245,27,50)" fg:x="3815" fg:w="1"/><text x="41.6319%" y="1119.50"></text></g><g><title>VCRUNTIME140`memcpy (1 samples, 0.01%)</title><rect x="41.4145%" y="1157" width="0.0108%" height="15" fill="rgb(251,51,7)" fg:x="3818" fg:w="1"/><text x="41.6645%" y="1167.50"></text></g><g><title>ntdll`RtlCreateTimer (1 samples, 0.01%)</title><rect x="41.4579%" y="1125" width="0.0108%" height="15" fill="rgb(245,217,29)" fg:x="3822" fg:w="1"/><text x="41.7079%" y="1135.50"></text></g><g><title>ntdll`RtlAllocateHeap (5 samples, 0.05%)</title><rect x="41.4253%" y="1157" width="0.0542%" height="15" fill="rgb(221,176,29)" fg:x="3819" fg:w="5"/><text x="41.6753%" y="1167.50"></text></g><g><title>ntdll`RtlAllocateHeap (4 samples, 0.04%)</title><rect x="41.4362%" y="1141" width="0.0434%" height="15" fill="rgb(212,180,24)" fg:x="3820" fg:w="4"/><text x="41.6862%" y="1151.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.01%)</title><rect x="41.4687%" y="1125" width="0.0108%" height="15" fill="rgb(254,24,2)" fg:x="3823" fg:w="1"/><text x="41.7187%" y="1135.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.01%)</title><rect x="41.4687%" y="1109" width="0.0108%" height="15" fill="rgb(230,100,2)" fg:x="3823" fg:w="1"/><text x="41.7187%" y="1119.50"></text></g><g><title>ntdll`NtAllocateVirtualMemory (1 samples, 0.01%)</title><rect x="41.4687%" y="1093" width="0.0108%" height="15" fill="rgb(219,142,25)" fg:x="3823" fg:w="1"/><text x="41.7187%" y="1103.50"></text></g><g><title>stelpatch-benchmark`hashbrown::map::HashMap&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::insert&lt;ref$&lt;str$&gt;,enum2$ (9 samples, 0.10%)</title><rect x="41.3928%" y="1205" width="0.0976%" height="15" fill="rgb(240,73,43)" fg:x="3816" fg:w="9"/><text x="41.6428%" y="1215.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; &gt;,alloc::alloc::Global&gt;::insert&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$ (9 samples, 0.10%)</title><rect x="41.3928%" y="1189" width="0.0976%" height="15" fill="rgb(214,114,15)" fg:x="3816" fg:w="9"/><text x="41.6428%" y="1199.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; &gt;,alloc::alloc::Global&gt;::reserve_rehash&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$ (7 samples, 0.08%)</title><rect x="41.4145%" y="1173" width="0.0759%" height="15" fill="rgb(207,130,4)" fg:x="3818" fg:w="7"/><text x="41.6645%" y="1183.50"></text></g><g><title>ntdll`RtlFreeHeap (1 samples, 0.01%)</title><rect x="41.4796%" y="1157" width="0.0108%" height="15" fill="rgb(221,25,40)" fg:x="3824" fg:w="1"/><text x="41.7296%" y="1167.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.01%)</title><rect x="41.4796%" y="1141" width="0.0108%" height="15" fill="rgb(241,184,7)" fg:x="3824" fg:w="1"/><text x="41.7296%" y="1151.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.01%)</title><rect x="41.4796%" y="1125" width="0.0108%" height="15" fill="rgb(235,159,4)" fg:x="3824" fg:w="1"/><text x="41.7296%" y="1135.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState,ref$&lt;ref$ (7 samples, 0.08%)</title><rect x="41.5012%" y="1189" width="0.0759%" height="15" fill="rgb(214,87,48)" fg:x="3826" fg:w="7"/><text x="41.7512%" y="1199.50"></text></g><g><title>stelpatch-benchmark`core::hash::sip::impl$5::write (6 samples, 0.07%)</title><rect x="41.5121%" y="1173" width="0.0651%" height="15" fill="rgb(246,198,24)" fg:x="3827" fg:w="6"/><text x="41.7621%" y="1183.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.02%)</title><rect x="41.5880%" y="1173" width="0.0217%" height="15" fill="rgb(209,66,40)" fg:x="3834" fg:w="2"/><text x="41.8380%" y="1183.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.02%)</title><rect x="41.5880%" y="1157" width="0.0217%" height="15" fill="rgb(233,147,39)" fg:x="3834" fg:w="2"/><text x="41.8380%" y="1167.50"></text></g><g><title>stelpatch-benchmark`hashbrown::map::HashMap&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedPropertyInfoList,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::rustc_entry&lt;ref$ (15 samples, 0.16%)</title><rect x="41.4904%" y="1205" width="0.1627%" height="15" fill="rgb(231,145,52)" fg:x="3825" fg:w="15"/><text x="41.7404%" y="1215.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedPropertyInfoList&gt;,alloc::alloc::Global&gt;::reserve_rehash&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedPropertyInfoList&gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;ref$&lt;str$&gt;,ref$ (7 samples, 0.08%)</title><rect x="41.5772%" y="1189" width="0.0759%" height="15" fill="rgb(206,20,26)" fg:x="3833" fg:w="7"/><text x="41.8272%" y="1199.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState,ref$&lt;ref$ (4 samples, 0.04%)</title><rect x="41.6097%" y="1173" width="0.0434%" height="15" fill="rgb(238,220,4)" fg:x="3836" fg:w="4"/><text x="41.8597%" y="1183.50"></text></g><g><title>stelpatch-benchmark`core::hash::sip::impl$5::write (2 samples, 0.02%)</title><rect x="41.6314%" y="1157" width="0.0217%" height="15" fill="rgb(252,195,42)" fg:x="3838" fg:w="2"/><text x="41.8814%" y="1167.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (7 samples, 0.08%)</title><rect x="41.6640%" y="1189" width="0.0759%" height="15" fill="rgb(209,10,6)" fg:x="3841" fg:w="7"/><text x="41.9140%" y="1199.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::bytes::complete::is_not::closure$0::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (6 samples, 0.07%)</title><rect x="41.6748%" y="1173" width="0.0651%" height="15" fill="rgb(229,3,52)" fg:x="3842" fg:w="6"/><text x="41.9248%" y="1183.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$32::find_token (5 samples, 0.05%)</title><rect x="41.6856%" y="1157" width="0.0542%" height="15" fill="rgb(253,49,37)" fg:x="3843" fg:w="5"/><text x="41.9356%" y="1167.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (9 samples, 0.10%)</title><rect x="41.6531%" y="1205" width="0.0976%" height="15" fill="rgb(240,103,49)" fg:x="3840" fg:w="9"/><text x="41.9031%" y="1215.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="41.7399%" y="1189" width="0.0108%" height="15" fill="rgb(250,182,30)" fg:x="3848" fg:w="1"/><text x="41.9899%" y="1199.50"></text></g><g><title>VCRUNTIME140`memcpy (11 samples, 0.12%)</title><rect x="41.8050%" y="1189" width="0.1193%" height="15" fill="rgb(248,8,30)" fg:x="3854" fg:w="11"/><text x="42.0550%" y="1199.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="41.9351%" y="1157" width="0.0108%" height="15" fill="rgb(237,120,30)" fg:x="3866" fg:w="1"/><text x="42.1851%" y="1167.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="41.9351%" y="1141" width="0.0108%" height="15" fill="rgb(221,146,34)" fg:x="3866" fg:w="1"/><text x="42.1851%" y="1151.50"></text></g><g><title>ntdll`RtlCreateTimer (3 samples, 0.03%)</title><rect x="41.9785%" y="1077" width="0.0325%" height="15" fill="rgb(242,55,13)" fg:x="3870" fg:w="3"/><text x="42.2285%" y="1087.50"></text></g><g><title>ntdll`RtlCreateTimer (1 samples, 0.01%)</title><rect x="42.0002%" y="1061" width="0.0108%" height="15" fill="rgb(242,112,31)" fg:x="3872" fg:w="1"/><text x="42.2502%" y="1071.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.01%)</title><rect x="42.0111%" y="1077" width="0.0108%" height="15" fill="rgb(249,192,27)" fg:x="3873" fg:w="1"/><text x="42.2611%" y="1087.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.01%)</title><rect x="42.0111%" y="1061" width="0.0108%" height="15" fill="rgb(208,204,44)" fg:x="3873" fg:w="1"/><text x="42.2611%" y="1071.50"></text></g><g><title>ntdll`NtAllocateVirtualMemory (1 samples, 0.01%)</title><rect x="42.0111%" y="1045" width="0.0108%" height="15" fill="rgb(208,93,54)" fg:x="3873" fg:w="1"/><text x="42.2611%" y="1055.50"></text></g><g><title>ntdll`RtlAllocateHeap (9 samples, 0.10%)</title><rect x="41.9568%" y="1109" width="0.0976%" height="15" fill="rgb(242,1,31)" fg:x="3868" fg:w="9"/><text x="42.2068%" y="1119.50"></text></g><g><title>ntdll`RtlAllocateHeap (8 samples, 0.09%)</title><rect x="41.9677%" y="1093" width="0.0868%" height="15" fill="rgb(241,83,25)" fg:x="3869" fg:w="8"/><text x="42.2177%" y="1103.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (3 samples, 0.03%)</title><rect x="42.0219%" y="1077" width="0.0325%" height="15" fill="rgb(205,169,50)" fg:x="3874" fg:w="3"/><text x="42.2719%" y="1087.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (3 samples, 0.03%)</title><rect x="42.0219%" y="1061" width="0.0325%" height="15" fill="rgb(239,186,37)" fg:x="3874" fg:w="3"/><text x="42.2719%" y="1071.50"></text></g><g><title>ntdll`RtlAllocateHeap (3 samples, 0.03%)</title><rect x="42.0219%" y="1045" width="0.0325%" height="15" fill="rgb(205,221,10)" fg:x="3874" fg:w="3"/><text x="42.2719%" y="1055.50"></text></g><g><title>ntdll`RtlAllocateHeap (3 samples, 0.03%)</title><rect x="42.0219%" y="1029" width="0.0325%" height="15" fill="rgb(218,196,15)" fg:x="3874" fg:w="3"/><text x="42.2719%" y="1039.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.01%)</title><rect x="42.0436%" y="1013" width="0.0108%" height="15" fill="rgb(218,196,35)" fg:x="3876" fg:w="1"/><text x="42.2936%" y="1023.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.01%)</title><rect x="42.0436%" y="997" width="0.0108%" height="15" fill="rgb(233,63,24)" fg:x="3876" fg:w="1"/><text x="42.2936%" y="1007.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.01%)</title><rect x="42.0436%" y="981" width="0.0108%" height="15" fill="rgb(225,8,4)" fg:x="3876" fg:w="1"/><text x="42.2936%" y="991.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (2 samples, 0.02%)</title><rect x="42.0545%" y="1093" width="0.0217%" height="15" fill="rgb(234,105,35)" fg:x="3877" fg:w="2"/><text x="42.3045%" y="1103.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (2 samples, 0.02%)</title><rect x="42.0545%" y="1077" width="0.0217%" height="15" fill="rgb(236,21,32)" fg:x="3877" fg:w="2"/><text x="42.3045%" y="1087.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (2 samples, 0.02%)</title><rect x="42.0545%" y="1061" width="0.0217%" height="15" fill="rgb(228,109,6)" fg:x="3877" fg:w="2"/><text x="42.3045%" y="1071.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.01%)</title><rect x="42.0653%" y="1045" width="0.0108%" height="15" fill="rgb(229,215,31)" fg:x="3878" fg:w="1"/><text x="42.3153%" y="1055.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.01%)</title><rect x="42.0653%" y="1029" width="0.0108%" height="15" fill="rgb(221,52,54)" fg:x="3878" fg:w="1"/><text x="42.3153%" y="1039.50"></text></g><g><title>ntdll`RtlFreeHeap (3 samples, 0.03%)</title><rect x="42.0545%" y="1109" width="0.0325%" height="15" fill="rgb(252,129,43)" fg:x="3877" fg:w="3"/><text x="42.3045%" y="1119.50"></text></g><g><title>ntdll`memset (1 samples, 0.01%)</title><rect x="42.0761%" y="1093" width="0.0108%" height="15" fill="rgb(248,183,27)" fg:x="3879" fg:w="1"/><text x="42.3261%" y="1103.50"></text></g><g><title>ntdll`RtlReAllocateHeap (18 samples, 0.20%)</title><rect x="41.9460%" y="1157" width="0.1952%" height="15" fill="rgb(250,0,22)" fg:x="3867" fg:w="18"/><text x="42.1960%" y="1167.50"></text></g><g><title>ntdll`RtlReAllocateHeap (18 samples, 0.20%)</title><rect x="41.9460%" y="1141" width="0.1952%" height="15" fill="rgb(213,166,10)" fg:x="3867" fg:w="18"/><text x="42.1960%" y="1151.50"></text></g><g><title>ntdll`RtlReleaseSRWLockShared (18 samples, 0.20%)</title><rect x="41.9460%" y="1125" width="0.1952%" height="15" fill="rgb(207,163,36)" fg:x="3867" fg:w="18"/><text x="42.1960%" y="1135.50"></text></g><g><title>ntdll`memcpy (5 samples, 0.05%)</title><rect x="42.0870%" y="1109" width="0.0542%" height="15" fill="rgb(208,122,22)" fg:x="3880" fg:w="5"/><text x="42.3370%" y="1119.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::RawVec&lt;enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,alloc::alloc::Global&gt;::reserve_for_push&lt;enum2$ (22 samples, 0.24%)</title><rect x="41.9243%" y="1189" width="0.2386%" height="15" fill="rgb(207,104,49)" fg:x="3865" fg:w="22"/><text x="42.1743%" y="1199.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::finish_grow (22 samples, 0.24%)</title><rect x="41.9243%" y="1173" width="0.2386%" height="15" fill="rgb(248,211,50)" fg:x="3865" fg:w="22"/><text x="42.1743%" y="1183.50"></text></g><g><title>stelpatch-benchmark`std::alloc::__default_lib_allocator::__rdl_realloc (2 samples, 0.02%)</title><rect x="42.1412%" y="1157" width="0.0217%" height="15" fill="rgb(217,13,45)" fg:x="3885" fg:w="2"/><text x="42.3912%" y="1167.50"></text></g><g><title>VCRUNTIME140`memcpy (5 samples, 0.05%)</title><rect x="42.1846%" y="1173" width="0.0542%" height="15" fill="rgb(211,216,49)" fg:x="3889" fg:w="5"/><text x="42.4346%" y="1183.50"></text></g><g><title>stelpatch-benchmark`memcpy (1 samples, 0.01%)</title><rect x="42.2389%" y="1173" width="0.0108%" height="15" fill="rgb(221,58,53)" fg:x="3894" fg:w="1"/><text x="42.4889%" y="1183.50"></text></g><g><title>VCRUNTIME140`memcpy (6 samples, 0.07%)</title><rect x="42.3148%" y="1157" width="0.0651%" height="15" fill="rgb(220,112,41)" fg:x="3901" fg:w="6"/><text x="42.5648%" y="1167.50"></text></g><g><title>VCRUNTIME140`memcpy (31 samples, 0.34%)</title><rect x="42.6077%" y="1109" width="0.3363%" height="15" fill="rgb(236,38,28)" fg:x="3928" fg:w="31"/><text x="42.8577%" y="1119.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.01%)</title><rect x="42.9548%" y="1093" width="0.0108%" height="15" fill="rgb(227,195,22)" fg:x="3960" fg:w="1"/><text x="43.2048%" y="1103.50"></text></g><g><title>ntdll`RtlFreeHeap (5 samples, 0.05%)</title><rect x="42.9439%" y="1109" width="0.0542%" height="15" fill="rgb(214,55,33)" fg:x="3959" fg:w="5"/><text x="43.1939%" y="1119.50"></text></g><g><title>ntdll`memset (3 samples, 0.03%)</title><rect x="42.9656%" y="1093" width="0.0325%" height="15" fill="rgb(248,80,13)" fg:x="3961" fg:w="3"/><text x="43.2156%" y="1103.50"></text></g><g><title>ntdll`RtlDeleteBoundaryDescriptor (1 samples, 0.01%)</title><rect x="42.9873%" y="1077" width="0.0108%" height="15" fill="rgb(238,52,6)" fg:x="3963" fg:w="1"/><text x="43.2373%" y="1087.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::RawVec&lt;enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,alloc::alloc::Global&gt;::reserve_for_push&lt;enum2$ (1 samples, 0.01%)</title><rect x="42.9982%" y="1109" width="0.0108%" height="15" fill="rgb(224,198,47)" fg:x="3964" fg:w="1"/><text x="43.2482%" y="1119.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="42.9982%" y="1093" width="0.0108%" height="15" fill="rgb(233,171,20)" fg:x="3964" fg:w="1"/><text x="43.2482%" y="1103.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="42.9982%" y="1077" width="0.0108%" height="15" fill="rgb(241,30,25)" fg:x="3964" fg:w="1"/><text x="43.2482%" y="1087.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="42.9982%" y="1061" width="0.0108%" height="15" fill="rgb(207,171,38)" fg:x="3964" fg:w="1"/><text x="43.2482%" y="1071.50"></text></g><g><title>ntdll`RtlCreateTimer (7 samples, 0.08%)</title><rect x="43.9310%" y="1045" width="0.0759%" height="15" fill="rgb(234,70,1)" fg:x="4050" fg:w="7"/><text x="44.1810%" y="1055.50"></text></g><g><title>ntdll`RtlSetUserValueHeap (1 samples, 0.01%)</title><rect x="44.0069%" y="1045" width="0.0108%" height="15" fill="rgb(232,178,18)" fg:x="4057" fg:w="1"/><text x="44.2569%" y="1055.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.01%)</title><rect x="44.0178%" y="1045" width="0.0108%" height="15" fill="rgb(241,78,40)" fg:x="4058" fg:w="1"/><text x="44.2678%" y="1055.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.01%)</title><rect x="44.0178%" y="1029" width="0.0108%" height="15" fill="rgb(222,35,25)" fg:x="4058" fg:w="1"/><text x="44.2678%" y="1039.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="44.0178%" y="1013" width="0.0108%" height="15" fill="rgb(207,92,16)" fg:x="4058" fg:w="1"/><text x="44.2678%" y="1023.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="44.0178%" y="997" width="0.0108%" height="15" fill="rgb(216,59,51)" fg:x="4058" fg:w="1"/><text x="44.2678%" y="1007.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.01%)</title><rect x="44.0178%" y="981" width="0.0108%" height="15" fill="rgb(213,80,28)" fg:x="4058" fg:w="1"/><text x="44.2678%" y="991.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.01%)</title><rect x="44.0178%" y="965" width="0.0108%" height="15" fill="rgb(220,93,7)" fg:x="4058" fg:w="1"/><text x="44.2678%" y="975.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.01%)</title><rect x="44.0178%" y="949" width="0.0108%" height="15" fill="rgb(225,24,44)" fg:x="4058" fg:w="1"/><text x="44.2678%" y="959.50"></text></g><g><title>ntdll`RtlAllocateHeap (85 samples, 0.92%)</title><rect x="43.1175%" y="1077" width="0.9220%" height="15" fill="rgb(243,74,40)" fg:x="3975" fg:w="85"/><text x="43.3675%" y="1087.50"></text></g><g><title>ntdll`RtlAllocateHeap (67 samples, 0.73%)</title><rect x="43.3127%" y="1061" width="0.7268%" height="15" fill="rgb(228,39,7)" fg:x="3993" fg:w="67"/><text x="43.5627%" y="1071.50"></text></g><g><title>ntdll`memset (1 samples, 0.01%)</title><rect x="44.0286%" y="1045" width="0.0108%" height="15" fill="rgb(227,79,8)" fg:x="4059" fg:w="1"/><text x="44.2786%" y="1055.50"></text></g><g><title>ntdll`RtlReAllocateHeap (3 samples, 0.03%)</title><rect x="44.0395%" y="1077" width="0.0325%" height="15" fill="rgb(236,58,11)" fg:x="4060" fg:w="3"/><text x="44.2895%" y="1087.50"></text></g><g><title>ntdll`RtlReAllocateHeap (3 samples, 0.03%)</title><rect x="44.0395%" y="1061" width="0.0325%" height="15" fill="rgb(249,63,35)" fg:x="4060" fg:w="3"/><text x="44.2895%" y="1071.50"></text></g><g><title>ntdll`RtlReleaseSRWLockShared (2 samples, 0.02%)</title><rect x="44.0503%" y="1045" width="0.0217%" height="15" fill="rgb(252,114,16)" fg:x="4061" fg:w="2"/><text x="44.3003%" y="1055.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.02%)</title><rect x="44.0503%" y="1029" width="0.0217%" height="15" fill="rgb(254,151,24)" fg:x="4061" fg:w="2"/><text x="44.3003%" y="1039.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.02%)</title><rect x="44.0503%" y="1013" width="0.0217%" height="15" fill="rgb(253,54,39)" fg:x="4061" fg:w="2"/><text x="44.3003%" y="1023.50"></text></g><g><title>stelpatch-benchmark`_rust_alloc (1 samples, 0.01%)</title><rect x="44.0720%" y="1077" width="0.0108%" height="15" fill="rgb(243,25,45)" fg:x="4063" fg:w="1"/><text x="44.3220%" y="1087.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::RawVec&lt;stelpatch::cw_model::PropertyInfo,alloc::alloc::Global&gt;::reserve_for_push (101 samples, 1.10%)</title><rect x="43.0090%" y="1109" width="1.0956%" height="15" fill="rgb(234,134,9)" fg:x="3965" fg:w="101"/><text x="43.2590%" y="1119.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::finish_grow (95 samples, 1.03%)</title><rect x="43.0741%" y="1093" width="1.0305%" height="15" fill="rgb(227,166,31)" fg:x="3971" fg:w="95"/><text x="43.3241%" y="1103.50"></text></g><g><title>stelpatch-benchmark`std::alloc::__default_lib_allocator::__rdl_alloc (2 samples, 0.02%)</title><rect x="44.0829%" y="1077" width="0.0217%" height="15" fill="rgb(245,143,41)" fg:x="4064" fg:w="2"/><text x="44.3329%" y="1087.50"></text></g><g><title>VCRUNTIME140`memcmp (1 samples, 0.01%)</title><rect x="44.1805%" y="1093" width="0.0108%" height="15" fill="rgb(238,181,32)" fg:x="4073" fg:w="1"/><text x="44.4305%" y="1103.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState,ref$&lt;ref$ (19 samples, 0.21%)</title><rect x="44.1913%" y="1093" width="0.2061%" height="15" fill="rgb(224,113,18)" fg:x="4074" fg:w="19"/><text x="44.4413%" y="1103.50"></text></g><g><title>stelpatch-benchmark`core::hash::sip::impl$5::write (8 samples, 0.09%)</title><rect x="44.3107%" y="1077" width="0.0868%" height="15" fill="rgb(240,229,28)" fg:x="4085" fg:w="8"/><text x="44.5607%" y="1087.50"></text></g><g><title>VCRUNTIME140`memset (1 samples, 0.01%)</title><rect x="44.4842%" y="1077" width="0.0108%" height="15" fill="rgb(250,185,3)" fg:x="4101" fg:w="1"/><text x="44.7342%" y="1087.50"></text></g><g><title>ntdll`RtlCreateTimer (4 samples, 0.04%)</title><rect x="44.7229%" y="1045" width="0.0434%" height="15" fill="rgb(212,59,25)" fg:x="4123" fg:w="4"/><text x="44.9729%" y="1055.50"></text></g><g><title>ntdll`RtlCreateTimer (1 samples, 0.01%)</title><rect x="44.7554%" y="1029" width="0.0108%" height="15" fill="rgb(221,87,20)" fg:x="4126" fg:w="1"/><text x="45.0054%" y="1039.50"></text></g><g><title>ntdll`RtlSetUserValueHeap (4 samples, 0.04%)</title><rect x="44.7662%" y="1045" width="0.0434%" height="15" fill="rgb(213,74,28)" fg:x="4127" fg:w="4"/><text x="45.0162%" y="1055.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.01%)</title><rect x="44.8096%" y="1045" width="0.0108%" height="15" fill="rgb(224,132,34)" fg:x="4131" fg:w="1"/><text x="45.0596%" y="1055.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.01%)</title><rect x="44.8096%" y="1029" width="0.0108%" height="15" fill="rgb(222,101,24)" fg:x="4131" fg:w="1"/><text x="45.0596%" y="1039.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="44.8096%" y="1013" width="0.0108%" height="15" fill="rgb(254,142,4)" fg:x="4131" fg:w="1"/><text x="45.0596%" y="1023.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="44.8096%" y="997" width="0.0108%" height="15" fill="rgb(230,229,49)" fg:x="4131" fg:w="1"/><text x="45.0596%" y="1007.50"></text></g><g><title>ntdll`RtlAllocateHeap (31 samples, 0.34%)</title><rect x="44.4951%" y="1077" width="0.3363%" height="15" fill="rgb(238,70,47)" fg:x="4102" fg:w="31"/><text x="44.7451%" y="1087.50"></text></g><g><title>ntdll`RtlAllocateHeap (27 samples, 0.29%)</title><rect x="44.5385%" y="1061" width="0.2929%" height="15" fill="rgb(231,160,17)" fg:x="4106" fg:w="27"/><text x="44.7885%" y="1071.50"></text></g><g><title>ntdll`memset (1 samples, 0.01%)</title><rect x="44.8205%" y="1045" width="0.0108%" height="15" fill="rgb(218,68,53)" fg:x="4132" fg:w="1"/><text x="45.0705%" y="1055.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (2 samples, 0.02%)</title><rect x="44.8313%" y="1061" width="0.0217%" height="15" fill="rgb(236,111,10)" fg:x="4133" fg:w="2"/><text x="45.0813%" y="1071.50"></text></g><g><title>ntdll`RtlFreeHeap (1 samples, 0.01%)</title><rect x="44.8422%" y="1045" width="0.0108%" height="15" fill="rgb(224,34,41)" fg:x="4134" fg:w="1"/><text x="45.0922%" y="1055.50"></text></g><g><title>ntdll`RtlFreeHeap (5 samples, 0.05%)</title><rect x="44.8313%" y="1077" width="0.0542%" height="15" fill="rgb(241,118,19)" fg:x="4133" fg:w="5"/><text x="45.0813%" y="1087.50"></text></g><g><title>ntdll`memset (3 samples, 0.03%)</title><rect x="44.8530%" y="1061" width="0.0325%" height="15" fill="rgb(238,129,25)" fg:x="4135" fg:w="3"/><text x="45.1030%" y="1071.50"></text></g><g><title>stelpatch-benchmark`_rust_alloc (1 samples, 0.01%)</title><rect x="44.8856%" y="1077" width="0.0108%" height="15" fill="rgb(238,22,31)" fg:x="4138" fg:w="1"/><text x="45.1356%" y="1087.50"></text></g><g><title>stelpatch-benchmark`hashbrown::map::HashMap&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedPropertyInfoList,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::rustc_entry&lt;ref$ (87 samples, 0.94%)</title><rect x="44.1046%" y="1109" width="0.9437%" height="15" fill="rgb(222,174,48)" fg:x="4066" fg:w="87"/><text x="44.3546%" y="1119.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedPropertyInfoList&gt;,alloc::alloc::Global&gt;::reserve_rehash&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedPropertyInfoList&gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;ref$&lt;str$&gt;,ref$ (60 samples, 0.65%)</title><rect x="44.3974%" y="1093" width="0.6508%" height="15" fill="rgb(206,152,40)" fg:x="4093" fg:w="60"/><text x="44.6474%" y="1103.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState,ref$&lt;ref$ (14 samples, 0.15%)</title><rect x="44.8964%" y="1077" width="0.1519%" height="15" fill="rgb(218,99,54)" fg:x="4139" fg:w="14"/><text x="45.1464%" y="1087.50"></text></g><g><title>stelpatch-benchmark`core::hash::sip::impl$5::write (9 samples, 0.10%)</title><rect x="44.9506%" y="1061" width="0.0976%" height="15" fill="rgb(220,174,26)" fg:x="4144" fg:w="9"/><text x="45.2006%" y="1071.50"></text></g><g><title>VCRUNTIME140`memcpy (77 samples, 0.84%)</title><rect x="45.1025%" y="1093" width="0.8352%" height="15" fill="rgb(245,116,9)" fg:x="4158" fg:w="77"/><text x="45.3525%" y="1103.50"></text></g><g><title>ntdll`RtlAllocateHeap (9 samples, 0.10%)</title><rect x="45.9594%" y="1061" width="0.0976%" height="15" fill="rgb(209,72,35)" fg:x="4237" fg:w="9"/><text x="46.2094%" y="1071.50"></text></g><g><title>ntdll`RtlAllocateHeap (5 samples, 0.05%)</title><rect x="46.0028%" y="1045" width="0.0542%" height="15" fill="rgb(226,126,21)" fg:x="4241" fg:w="5"/><text x="46.2528%" y="1055.50"></text></g><g><title>ntdll`RtlSetUserValueHeap (3 samples, 0.03%)</title><rect x="46.0245%" y="1029" width="0.0325%" height="15" fill="rgb(227,192,1)" fg:x="4243" fg:w="3"/><text x="46.2745%" y="1039.50"></text></g><g><title>ntdll`RtlFreeHeap (1 samples, 0.01%)</title><rect x="46.1113%" y="1029" width="0.0108%" height="15" fill="rgb(237,180,29)" fg:x="4251" fg:w="1"/><text x="46.3613%" y="1039.50"></text></g><g><title>ntdll`RtlCreateTimer (8 samples, 0.09%)</title><rect x="46.3174%" y="981" width="0.0868%" height="15" fill="rgb(230,197,35)" fg:x="4270" fg:w="8"/><text x="46.5674%" y="991.50"></text></g><g><title>ntdll`memset (1 samples, 0.01%)</title><rect x="46.3933%" y="965" width="0.0108%" height="15" fill="rgb(246,193,31)" fg:x="4277" fg:w="1"/><text x="46.6433%" y="975.50"></text></g><g><title>ntdll`RtlSetUserValueHeap (2 samples, 0.02%)</title><rect x="46.4042%" y="981" width="0.0217%" height="15" fill="rgb(241,36,4)" fg:x="4278" fg:w="2"/><text x="46.6542%" y="991.50"></text></g><g><title>ntdll`RtlAllocateHeap (21 samples, 0.23%)</title><rect x="46.2089%" y="1013" width="0.2278%" height="15" fill="rgb(241,130,17)" fg:x="4260" fg:w="21"/><text x="46.4589%" y="1023.50"></text></g><g><title>ntdll`RtlAllocateHeap (18 samples, 0.20%)</title><rect x="46.2415%" y="997" width="0.1952%" height="15" fill="rgb(206,137,32)" fg:x="4263" fg:w="18"/><text x="46.4915%" y="1007.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.01%)</title><rect x="46.4259%" y="981" width="0.0108%" height="15" fill="rgb(237,228,51)" fg:x="4280" fg:w="1"/><text x="46.6759%" y="991.50"></text></g><g><title>ntdll`RtlFreeHeap (1 samples, 0.01%)</title><rect x="46.4367%" y="1013" width="0.0108%" height="15" fill="rgb(243,6,42)" fg:x="4281" fg:w="1"/><text x="46.6867%" y="1023.50"></text></g><g><title>ntdll`memset (1 samples, 0.01%)</title><rect x="46.4367%" y="997" width="0.0108%" height="15" fill="rgb(251,74,28)" fg:x="4281" fg:w="1"/><text x="46.6867%" y="1007.50"></text></g><g><title>ntdll`RtlDeleteBoundaryDescriptor (1 samples, 0.01%)</title><rect x="46.4367%" y="981" width="0.0108%" height="15" fill="rgb(218,20,49)" fg:x="4281" fg:w="1"/><text x="46.6867%" y="991.50"></text></g><g><title>ntdll`RtlReleaseSRWLockShared (36 samples, 0.39%)</title><rect x="46.1221%" y="1029" width="0.3905%" height="15" fill="rgb(238,28,14)" fg:x="4252" fg:w="36"/><text x="46.3721%" y="1039.50"></text></g><g><title>ntdll`memcpy (6 samples, 0.07%)</title><rect x="46.4476%" y="1013" width="0.0651%" height="15" fill="rgb(229,40,46)" fg:x="4282" fg:w="6"/><text x="46.6976%" y="1023.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::RawVec&lt;enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,alloc::alloc::Global&gt;::reserve_for_push&lt;enum2$ (55 samples, 0.60%)</title><rect x="45.9377%" y="1093" width="0.5966%" height="15" fill="rgb(244,195,20)" fg:x="4235" fg:w="55"/><text x="46.1877%" y="1103.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::finish_grow (53 samples, 0.57%)</title><rect x="45.9594%" y="1077" width="0.5749%" height="15" fill="rgb(253,56,35)" fg:x="4237" fg:w="53"/><text x="46.2094%" y="1087.50"></text></g><g><title>ntdll`RtlReAllocateHeap (44 samples, 0.48%)</title><rect x="46.0571%" y="1061" width="0.4773%" height="15" fill="rgb(210,149,44)" fg:x="4246" fg:w="44"/><text x="46.3071%" y="1071.50"></text></g><g><title>ntdll`RtlReAllocateHeap (42 samples, 0.46%)</title><rect x="46.0788%" y="1045" width="0.4556%" height="15" fill="rgb(240,135,12)" fg:x="4248" fg:w="42"/><text x="46.3288%" y="1055.50"></text></g><g><title>ntdll`RtlRetrieveNtUserPfn (2 samples, 0.02%)</title><rect x="46.5126%" y="1029" width="0.0217%" height="15" fill="rgb(251,24,50)" fg:x="4288" fg:w="2"/><text x="46.7626%" y="1039.50"></text></g><g><title>VCRUNTIME140`memcpy (24 samples, 0.26%)</title><rect x="46.5886%" y="1077" width="0.2603%" height="15" fill="rgb(243,200,47)" fg:x="4295" fg:w="24"/><text x="46.8386%" y="1087.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (2 samples, 0.02%)</title><rect x="46.8489%" y="1061" width="0.0217%" height="15" fill="rgb(224,166,26)" fg:x="4319" fg:w="2"/><text x="47.0989%" y="1071.50"></text></g><g><title>stelpatch-benchmark`core::ops::function::FnMut::call_mut&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),tuple$&lt;ref$ (1 samples, 0.01%)</title><rect x="46.8706%" y="1045" width="0.0108%" height="15" fill="rgb(233,0,47)" fg:x="4321" fg:w="1"/><text x="47.1206%" y="1055.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (5 samples, 0.05%)</title><rect x="46.8814%" y="1045" width="0.0542%" height="15" fill="rgb(253,80,5)" fg:x="4322" fg:w="5"/><text x="47.1314%" y="1055.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (5 samples, 0.05%)</title><rect x="46.8814%" y="1029" width="0.0542%" height="15" fill="rgb(214,133,25)" fg:x="4322" fg:w="5"/><text x="47.1314%" y="1039.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (5 samples, 0.05%)</title><rect x="46.8814%" y="1013" width="0.0542%" height="15" fill="rgb(209,27,14)" fg:x="4322" fg:w="5"/><text x="47.1314%" y="1023.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,char&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (4 samples, 0.04%)</title><rect x="46.8923%" y="997" width="0.0434%" height="15" fill="rgb(219,102,51)" fg:x="4323" fg:w="4"/><text x="47.1423%" y="1007.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$32::find_token (4 samples, 0.04%)</title><rect x="46.8923%" y="981" width="0.0434%" height="15" fill="rgb(237,18,16)" fg:x="4323" fg:w="4"/><text x="47.1423%" y="991.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (2 samples, 0.02%)</title><rect x="46.9357%" y="1045" width="0.0217%" height="15" fill="rgb(241,85,17)" fg:x="4327" fg:w="2"/><text x="47.1857%" y="1055.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$ (12 samples, 0.13%)</title><rect x="46.8489%" y="1077" width="0.1302%" height="15" fill="rgb(236,90,42)" fg:x="4319" fg:w="12"/><text x="47.0989%" y="1087.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$5::choice&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(stelpatch::cw_parser::parser::ParsedEntity)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(ref$&lt;str$&gt;)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),stelpatch::cw_parser::parser::script_value::closure_env$0&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result (10 samples, 0.11%)</title><rect x="46.8706%" y="1061" width="0.1085%" height="15" fill="rgb(249,57,21)" fg:x="4321" fg:w="10"/><text x="47.1206%" y="1071.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (2 samples, 0.02%)</title><rect x="46.9574%" y="1045" width="0.0217%" height="15" fill="rgb(243,12,36)" fg:x="4329" fg:w="2"/><text x="47.2074%" y="1055.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::delimited::closure_env$0&lt;ref$&lt;str$&gt;,char,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::parser_ext::Context&lt;nom::combinator::cut::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::sequence::tuple::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_trailing_ws::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_trailing_ws::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err (1 samples, 0.01%)</title><rect x="46.9682%" y="1029" width="0.0108%" height="15" fill="rgb(253,128,47)" fg:x="4330" fg:w="1"/><text x="47.2182%" y="1039.50"></text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::with_opt_trailing_ws::closure$0&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,char,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="46.9682%" y="1013" width="0.0108%" height="15" fill="rgb(207,33,20)" fg:x="4330" fg:w="1"/><text x="47.2182%" y="1023.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (1 samples, 0.01%)</title><rect x="46.9682%" y="997" width="0.0108%" height="15" fill="rgb(233,215,35)" fg:x="4330" fg:w="1"/><text x="47.2182%" y="1007.50"></text></g><g><title>VCRUNTIME140`memcpy (36 samples, 0.39%)</title><rect x="47.0550%" y="1061" width="0.3905%" height="15" fill="rgb(249,188,52)" fg:x="4338" fg:w="36"/><text x="47.3050%" y="1071.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$130::slice (1 samples, 0.01%)</title><rect x="47.7818%" y="965" width="0.0108%" height="15" fill="rgb(225,12,32)" fg:x="4405" fg:w="1"/><text x="48.0318%" y="975.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (7 samples, 0.08%)</title><rect x="47.7818%" y="981" width="0.0759%" height="15" fill="rgb(247,98,14)" fg:x="4405" fg:w="7"/><text x="48.0318%" y="991.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::bytes::complete::is_not::closure$0::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (6 samples, 0.07%)</title><rect x="47.7926%" y="965" width="0.0651%" height="15" fill="rgb(247,219,48)" fg:x="4406" fg:w="6"/><text x="48.0426%" y="975.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$32::find_token (4 samples, 0.04%)</title><rect x="47.8143%" y="949" width="0.0434%" height="15" fill="rgb(253,60,48)" fg:x="4408" fg:w="4"/><text x="48.0643%" y="959.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$2::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::one_of::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (9 samples, 0.10%)</title><rect x="47.7709%" y="1013" width="0.0976%" height="15" fill="rgb(245,15,52)" fg:x="4404" fg:w="9"/><text x="48.0209%" y="1023.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (8 samples, 0.09%)</title><rect x="47.7818%" y="997" width="0.0868%" height="15" fill="rgb(220,133,28)" fg:x="4405" fg:w="8"/><text x="48.0318%" y="1007.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="47.8577%" y="981" width="0.0108%" height="15" fill="rgb(217,180,4)" fg:x="4412" fg:w="1"/><text x="48.1077%" y="991.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="47.9011%" y="997" width="0.0108%" height="15" fill="rgb(251,24,1)" fg:x="4416" fg:w="1"/><text x="48.1511%" y="1007.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;char,ref$&lt;str$&gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (1 samples, 0.01%)</title><rect x="47.9119%" y="997" width="0.0108%" height="15" fill="rgb(212,185,49)" fg:x="4417" fg:w="1"/><text x="48.1619%" y="1007.50"></text></g><g><title>stelpatch-benchmark`core::ops::function::FnMut::call_mut&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),tuple$&lt;ref$ (18 samples, 0.20%)</title><rect x="47.7601%" y="1029" width="0.1952%" height="15" fill="rgb(215,175,22)" fg:x="4403" fg:w="18"/><text x="48.0101%" y="1039.50"></text></g><g><title>stelpatch-benchmark`nom::sequence::impl$3::parse&lt;ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;char&gt; &gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;tuple$&lt;char,ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,ref$&lt;str$&gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (8 samples, 0.09%)</title><rect x="47.8685%" y="1013" width="0.0868%" height="15" fill="rgb(250,205,14)" fg:x="4413" fg:w="8"/><text x="48.1185%" y="1023.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::digit1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (3 samples, 0.03%)</title><rect x="47.9228%" y="997" width="0.0325%" height="15" fill="rgb(225,211,22)" fg:x="4418" fg:w="3"/><text x="48.1728%" y="1007.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$2::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::one_of::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (7 samples, 0.08%)</title><rect x="47.9662%" y="997" width="0.0759%" height="15" fill="rgb(251,179,42)" fg:x="4422" fg:w="7"/><text x="48.2162%" y="1007.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (5 samples, 0.05%)</title><rect x="47.9879%" y="981" width="0.0542%" height="15" fill="rgb(208,216,51)" fg:x="4424" fg:w="5"/><text x="48.2379%" y="991.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (3 samples, 0.03%)</title><rect x="48.0638%" y="949" width="0.0325%" height="15" fill="rgb(235,36,11)" fg:x="4431" fg:w="3"/><text x="48.3138%" y="959.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::bytes::complete::is_not::closure$0::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (3 samples, 0.03%)</title><rect x="48.0638%" y="933" width="0.0325%" height="15" fill="rgb(213,189,28)" fg:x="4431" fg:w="3"/><text x="48.3138%" y="943.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$32::find_token (3 samples, 0.03%)</title><rect x="48.0638%" y="917" width="0.0325%" height="15" fill="rgb(227,203,42)" fg:x="4431" fg:w="3"/><text x="48.3138%" y="927.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$2::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::one_of::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (8 samples, 0.09%)</title><rect x="48.0421%" y="981" width="0.0868%" height="15" fill="rgb(244,72,36)" fg:x="4429" fg:w="8"/><text x="48.2921%" y="991.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (7 samples, 0.08%)</title><rect x="48.0529%" y="965" width="0.0759%" height="15" fill="rgb(213,53,17)" fg:x="4430" fg:w="7"/><text x="48.3029%" y="975.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (3 samples, 0.03%)</title><rect x="48.0963%" y="949" width="0.0325%" height="15" fill="rgb(207,167,3)" fg:x="4434" fg:w="3"/><text x="48.3463%" y="959.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$130::slice (9 samples, 0.10%)</title><rect x="48.2590%" y="965" width="0.0976%" height="15" fill="rgb(216,98,30)" fg:x="4449" fg:w="9"/><text x="48.5090%" y="975.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (77 samples, 0.84%)</title><rect x="48.0421%" y="997" width="0.8352%" height="15" fill="rgb(236,123,15)" fg:x="4429" fg:w="77"/><text x="48.2921%" y="1007.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,char&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (69 samples, 0.75%)</title><rect x="48.1289%" y="981" width="0.7485%" height="15" fill="rgb(248,81,50)" fg:x="4437" fg:w="69"/><text x="48.3789%" y="991.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$32::find_token (48 samples, 0.52%)</title><rect x="48.3567%" y="965" width="0.5207%" height="15" fill="rgb(214,120,4)" fg:x="4458" fg:w="48"/><text x="48.6067%" y="975.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::bytes::complete::is_not::closure$0::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (25 samples, 0.27%)</title><rect x="48.9207%" y="965" width="0.2712%" height="15" fill="rgb(208,179,34)" fg:x="4510" fg:w="25"/><text x="49.1707%" y="975.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$32::find_token (15 samples, 0.16%)</title><rect x="49.0292%" y="949" width="0.1627%" height="15" fill="rgb(227,140,7)" fg:x="4520" fg:w="15"/><text x="49.2792%" y="959.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::escaped::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt;,ref$ (30 samples, 0.33%)</title><rect x="48.8773%" y="981" width="0.3254%" height="15" fill="rgb(214,22,6)" fg:x="4506" fg:w="30"/><text x="49.1273%" y="991.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$6::offset (1 samples, 0.01%)</title><rect x="49.1919%" y="965" width="0.0108%" height="15" fill="rgb(207,137,27)" fg:x="4535" fg:w="1"/><text x="49.4419%" y="975.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (116 samples, 1.26%)</title><rect x="47.9553%" y="1013" width="1.2583%" height="15" fill="rgb(210,8,46)" fg:x="4421" fg:w="116"/><text x="48.2053%" y="1023.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::recognize::closure_env$0&lt;ref$&lt;str$&gt;,usize,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::multi::many0_count::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::escaped::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt;,ref$ (31 samples, 0.34%)</title><rect x="48.8773%" y="997" width="0.3363%" height="15" fill="rgb(240,16,54)" fg:x="4506" fg:w="31"/><text x="49.1273%" y="1007.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$129::slice (1 samples, 0.01%)</title><rect x="49.2027%" y="981" width="0.0108%" height="15" fill="rgb(211,209,29)" fg:x="4536" fg:w="1"/><text x="49.4527%" y="991.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$2::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::one_of::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (2 samples, 0.02%)</title><rect x="49.2353%" y="981" width="0.0217%" height="15" fill="rgb(226,228,24)" fg:x="4539" fg:w="2"/><text x="49.4853%" y="991.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (2 samples, 0.02%)</title><rect x="49.2353%" y="965" width="0.0217%" height="15" fill="rgb(222,84,9)" fg:x="4539" fg:w="2"/><text x="49.4853%" y="975.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (2 samples, 0.02%)</title><rect x="49.2353%" y="949" width="0.0217%" height="15" fill="rgb(234,203,30)" fg:x="4539" fg:w="2"/><text x="49.4853%" y="959.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (124 samples, 1.35%)</title><rect x="47.9553%" y="1029" width="1.3450%" height="15" fill="rgb(238,109,14)" fg:x="4421" fg:w="124"/><text x="48.2053%" y="1039.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;char,ref$&lt;str$&gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (8 samples, 0.09%)</title><rect x="49.2136%" y="1013" width="0.0868%" height="15" fill="rgb(233,206,34)" fg:x="4537" fg:w="8"/><text x="49.4636%" y="1023.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (6 samples, 0.07%)</title><rect x="49.2353%" y="997" width="0.0651%" height="15" fill="rgb(220,167,47)" fg:x="4539" fg:w="6"/><text x="49.4853%" y="1007.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,char&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (4 samples, 0.04%)</title><rect x="49.2570%" y="981" width="0.0434%" height="15" fill="rgb(238,105,10)" fg:x="4541" fg:w="4"/><text x="49.5070%" y="991.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$32::find_token (4 samples, 0.04%)</title><rect x="49.2570%" y="965" width="0.0434%" height="15" fill="rgb(213,227,17)" fg:x="4541" fg:w="4"/><text x="49.5070%" y="975.50"></text></g><g><title>VCRUNTIME140`memcpy (27 samples, 0.29%)</title><rect x="49.7559%" y="1013" width="0.2929%" height="15" fill="rgb(217,132,38)" fg:x="4587" fg:w="27"/><text x="50.0059%" y="1023.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (10 samples, 0.11%)</title><rect x="50.0705%" y="997" width="0.1085%" height="15" fill="rgb(242,146,4)" fg:x="4616" fg:w="10"/><text x="50.3205%" y="1007.50"></text></g><g><title>ntdll`RtlFreeHeap (19 samples, 0.21%)</title><rect x="50.0488%" y="1013" width="0.2061%" height="15" fill="rgb(212,61,9)" fg:x="4614" fg:w="19"/><text x="50.2988%" y="1023.50"></text></g><g><title>ntdll`memset (7 samples, 0.08%)</title><rect x="50.1790%" y="997" width="0.0759%" height="15" fill="rgb(247,126,22)" fg:x="4626" fg:w="7"/><text x="50.4290%" y="1007.50"></text></g><g><title>ntdll`RtlAllocateHeap (7 samples, 0.08%)</title><rect x="50.2549%" y="981" width="0.0759%" height="15" fill="rgb(220,196,2)" fg:x="4633" fg:w="7"/><text x="50.5049%" y="991.50"></text></g><g><title>ntdll`RtlAllocateHeap (5 samples, 0.05%)</title><rect x="50.2766%" y="965" width="0.0542%" height="15" fill="rgb(208,46,4)" fg:x="4635" fg:w="5"/><text x="50.5266%" y="975.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.02%)</title><rect x="50.3308%" y="933" width="0.0217%" height="15" fill="rgb(252,104,46)" fg:x="4640" fg:w="2"/><text x="50.5808%" y="943.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.02%)</title><rect x="50.3308%" y="917" width="0.0217%" height="15" fill="rgb(237,152,48)" fg:x="4640" fg:w="2"/><text x="50.5808%" y="927.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.01%)</title><rect x="50.3417%" y="901" width="0.0108%" height="15" fill="rgb(221,59,37)" fg:x="4641" fg:w="1"/><text x="50.5917%" y="911.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.01%)</title><rect x="50.3417%" y="885" width="0.0108%" height="15" fill="rgb(209,202,51)" fg:x="4641" fg:w="1"/><text x="50.5917%" y="895.50"></text></g><g><title>ntdll`RtlEnterCriticalSection (1 samples, 0.01%)</title><rect x="50.3417%" y="869" width="0.0108%" height="15" fill="rgb(228,81,30)" fg:x="4641" fg:w="1"/><text x="50.5917%" y="879.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.01%)</title><rect x="50.3525%" y="917" width="0.0108%" height="15" fill="rgb(227,42,39)" fg:x="4642" fg:w="1"/><text x="50.6025%" y="927.50"></text></g><g><title>ntdll`RtlReAllocateHeap (4 samples, 0.04%)</title><rect x="50.3308%" y="981" width="0.0434%" height="15" fill="rgb(221,26,2)" fg:x="4640" fg:w="4"/><text x="50.5808%" y="991.50"></text></g><g><title>ntdll`RtlReAllocateHeap (4 samples, 0.04%)</title><rect x="50.3308%" y="965" width="0.0434%" height="15" fill="rgb(254,61,31)" fg:x="4640" fg:w="4"/><text x="50.5808%" y="975.50"></text></g><g><title>ntdll`RtlReleaseSRWLockShared (4 samples, 0.04%)</title><rect x="50.3308%" y="949" width="0.0434%" height="15" fill="rgb(222,173,38)" fg:x="4640" fg:w="4"/><text x="50.5808%" y="959.50"></text></g><g><title>ntdll`RtlFreeHeap (2 samples, 0.02%)</title><rect x="50.3525%" y="933" width="0.0217%" height="15" fill="rgb(218,50,12)" fg:x="4642" fg:w="2"/><text x="50.6025%" y="943.50"></text></g><g><title>ntdll`memset (1 samples, 0.01%)</title><rect x="50.3634%" y="917" width="0.0108%" height="15" fill="rgb(223,88,40)" fg:x="4643" fg:w="1"/><text x="50.6134%" y="927.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::RawVec&lt;enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,alloc::alloc::Global&gt;::reserve_for_push&lt;enum2$ (12 samples, 0.13%)</title><rect x="50.2549%" y="1013" width="0.1302%" height="15" fill="rgb(237,54,19)" fg:x="4633" fg:w="12"/><text x="50.5049%" y="1023.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::finish_grow (12 samples, 0.13%)</title><rect x="50.2549%" y="997" width="0.1302%" height="15" fill="rgb(251,129,25)" fg:x="4633" fg:w="12"/><text x="50.5049%" y="1007.50"></text></g><g><title>stelpatch-benchmark`std::alloc::__default_lib_allocator::__rdl_alloc (1 samples, 0.01%)</title><rect x="50.3742%" y="981" width="0.0108%" height="15" fill="rgb(238,97,19)" fg:x="4644" fg:w="1"/><text x="50.6242%" y="991.50"></text></g><g><title>ntdll`RtlCreateTimer (4 samples, 0.04%)</title><rect x="51.1769%" y="949" width="0.0434%" height="15" fill="rgb(240,169,18)" fg:x="4718" fg:w="4"/><text x="51.4269%" y="959.50"></text></g><g><title>ntdll`RtlSetUserValueHeap (2 samples, 0.02%)</title><rect x="51.2203%" y="949" width="0.0217%" height="15" fill="rgb(230,187,49)" fg:x="4722" fg:w="2"/><text x="51.4703%" y="959.50"></text></g><g><title>ntdll`NtAllocateVirtualMemory (1 samples, 0.01%)</title><rect x="51.2420%" y="853" width="0.0108%" height="15" fill="rgb(209,44,26)" fg:x="4724" fg:w="1"/><text x="51.4920%" y="863.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (2 samples, 0.02%)</title><rect x="51.2420%" y="949" width="0.0217%" height="15" fill="rgb(244,0,6)" fg:x="4724" fg:w="2"/><text x="51.4920%" y="959.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (2 samples, 0.02%)</title><rect x="51.2420%" y="933" width="0.0217%" height="15" fill="rgb(248,18,21)" fg:x="4724" fg:w="2"/><text x="51.4920%" y="943.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.02%)</title><rect x="51.2420%" y="917" width="0.0217%" height="15" fill="rgb(245,180,19)" fg:x="4724" fg:w="2"/><text x="51.4920%" y="927.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.02%)</title><rect x="51.2420%" y="901" width="0.0217%" height="15" fill="rgb(252,118,36)" fg:x="4724" fg:w="2"/><text x="51.4920%" y="911.50"></text></g><g><title>ntdll`RtlProtectHeap (2 samples, 0.02%)</title><rect x="51.2420%" y="885" width="0.0217%" height="15" fill="rgb(210,224,19)" fg:x="4724" fg:w="2"/><text x="51.4920%" y="895.50"></text></g><g><title>ntdll`RtlProtectHeap (2 samples, 0.02%)</title><rect x="51.2420%" y="869" width="0.0217%" height="15" fill="rgb(218,30,24)" fg:x="4724" fg:w="2"/><text x="51.4920%" y="879.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.01%)</title><rect x="51.2528%" y="853" width="0.0108%" height="15" fill="rgb(219,75,50)" fg:x="4725" fg:w="1"/><text x="51.5028%" y="863.50"></text></g><g><title>ntdll`RtlAllocateHeap (74 samples, 0.80%)</title><rect x="50.4827%" y="981" width="0.8027%" height="15" fill="rgb(234,72,50)" fg:x="4654" fg:w="74"/><text x="50.7327%" y="991.50"></text></g><g><title>ntdll`RtlAllocateHeap (63 samples, 0.68%)</title><rect x="50.6020%" y="965" width="0.6834%" height="15" fill="rgb(219,100,48)" fg:x="4665" fg:w="63"/><text x="50.8520%" y="975.50"></text></g><g><title>ntdll`memset (2 samples, 0.02%)</title><rect x="51.2637%" y="949" width="0.0217%" height="15" fill="rgb(253,5,41)" fg:x="4726" fg:w="2"/><text x="51.5137%" y="959.50"></text></g><g><title>ntdll`RtlReAllocateHeap (3 samples, 0.03%)</title><rect x="51.2854%" y="981" width="0.0325%" height="15" fill="rgb(247,181,11)" fg:x="4728" fg:w="3"/><text x="51.5354%" y="991.50"></text></g><g><title>ntdll`RtlReAllocateHeap (3 samples, 0.03%)</title><rect x="51.2854%" y="965" width="0.0325%" height="15" fill="rgb(222,223,25)" fg:x="4728" fg:w="3"/><text x="51.5354%" y="975.50"></text></g><g><title>ntdll`RtlReleaseSRWLockShared (3 samples, 0.03%)</title><rect x="51.2854%" y="949" width="0.0325%" height="15" fill="rgb(214,198,28)" fg:x="4728" fg:w="3"/><text x="51.5354%" y="959.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.02%)</title><rect x="51.2962%" y="933" width="0.0217%" height="15" fill="rgb(230,46,43)" fg:x="4729" fg:w="2"/><text x="51.5462%" y="943.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.02%)</title><rect x="51.2962%" y="917" width="0.0217%" height="15" fill="rgb(233,65,53)" fg:x="4729" fg:w="2"/><text x="51.5462%" y="927.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.01%)</title><rect x="51.3071%" y="901" width="0.0108%" height="15" fill="rgb(221,121,27)" fg:x="4730" fg:w="1"/><text x="51.5571%" y="911.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.01%)</title><rect x="51.3071%" y="885" width="0.0108%" height="15" fill="rgb(247,70,47)" fg:x="4730" fg:w="1"/><text x="51.5571%" y="895.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="51.3071%" y="869" width="0.0108%" height="15" fill="rgb(228,85,35)" fg:x="4730" fg:w="1"/><text x="51.5571%" y="879.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="51.3071%" y="853" width="0.0108%" height="15" fill="rgb(209,50,18)" fg:x="4730" fg:w="1"/><text x="51.5571%" y="863.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.01%)</title><rect x="51.3071%" y="837" width="0.0108%" height="15" fill="rgb(250,19,35)" fg:x="4730" fg:w="1"/><text x="51.5571%" y="847.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.01%)</title><rect x="51.3071%" y="821" width="0.0108%" height="15" fill="rgb(253,107,29)" fg:x="4730" fg:w="1"/><text x="51.5571%" y="831.50"></text></g><g><title>ntdll`NtAllocateVirtualMemory (1 samples, 0.01%)</title><rect x="51.3071%" y="805" width="0.0108%" height="15" fill="rgb(252,179,29)" fg:x="4730" fg:w="1"/><text x="51.5571%" y="815.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::RawVec&lt;stelpatch::cw_model::PropertyInfo,alloc::alloc::Global&gt;::reserve_for_push (87 samples, 0.94%)</title><rect x="50.3851%" y="1013" width="0.9437%" height="15" fill="rgb(238,194,6)" fg:x="4645" fg:w="87"/><text x="50.6351%" y="1023.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::finish_grow (82 samples, 0.89%)</title><rect x="50.4393%" y="997" width="0.8895%" height="15" fill="rgb(238,164,29)" fg:x="4650" fg:w="82"/><text x="50.6893%" y="1007.50"></text></g><g><title>stelpatch-benchmark`std::alloc::__default_lib_allocator::__rdl_alloc (1 samples, 0.01%)</title><rect x="51.3179%" y="981" width="0.0108%" height="15" fill="rgb(224,25,9)" fg:x="4731" fg:w="1"/><text x="51.5679%" y="991.50"></text></g><g><title>VCRUNTIME140`memcmp (1 samples, 0.01%)</title><rect x="51.4698%" y="997" width="0.0108%" height="15" fill="rgb(244,153,23)" fg:x="4745" fg:w="1"/><text x="51.7198%" y="1007.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState,ref$&lt;ref$ (30 samples, 0.33%)</title><rect x="51.4806%" y="997" width="0.3254%" height="15" fill="rgb(212,203,14)" fg:x="4746" fg:w="30"/><text x="51.7306%" y="1007.50"></text></g><g><title>stelpatch-benchmark`core::hash::sip::impl$5::write (18 samples, 0.20%)</title><rect x="51.6108%" y="981" width="0.1952%" height="15" fill="rgb(220,164,20)" fg:x="4758" fg:w="18"/><text x="51.8608%" y="991.50"></text></g><g><title>ntdll`RtlCreateTimer (5 samples, 0.05%)</title><rect x="52.1423%" y="949" width="0.0542%" height="15" fill="rgb(222,203,48)" fg:x="4807" fg:w="5"/><text x="52.3923%" y="959.50"></text></g><g><title>ntdll`RtlSetUserValueHeap (1 samples, 0.01%)</title><rect x="52.1966%" y="949" width="0.0108%" height="15" fill="rgb(215,159,22)" fg:x="4812" fg:w="1"/><text x="52.4466%" y="959.50"></text></g><g><title>ntdll`RtlAllocateHeap (25 samples, 0.27%)</title><rect x="51.9688%" y="981" width="0.2712%" height="15" fill="rgb(216,183,47)" fg:x="4791" fg:w="25"/><text x="52.2188%" y="991.50"></text></g><g><title>ntdll`RtlAllocateHeap (21 samples, 0.23%)</title><rect x="52.0121%" y="965" width="0.2278%" height="15" fill="rgb(229,195,25)" fg:x="4795" fg:w="21"/><text x="52.2621%" y="975.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (3 samples, 0.03%)</title><rect x="52.2074%" y="949" width="0.0325%" height="15" fill="rgb(224,132,51)" fg:x="4813" fg:w="3"/><text x="52.4574%" y="959.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (2 samples, 0.02%)</title><rect x="52.2182%" y="933" width="0.0217%" height="15" fill="rgb(240,63,7)" fg:x="4814" fg:w="2"/><text x="52.4682%" y="943.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.02%)</title><rect x="52.2182%" y="917" width="0.0217%" height="15" fill="rgb(249,182,41)" fg:x="4814" fg:w="2"/><text x="52.4682%" y="927.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.02%)</title><rect x="52.2182%" y="901" width="0.0217%" height="15" fill="rgb(243,47,26)" fg:x="4814" fg:w="2"/><text x="52.4682%" y="911.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState,ref$&lt;ref$ (5 samples, 0.05%)</title><rect x="52.2399%" y="981" width="0.0542%" height="15" fill="rgb(233,48,2)" fg:x="4816" fg:w="5"/><text x="52.4899%" y="991.50"></text></g><g><title>stelpatch-benchmark`core::hash::sip::impl$5::write (2 samples, 0.02%)</title><rect x="52.2725%" y="965" width="0.0217%" height="15" fill="rgb(244,165,34)" fg:x="4819" fg:w="2"/><text x="52.5225%" y="975.50"></text></g><g><title>stelpatch-benchmark`hashbrown::map::HashMap&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedPropertyInfoList,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::rustc_entry&lt;ref$ (93 samples, 1.01%)</title><rect x="51.3288%" y="1013" width="1.0088%" height="15" fill="rgb(207,89,7)" fg:x="4732" fg:w="93"/><text x="51.5788%" y="1023.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedPropertyInfoList&gt;,alloc::alloc::Global&gt;::reserve_rehash&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedPropertyInfoList&gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;ref$&lt;str$&gt;,ref$ (49 samples, 0.53%)</title><rect x="51.8061%" y="997" width="0.5315%" height="15" fill="rgb(244,117,36)" fg:x="4776" fg:w="49"/><text x="52.0561%" y="1007.50"></text></g><g><title>stelpatch-benchmark`std::alloc::__default_lib_allocator::__rdl_alloc (4 samples, 0.04%)</title><rect x="52.2942%" y="981" width="0.0434%" height="15" fill="rgb(226,144,34)" fg:x="4821" fg:w="4"/><text x="52.5442%" y="991.50"></text></g><g><title>VCRUNTIME140`memcpy (25 samples, 0.27%)</title><rect x="52.4026%" y="997" width="0.2712%" height="15" fill="rgb(213,23,19)" fg:x="4831" fg:w="25"/><text x="52.6526%" y="1007.50"></text></g><g><title>ntdll`RtlAllocateHeap (27 samples, 0.29%)</title><rect x="52.7823%" y="965" width="0.2929%" height="15" fill="rgb(217,75,12)" fg:x="4866" fg:w="27"/><text x="53.0323%" y="975.50"></text></g><g><title>ntdll`RtlAllocateHeap (17 samples, 0.18%)</title><rect x="52.8908%" y="949" width="0.1844%" height="15" fill="rgb(224,159,17)" fg:x="4876" fg:w="17"/><text x="53.1408%" y="959.50"></text></g><g><title>ntdll`ExpInterlockedPopEntrySListResume (1 samples, 0.01%)</title><rect x="53.2270%" y="885" width="0.0108%" height="15" fill="rgb(217,118,1)" fg:x="4907" fg:w="1"/><text x="53.4770%" y="895.50"></text></g><g><title>ntdll`RtlAllocateHeap (11 samples, 0.12%)</title><rect x="53.1294%" y="917" width="0.1193%" height="15" fill="rgb(232,180,48)" fg:x="4898" fg:w="11"/><text x="53.3794%" y="927.50"></text></g><g><title>ntdll`RtlAllocateHeap (10 samples, 0.11%)</title><rect x="53.1403%" y="901" width="0.1085%" height="15" fill="rgb(230,27,33)" fg:x="4899" fg:w="10"/><text x="53.3903%" y="911.50"></text></g><g><title>ntdll`RtlCreateTimer (1 samples, 0.01%)</title><rect x="53.2379%" y="885" width="0.0108%" height="15" fill="rgb(205,31,21)" fg:x="4908" fg:w="1"/><text x="53.4879%" y="895.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (2 samples, 0.02%)</title><rect x="53.2487%" y="901" width="0.0217%" height="15" fill="rgb(253,59,4)" fg:x="4909" fg:w="2"/><text x="53.4987%" y="911.50"></text></g><g><title>ntdll`RtlFreeHeap (1 samples, 0.01%)</title><rect x="53.2596%" y="885" width="0.0108%" height="15" fill="rgb(224,201,9)" fg:x="4910" fg:w="1"/><text x="53.5096%" y="895.50"></text></g><g><title>ntdll`RtlFreeHeap (4 samples, 0.04%)</title><rect x="53.2487%" y="917" width="0.0434%" height="15" fill="rgb(229,206,30)" fg:x="4909" fg:w="4"/><text x="53.4987%" y="927.50"></text></g><g><title>ntdll`memset (2 samples, 0.02%)</title><rect x="53.2704%" y="901" width="0.0217%" height="15" fill="rgb(212,67,47)" fg:x="4911" fg:w="2"/><text x="53.5204%" y="911.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.01%)</title><rect x="53.2813%" y="885" width="0.0108%" height="15" fill="rgb(211,96,50)" fg:x="4912" fg:w="1"/><text x="53.5313%" y="895.50"></text></g><g><title>ntdll`RtlReAllocateHeap (25 samples, 0.27%)</title><rect x="53.0752%" y="965" width="0.2712%" height="15" fill="rgb(252,114,18)" fg:x="4893" fg:w="25"/><text x="53.3252%" y="975.50"></text></g><g><title>ntdll`RtlReAllocateHeap (25 samples, 0.27%)</title><rect x="53.0752%" y="949" width="0.2712%" height="15" fill="rgb(223,58,37)" fg:x="4893" fg:w="25"/><text x="53.3252%" y="959.50"></text></g><g><title>ntdll`RtlReleaseSRWLockShared (22 samples, 0.24%)</title><rect x="53.1077%" y="933" width="0.2386%" height="15" fill="rgb(237,70,4)" fg:x="4896" fg:w="22"/><text x="53.3577%" y="943.50"></text></g><g><title>ntdll`memcpy (5 samples, 0.05%)</title><rect x="53.2921%" y="917" width="0.0542%" height="15" fill="rgb(244,85,46)" fg:x="4913" fg:w="5"/><text x="53.5421%" y="927.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::RawVec&lt;enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,alloc::alloc::Global&gt;::reserve_for_push&lt;enum2$ (63 samples, 0.68%)</title><rect x="52.6738%" y="997" width="0.6834%" height="15" fill="rgb(223,39,52)" fg:x="4856" fg:w="63"/><text x="52.9238%" y="1007.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::finish_grow (57 samples, 0.62%)</title><rect x="52.7389%" y="981" width="0.6183%" height="15" fill="rgb(218,200,14)" fg:x="4862" fg:w="57"/><text x="52.9889%" y="991.50"></text></g><g><title>stelpatch-benchmark`std::alloc::__default_lib_allocator::__rdl_alloc (1 samples, 0.01%)</title><rect x="53.3463%" y="965" width="0.0108%" height="15" fill="rgb(208,171,16)" fg:x="4918" fg:w="1"/><text x="53.5963%" y="975.50"></text></g><g><title>stelpatch-benchmark`memcpy (1 samples, 0.01%)</title><rect x="53.3572%" y="997" width="0.0108%" height="15" fill="rgb(234,200,18)" fg:x="4919" fg:w="1"/><text x="53.6072%" y="1007.50"></text></g><g><title>VCRUNTIME140`memcpy (27 samples, 0.29%)</title><rect x="53.4331%" y="981" width="0.2929%" height="15" fill="rgb(228,45,11)" fg:x="4926" fg:w="27"/><text x="53.6831%" y="991.50"></text></g><g><title>stelpatch-benchmark`memcpy (2 samples, 0.02%)</title><rect x="53.7260%" y="981" width="0.0217%" height="15" fill="rgb(237,182,11)" fg:x="4953" fg:w="2"/><text x="53.9760%" y="991.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (2 samples, 0.02%)</title><rect x="53.7911%" y="949" width="0.0217%" height="15" fill="rgb(241,175,49)" fg:x="4959" fg:w="2"/><text x="54.0411%" y="959.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::bytes::complete::is_not::closure$0::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (2 samples, 0.02%)</title><rect x="53.7911%" y="933" width="0.0217%" height="15" fill="rgb(247,38,35)" fg:x="4959" fg:w="2"/><text x="54.0411%" y="943.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (3 samples, 0.03%)</title><rect x="53.7911%" y="965" width="0.0325%" height="15" fill="rgb(228,39,49)" fg:x="4959" fg:w="3"/><text x="54.0411%" y="975.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="53.8128%" y="949" width="0.0108%" height="15" fill="rgb(226,101,26)" fg:x="4961" fg:w="1"/><text x="54.0628%" y="959.50"></text></g><g><title>stelpatch-benchmark`core::ops::function::FnMut::call_mut&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),tuple$&lt;ref$ (3 samples, 0.03%)</title><rect x="53.8236%" y="949" width="0.0325%" height="15" fill="rgb(206,141,19)" fg:x="4962" fg:w="3"/><text x="54.0736%" y="959.50"></text></g><g><title>stelpatch-benchmark`nom::sequence::impl$3::parse&lt;ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;char&gt; &gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;tuple$&lt;char,ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,ref$&lt;str$&gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (2 samples, 0.02%)</title><rect x="53.8345%" y="933" width="0.0217%" height="15" fill="rgb(211,200,13)" fg:x="4963" fg:w="2"/><text x="54.0845%" y="943.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::digit1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="53.8453%" y="917" width="0.0108%" height="15" fill="rgb(241,121,6)" fg:x="4964" fg:w="1"/><text x="54.0953%" y="927.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$2::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::one_of::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (1 samples, 0.01%)</title><rect x="53.8562%" y="917" width="0.0108%" height="15" fill="rgb(234,221,29)" fg:x="4965" fg:w="1"/><text x="54.1062%" y="927.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (1 samples, 0.01%)</title><rect x="53.8562%" y="901" width="0.0108%" height="15" fill="rgb(229,136,5)" fg:x="4965" fg:w="1"/><text x="54.1062%" y="911.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$2::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::one_of::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (3 samples, 0.03%)</title><rect x="53.8670%" y="901" width="0.0325%" height="15" fill="rgb(238,36,11)" fg:x="4966" fg:w="3"/><text x="54.1170%" y="911.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (3 samples, 0.03%)</title><rect x="53.8670%" y="885" width="0.0325%" height="15" fill="rgb(251,55,41)" fg:x="4966" fg:w="3"/><text x="54.1170%" y="895.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="53.8887%" y="869" width="0.0108%" height="15" fill="rgb(242,34,40)" fg:x="4968" fg:w="1"/><text x="54.1387%" y="879.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$130::slice (3 samples, 0.03%)</title><rect x="53.9538%" y="885" width="0.0325%" height="15" fill="rgb(215,42,17)" fg:x="4974" fg:w="3"/><text x="54.2038%" y="895.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (31 samples, 0.34%)</title><rect x="53.8670%" y="917" width="0.3363%" height="15" fill="rgb(207,44,46)" fg:x="4966" fg:w="31"/><text x="54.1170%" y="927.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,char&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (28 samples, 0.30%)</title><rect x="53.8996%" y="901" width="0.3037%" height="15" fill="rgb(211,206,28)" fg:x="4969" fg:w="28"/><text x="54.1496%" y="911.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$32::find_token (20 samples, 0.22%)</title><rect x="53.9863%" y="885" width="0.2169%" height="15" fill="rgb(237,167,16)" fg:x="4977" fg:w="20"/><text x="54.2363%" y="895.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (36 samples, 0.39%)</title><rect x="53.8562%" y="949" width="0.3905%" height="15" fill="rgb(233,66,6)" fg:x="4965" fg:w="36"/><text x="54.1062%" y="959.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (36 samples, 0.39%)</title><rect x="53.8562%" y="933" width="0.3905%" height="15" fill="rgb(246,123,29)" fg:x="4965" fg:w="36"/><text x="54.1062%" y="943.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::recognize::closure_env$0&lt;ref$&lt;str$&gt;,usize,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::multi::many0_count::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::escaped::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt;,ref$ (4 samples, 0.04%)</title><rect x="54.2033%" y="917" width="0.0434%" height="15" fill="rgb(209,62,40)" fg:x="4997" fg:w="4"/><text x="54.4533%" y="927.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::escaped::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt;,ref$ (4 samples, 0.04%)</title><rect x="54.2033%" y="901" width="0.0434%" height="15" fill="rgb(218,4,25)" fg:x="4997" fg:w="4"/><text x="54.4533%" y="911.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::bytes::complete::is_not::closure$0::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (3 samples, 0.03%)</title><rect x="54.2141%" y="885" width="0.0325%" height="15" fill="rgb(253,91,49)" fg:x="4998" fg:w="3"/><text x="54.4641%" y="895.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$32::find_token (3 samples, 0.03%)</title><rect x="54.2141%" y="869" width="0.0325%" height="15" fill="rgb(228,155,29)" fg:x="4998" fg:w="3"/><text x="54.4641%" y="879.50"></text></g><g><title>VCRUNTIME140`memcpy (1 samples, 0.01%)</title><rect x="54.2467%" y="933" width="0.0108%" height="15" fill="rgb(243,57,37)" fg:x="5001" fg:w="1"/><text x="54.4967%" y="943.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (3 samples, 0.03%)</title><rect x="54.2467%" y="949" width="0.0325%" height="15" fill="rgb(244,167,17)" fg:x="5001" fg:w="3"/><text x="54.4967%" y="959.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;alloc::vec::Vec&lt;enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,alloc::alloc::Global&gt;,char&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::cut::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;alloc::vec::Vec&lt;enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,alloc::alloc::Global&gt;,char&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::multi::many_till::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedExpression)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context (2 samples, 0.02%)</title><rect x="54.2575%" y="933" width="0.0217%" height="15" fill="rgb(207,181,38)" fg:x="5002" fg:w="2"/><text x="54.5075%" y="943.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$2::choice&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedExpression)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedConditionalBlock,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedConditionalBlock&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedConditionalBlock)&gt;,enum2$ (2 samples, 0.02%)</title><rect x="54.2575%" y="917" width="0.0217%" height="15" fill="rgb(211,8,23)" fg:x="5002" fg:w="2"/><text x="54.5075%" y="927.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedExpression)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$ (2 samples, 0.02%)</title><rect x="54.2575%" y="901" width="0.0217%" height="15" fill="rgb(235,11,44)" fg:x="5002" fg:w="2"/><text x="54.5075%" y="911.50"></text></g><g><title>stelpatch-benchmark`core::ops::function::FnMut::call_mut&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),tuple$&lt;ref$ (2 samples, 0.02%)</title><rect x="54.2575%" y="885" width="0.0217%" height="15" fill="rgb(248,18,52)" fg:x="5002" fg:w="2"/><text x="54.5075%" y="895.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$5::choice&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(stelpatch::cw_parser::parser::ParsedEntity)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(ref$&lt;str$&gt;)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),stelpatch::cw_parser::parser::script_value::closure_env$0&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result (2 samples, 0.02%)</title><rect x="54.2575%" y="869" width="0.0217%" height="15" fill="rgb(208,4,7)" fg:x="5002" fg:w="2"/><text x="54.5075%" y="879.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (2 samples, 0.02%)</title><rect x="54.2575%" y="853" width="0.0217%" height="15" fill="rgb(240,17,39)" fg:x="5002" fg:w="2"/><text x="54.5075%" y="863.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;alloc::vec::Vec&lt;enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,alloc::alloc::Global&gt;,char&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::cut::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;alloc::vec::Vec&lt;enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,alloc::alloc::Global&gt;,char&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::multi::many_till::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedExpression)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context (2 samples, 0.02%)</title><rect x="54.2575%" y="837" width="0.0217%" height="15" fill="rgb(207,170,3)" fg:x="5002" fg:w="2"/><text x="54.5075%" y="847.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$2::choice&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedExpression)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedConditionalBlock,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedConditionalBlock&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedConditionalBlock)&gt;,enum2$ (2 samples, 0.02%)</title><rect x="54.2575%" y="821" width="0.0217%" height="15" fill="rgb(236,100,52)" fg:x="5002" fg:w="2"/><text x="54.5075%" y="831.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$ (2 samples, 0.02%)</title><rect x="54.2575%" y="805" width="0.0217%" height="15" fill="rgb(246,78,51)" fg:x="5002" fg:w="2"/><text x="54.5075%" y="815.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$5::choice&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(stelpatch::cw_parser::parser::ParsedEntity)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(ref$&lt;str$&gt;)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),stelpatch::cw_parser::parser::script_value::closure_env$0&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result (2 samples, 0.02%)</title><rect x="54.2575%" y="789" width="0.0217%" height="15" fill="rgb(211,17,15)" fg:x="5002" fg:w="2"/><text x="54.5075%" y="799.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (2 samples, 0.02%)</title><rect x="54.2575%" y="773" width="0.0217%" height="15" fill="rgb(209,59,46)" fg:x="5002" fg:w="2"/><text x="54.5075%" y="783.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (2 samples, 0.02%)</title><rect x="54.2575%" y="757" width="0.0217%" height="15" fill="rgb(210,92,25)" fg:x="5002" fg:w="2"/><text x="54.5075%" y="767.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (2 samples, 0.02%)</title><rect x="54.2575%" y="741" width="0.0217%" height="15" fill="rgb(238,174,52)" fg:x="5002" fg:w="2"/><text x="54.5075%" y="751.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,char&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (2 samples, 0.02%)</title><rect x="54.2575%" y="725" width="0.0217%" height="15" fill="rgb(230,73,7)" fg:x="5002" fg:w="2"/><text x="54.5075%" y="735.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$32::find_token (1 samples, 0.01%)</title><rect x="54.2684%" y="709" width="0.0108%" height="15" fill="rgb(243,124,40)" fg:x="5003" fg:w="1"/><text x="54.5184%" y="719.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$ (51 samples, 0.55%)</title><rect x="53.7477%" y="981" width="0.5532%" height="15" fill="rgb(244,170,11)" fg:x="4955" fg:w="51"/><text x="53.9977%" y="991.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$5::choice&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(stelpatch::cw_parser::parser::ParsedEntity)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(ref$&lt;str$&gt;)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),stelpatch::cw_parser::parser::script_value::closure_env$0&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result (44 samples, 0.48%)</title><rect x="53.8236%" y="965" width="0.4773%" height="15" fill="rgb(207,114,54)" fg:x="4962" fg:w="44"/><text x="54.0736%" y="975.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (2 samples, 0.02%)</title><rect x="54.2792%" y="949" width="0.0217%" height="15" fill="rgb(205,42,20)" fg:x="5004" fg:w="2"/><text x="54.5292%" y="959.50"></text></g><g><title>VCRUNTIME140`memcpy (45 samples, 0.49%)</title><rect x="54.4745%" y="965" width="0.4881%" height="15" fill="rgb(230,30,28)" fg:x="5022" fg:w="45"/><text x="54.7245%" y="975.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (3 samples, 0.03%)</title><rect x="55.2012%" y="885" width="0.0325%" height="15" fill="rgb(205,73,54)" fg:x="5089" fg:w="3"/><text x="55.4512%" y="895.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$2::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::one_of::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (5 samples, 0.05%)</title><rect x="55.1904%" y="917" width="0.0542%" height="15" fill="rgb(254,227,23)" fg:x="5088" fg:w="5"/><text x="55.4404%" y="927.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (5 samples, 0.05%)</title><rect x="55.1904%" y="901" width="0.0542%" height="15" fill="rgb(228,202,34)" fg:x="5088" fg:w="5"/><text x="55.4404%" y="911.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="55.2338%" y="885" width="0.0108%" height="15" fill="rgb(222,225,37)" fg:x="5092" fg:w="1"/><text x="55.4838%" y="895.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (2 samples, 0.02%)</title><rect x="55.2880%" y="901" width="0.0217%" height="15" fill="rgb(221,14,54)" fg:x="5097" fg:w="2"/><text x="55.5380%" y="911.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;char,ref$&lt;str$&gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (2 samples, 0.02%)</title><rect x="55.3097%" y="901" width="0.0217%" height="15" fill="rgb(254,102,2)" fg:x="5099" fg:w="2"/><text x="55.5597%" y="911.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::digit1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (2 samples, 0.02%)</title><rect x="55.3097%" y="885" width="0.0217%" height="15" fill="rgb(232,104,17)" fg:x="5099" fg:w="2"/><text x="55.5597%" y="895.50"></text></g><g><title>stelpatch-benchmark`core::ops::function::FnMut::call_mut&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),tuple$&lt;ref$ (17 samples, 0.18%)</title><rect x="55.1795%" y="933" width="0.1844%" height="15" fill="rgb(250,220,14)" fg:x="5087" fg:w="17"/><text x="55.4295%" y="943.50"></text></g><g><title>stelpatch-benchmark`nom::sequence::impl$3::parse&lt;ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;char&gt; &gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;tuple$&lt;char,ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,ref$&lt;str$&gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (11 samples, 0.12%)</title><rect x="55.2446%" y="917" width="0.1193%" height="15" fill="rgb(241,158,9)" fg:x="5093" fg:w="11"/><text x="55.4946%" y="927.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::digit1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (3 samples, 0.03%)</title><rect x="55.3314%" y="901" width="0.0325%" height="15" fill="rgb(246,9,43)" fg:x="5101" fg:w="3"/><text x="55.5814%" y="911.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$2::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::one_of::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (3 samples, 0.03%)</title><rect x="55.4290%" y="901" width="0.0325%" height="15" fill="rgb(206,73,33)" fg:x="5110" fg:w="3"/><text x="55.6790%" y="911.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (3 samples, 0.03%)</title><rect x="55.4290%" y="885" width="0.0325%" height="15" fill="rgb(222,79,8)" fg:x="5110" fg:w="3"/><text x="55.6790%" y="895.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (2 samples, 0.02%)</title><rect x="55.4399%" y="869" width="0.0217%" height="15" fill="rgb(234,8,54)" fg:x="5111" fg:w="2"/><text x="55.6899%" y="879.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (3 samples, 0.03%)</title><rect x="55.5700%" y="853" width="0.0325%" height="15" fill="rgb(209,134,38)" fg:x="5123" fg:w="3"/><text x="55.8200%" y="863.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::bytes::complete::is_not::closure$0::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="55.5917%" y="837" width="0.0108%" height="15" fill="rgb(230,127,29)" fg:x="5125" fg:w="1"/><text x="55.8417%" y="847.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$32::find_token (1 samples, 0.01%)</title><rect x="55.5917%" y="821" width="0.0108%" height="15" fill="rgb(242,44,41)" fg:x="5125" fg:w="1"/><text x="55.8417%" y="831.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$2::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::one_of::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (9 samples, 0.10%)</title><rect x="55.5375%" y="885" width="0.0976%" height="15" fill="rgb(222,56,43)" fg:x="5120" fg:w="9"/><text x="55.7875%" y="895.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (8 samples, 0.09%)</title><rect x="55.5483%" y="869" width="0.0868%" height="15" fill="rgb(238,39,47)" fg:x="5121" fg:w="8"/><text x="55.7983%" y="879.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (3 samples, 0.03%)</title><rect x="55.6026%" y="853" width="0.0325%" height="15" fill="rgb(226,79,43)" fg:x="5126" fg:w="3"/><text x="55.8526%" y="863.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$130::slice (13 samples, 0.14%)</title><rect x="55.7870%" y="869" width="0.1410%" height="15" fill="rgb(242,105,53)" fg:x="5143" fg:w="13"/><text x="56.0370%" y="879.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,char&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (80 samples, 0.87%)</title><rect x="55.6351%" y="885" width="0.8678%" height="15" fill="rgb(251,132,46)" fg:x="5129" fg:w="80"/><text x="55.8851%" y="895.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$32::find_token (53 samples, 0.57%)</title><rect x="55.9280%" y="869" width="0.5749%" height="15" fill="rgb(231,77,14)" fg:x="5156" fg:w="53"/><text x="56.1780%" y="879.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (97 samples, 1.05%)</title><rect x="55.4615%" y="901" width="1.0522%" height="15" fill="rgb(240,135,9)" fg:x="5113" fg:w="97"/><text x="55.7115%" y="911.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$129::slice (1 samples, 0.01%)</title><rect x="56.5029%" y="885" width="0.0108%" height="15" fill="rgb(248,109,14)" fg:x="5209" fg:w="1"/><text x="56.7529%" y="895.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::bytes::complete::is_not::closure$0::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (10 samples, 0.11%)</title><rect x="56.5571%" y="869" width="0.1085%" height="15" fill="rgb(227,146,52)" fg:x="5214" fg:w="10"/><text x="56.8071%" y="879.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$32::find_token (5 samples, 0.05%)</title><rect x="56.6113%" y="853" width="0.0542%" height="15" fill="rgb(232,54,3)" fg:x="5219" fg:w="5"/><text x="56.8613%" y="863.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (118 samples, 1.28%)</title><rect x="55.3965%" y="917" width="1.2800%" height="15" fill="rgb(229,201,43)" fg:x="5107" fg:w="118"/><text x="55.6465%" y="927.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::recognize::closure_env$0&lt;ref$&lt;str$&gt;,usize,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::multi::many0_count::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::escaped::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt;,ref$ (15 samples, 0.16%)</title><rect x="56.5137%" y="901" width="0.1627%" height="15" fill="rgb(252,161,33)" fg:x="5210" fg:w="15"/><text x="56.7637%" y="911.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::escaped::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt;,ref$ (15 samples, 0.16%)</title><rect x="56.5137%" y="885" width="0.1627%" height="15" fill="rgb(226,146,40)" fg:x="5210" fg:w="15"/><text x="56.7637%" y="895.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$6::offset (1 samples, 0.01%)</title><rect x="56.6656%" y="869" width="0.0108%" height="15" fill="rgb(219,47,25)" fg:x="5224" fg:w="1"/><text x="56.9156%" y="879.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$2::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::one_of::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (1 samples, 0.01%)</title><rect x="56.6981%" y="885" width="0.0108%" height="15" fill="rgb(250,135,13)" fg:x="5227" fg:w="1"/><text x="56.9481%" y="895.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (1 samples, 0.01%)</title><rect x="56.6981%" y="869" width="0.0108%" height="15" fill="rgb(219,229,18)" fg:x="5227" fg:w="1"/><text x="56.9481%" y="879.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="56.6981%" y="853" width="0.0108%" height="15" fill="rgb(217,152,27)" fg:x="5227" fg:w="1"/><text x="56.9481%" y="863.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (132 samples, 1.43%)</title><rect x="55.3639%" y="933" width="1.4318%" height="15" fill="rgb(225,71,47)" fg:x="5104" fg:w="132"/><text x="55.6139%" y="943.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;char,ref$&lt;str$&gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (11 samples, 0.12%)</title><rect x="56.6764%" y="917" width="0.1193%" height="15" fill="rgb(220,139,14)" fg:x="5225" fg:w="11"/><text x="56.9264%" y="927.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (9 samples, 0.10%)</title><rect x="56.6981%" y="901" width="0.0976%" height="15" fill="rgb(247,54,32)" fg:x="5227" fg:w="9"/><text x="56.9481%" y="911.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,char&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (8 samples, 0.09%)</title><rect x="56.7090%" y="885" width="0.0868%" height="15" fill="rgb(252,131,39)" fg:x="5228" fg:w="8"/><text x="56.9590%" y="895.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$32::find_token (7 samples, 0.08%)</title><rect x="56.7198%" y="869" width="0.0759%" height="15" fill="rgb(210,108,39)" fg:x="5229" fg:w="7"/><text x="56.9698%" y="879.50"></text></g><g><title>VCRUNTIME140`memcpy (18 samples, 0.20%)</title><rect x="57.2188%" y="917" width="0.1952%" height="15" fill="rgb(205,23,29)" fg:x="5275" fg:w="18"/><text x="57.4688%" y="927.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (5 samples, 0.05%)</title><rect x="57.4466%" y="901" width="0.0542%" height="15" fill="rgb(246,139,46)" fg:x="5296" fg:w="5"/><text x="57.6966%" y="911.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.01%)</title><rect x="57.4900%" y="885" width="0.0108%" height="15" fill="rgb(250,81,26)" fg:x="5300" fg:w="1"/><text x="57.7400%" y="895.50"></text></g><g><title>ntdll`RtlFreeHeap (17 samples, 0.18%)</title><rect x="57.4140%" y="917" width="0.1844%" height="15" fill="rgb(214,104,7)" fg:x="5293" fg:w="17"/><text x="57.6640%" y="927.50"></text></g><g><title>ntdll`memset (9 samples, 0.10%)</title><rect x="57.5008%" y="901" width="0.0976%" height="15" fill="rgb(233,189,8)" fg:x="5301" fg:w="9"/><text x="57.7508%" y="911.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.01%)</title><rect x="57.5876%" y="885" width="0.0108%" height="15" fill="rgb(228,141,17)" fg:x="5309" fg:w="1"/><text x="57.8376%" y="895.50"></text></g><g><title>ntdll`RtlAllocateHeap (3 samples, 0.03%)</title><rect x="57.5984%" y="837" width="0.0325%" height="15" fill="rgb(247,157,1)" fg:x="5310" fg:w="3"/><text x="57.8484%" y="847.50"></text></g><g><title>ntdll`RtlAllocateHeap (3 samples, 0.03%)</title><rect x="57.5984%" y="821" width="0.0325%" height="15" fill="rgb(249,225,5)" fg:x="5310" fg:w="3"/><text x="57.8484%" y="831.50"></text></g><g><title>ntdll`RtlCreateTimer (1 samples, 0.01%)</title><rect x="57.6201%" y="805" width="0.0108%" height="15" fill="rgb(242,55,13)" fg:x="5312" fg:w="1"/><text x="57.8701%" y="815.50"></text></g><g><title>ntdll`RtlFreeHeap (1 samples, 0.01%)</title><rect x="57.6310%" y="837" width="0.0108%" height="15" fill="rgb(230,49,50)" fg:x="5313" fg:w="1"/><text x="57.8810%" y="847.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.01%)</title><rect x="57.6310%" y="821" width="0.0108%" height="15" fill="rgb(241,111,38)" fg:x="5313" fg:w="1"/><text x="57.8810%" y="831.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.01%)</title><rect x="57.6310%" y="805" width="0.0108%" height="15" fill="rgb(252,155,4)" fg:x="5313" fg:w="1"/><text x="57.8810%" y="815.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::RawVec&lt;enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,alloc::alloc::Global&gt;::reserve_for_push&lt;enum2$ (6 samples, 0.07%)</title><rect x="57.5984%" y="917" width="0.0651%" height="15" fill="rgb(212,69,32)" fg:x="5310" fg:w="6"/><text x="57.8484%" y="927.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::finish_grow (6 samples, 0.07%)</title><rect x="57.5984%" y="901" width="0.0651%" height="15" fill="rgb(243,107,47)" fg:x="5310" fg:w="6"/><text x="57.8484%" y="911.50"></text></g><g><title>ntdll`RtlReAllocateHeap (6 samples, 0.07%)</title><rect x="57.5984%" y="885" width="0.0651%" height="15" fill="rgb(247,130,12)" fg:x="5310" fg:w="6"/><text x="57.8484%" y="895.50"></text></g><g><title>ntdll`RtlReAllocateHeap (6 samples, 0.07%)</title><rect x="57.5984%" y="869" width="0.0651%" height="15" fill="rgb(233,74,16)" fg:x="5310" fg:w="6"/><text x="57.8484%" y="879.50"></text></g><g><title>ntdll`RtlReleaseSRWLockShared (6 samples, 0.07%)</title><rect x="57.5984%" y="853" width="0.0651%" height="15" fill="rgb(208,58,18)" fg:x="5310" fg:w="6"/><text x="57.8484%" y="863.50"></text></g><g><title>ntdll`memcpy (2 samples, 0.02%)</title><rect x="57.6418%" y="837" width="0.0217%" height="15" fill="rgb(242,225,1)" fg:x="5314" fg:w="2"/><text x="57.8918%" y="847.50"></text></g><g><title>ntdll`RtlCreateTimer (16 samples, 0.17%)</title><rect x="58.4988%" y="853" width="0.1736%" height="15" fill="rgb(249,39,40)" fg:x="5393" fg:w="16"/><text x="58.7488%" y="863.50"></text></g><g><title>ntdll`RtlSetUserValueHeap (3 samples, 0.03%)</title><rect x="58.6723%" y="853" width="0.0325%" height="15" fill="rgb(207,72,44)" fg:x="5409" fg:w="3"/><text x="58.9223%" y="863.50"></text></g><g><title>ntdll`RtlAllocateHeap (91 samples, 0.99%)</title><rect x="57.7395%" y="885" width="0.9871%" height="15" fill="rgb(215,193,12)" fg:x="5323" fg:w="91"/><text x="57.9895%" y="895.50"></text></g><g><title>ntdll`RtlAllocateHeap (80 samples, 0.87%)</title><rect x="57.8588%" y="869" width="0.8678%" height="15" fill="rgb(248,41,39)" fg:x="5334" fg:w="80"/><text x="58.1088%" y="879.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (2 samples, 0.02%)</title><rect x="58.7048%" y="853" width="0.0217%" height="15" fill="rgb(253,85,4)" fg:x="5412" fg:w="2"/><text x="58.9548%" y="863.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (2 samples, 0.02%)</title><rect x="58.7048%" y="837" width="0.0217%" height="15" fill="rgb(243,70,31)" fg:x="5412" fg:w="2"/><text x="58.9548%" y="847.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.02%)</title><rect x="58.7048%" y="821" width="0.0217%" height="15" fill="rgb(253,195,26)" fg:x="5412" fg:w="2"/><text x="58.9548%" y="831.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.02%)</title><rect x="58.7048%" y="805" width="0.0217%" height="15" fill="rgb(243,42,11)" fg:x="5412" fg:w="2"/><text x="58.9548%" y="815.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.01%)</title><rect x="58.7157%" y="789" width="0.0108%" height="15" fill="rgb(239,66,17)" fg:x="5413" fg:w="1"/><text x="58.9657%" y="799.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.01%)</title><rect x="58.7157%" y="773" width="0.0108%" height="15" fill="rgb(217,132,21)" fg:x="5413" fg:w="1"/><text x="58.9657%" y="783.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.01%)</title><rect x="58.7157%" y="757" width="0.0108%" height="15" fill="rgb(252,202,21)" fg:x="5413" fg:w="1"/><text x="58.9657%" y="767.50"></text></g><g><title>ntdll`RtlReAllocateHeap (1 samples, 0.01%)</title><rect x="58.7265%" y="885" width="0.0108%" height="15" fill="rgb(233,98,36)" fg:x="5414" fg:w="1"/><text x="58.9765%" y="895.50"></text></g><g><title>ntdll`RtlReAllocateHeap (1 samples, 0.01%)</title><rect x="58.7265%" y="869" width="0.0108%" height="15" fill="rgb(216,153,54)" fg:x="5414" fg:w="1"/><text x="58.9765%" y="879.50"></text></g><g><title>ntdll`RtlReleaseSRWLockShared (1 samples, 0.01%)</title><rect x="58.7265%" y="853" width="0.0108%" height="15" fill="rgb(250,99,7)" fg:x="5414" fg:w="1"/><text x="58.9765%" y="863.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="58.7265%" y="837" width="0.0108%" height="15" fill="rgb(207,56,50)" fg:x="5414" fg:w="1"/><text x="58.9765%" y="847.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="58.7265%" y="821" width="0.0108%" height="15" fill="rgb(244,61,34)" fg:x="5414" fg:w="1"/><text x="58.9765%" y="831.50"></text></g><g><title>ntdll`RtlSetUserValueHeap (1 samples, 0.01%)</title><rect x="58.7265%" y="805" width="0.0108%" height="15" fill="rgb(241,50,38)" fg:x="5414" fg:w="1"/><text x="58.9765%" y="815.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::RawVec&lt;stelpatch::cw_model::PropertyInfo,alloc::alloc::Global&gt;::reserve_for_push (101 samples, 1.10%)</title><rect x="57.6635%" y="917" width="1.0956%" height="15" fill="rgb(212,166,30)" fg:x="5316" fg:w="101"/><text x="57.9135%" y="927.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::finish_grow (96 samples, 1.04%)</title><rect x="57.7178%" y="901" width="1.0413%" height="15" fill="rgb(249,127,32)" fg:x="5321" fg:w="96"/><text x="57.9678%" y="911.50"></text></g><g><title>stelpatch-benchmark`std::alloc::__default_lib_allocator::__rdl_alloc (2 samples, 0.02%)</title><rect x="58.7374%" y="885" width="0.0217%" height="15" fill="rgb(209,103,0)" fg:x="5415" fg:w="2"/><text x="58.9874%" y="895.50"></text></g><g><title>VCRUNTIME140`memcmp (1 samples, 0.01%)</title><rect x="58.8350%" y="901" width="0.0108%" height="15" fill="rgb(238,209,51)" fg:x="5424" fg:w="1"/><text x="59.0850%" y="911.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState,ref$&lt;ref$ (27 samples, 0.29%)</title><rect x="58.8459%" y="901" width="0.2929%" height="15" fill="rgb(237,56,23)" fg:x="5425" fg:w="27"/><text x="59.0959%" y="911.50"></text></g><g><title>stelpatch-benchmark`core::hash::sip::impl$5::write (18 samples, 0.20%)</title><rect x="58.9435%" y="885" width="0.1952%" height="15" fill="rgb(215,153,46)" fg:x="5434" fg:w="18"/><text x="59.1935%" y="895.50"></text></g><g><title>ntdll`RtlCreateTimer (5 samples, 0.05%)</title><rect x="59.4099%" y="853" width="0.0542%" height="15" fill="rgb(224,49,31)" fg:x="5477" fg:w="5"/><text x="59.6599%" y="863.50"></text></g><g><title>ntdll`RtlCreateTimer (1 samples, 0.01%)</title><rect x="59.4533%" y="837" width="0.0108%" height="15" fill="rgb(250,18,42)" fg:x="5481" fg:w="1"/><text x="59.7033%" y="847.50"></text></g><g><title>ntdll`RtlSetUserValueHeap (6 samples, 0.07%)</title><rect x="59.4642%" y="853" width="0.0651%" height="15" fill="rgb(215,176,39)" fg:x="5482" fg:w="6"/><text x="59.7142%" y="863.50"></text></g><g><title>ntdll`RtlAllocateHeap (31 samples, 0.34%)</title><rect x="59.2364%" y="885" width="0.3363%" height="15" fill="rgb(223,77,29)" fg:x="5461" fg:w="31"/><text x="59.4864%" y="895.50"></text></g><g><title>ntdll`RtlAllocateHeap (27 samples, 0.29%)</title><rect x="59.2797%" y="869" width="0.2929%" height="15" fill="rgb(234,94,52)" fg:x="5465" fg:w="27"/><text x="59.5297%" y="879.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (4 samples, 0.04%)</title><rect x="59.5292%" y="853" width="0.0434%" height="15" fill="rgb(220,154,50)" fg:x="5488" fg:w="4"/><text x="59.7792%" y="863.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (3 samples, 0.03%)</title><rect x="59.5401%" y="837" width="0.0325%" height="15" fill="rgb(212,11,10)" fg:x="5489" fg:w="3"/><text x="59.7901%" y="847.50"></text></g><g><title>ntdll`RtlAllocateHeap (3 samples, 0.03%)</title><rect x="59.5401%" y="821" width="0.0325%" height="15" fill="rgb(205,166,19)" fg:x="5489" fg:w="3"/><text x="59.7901%" y="831.50"></text></g><g><title>ntdll`RtlAllocateHeap (3 samples, 0.03%)</title><rect x="59.5401%" y="805" width="0.0325%" height="15" fill="rgb(244,198,16)" fg:x="5489" fg:w="3"/><text x="59.7901%" y="815.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.01%)</title><rect x="59.5618%" y="789" width="0.0108%" height="15" fill="rgb(219,69,12)" fg:x="5491" fg:w="1"/><text x="59.8118%" y="799.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.01%)</title><rect x="59.5618%" y="773" width="0.0108%" height="15" fill="rgb(245,30,7)" fg:x="5491" fg:w="1"/><text x="59.8118%" y="783.50"></text></g><g><title>ntdll`RtlFreeHeap (2 samples, 0.02%)</title><rect x="59.5726%" y="885" width="0.0217%" height="15" fill="rgb(218,221,48)" fg:x="5492" fg:w="2"/><text x="59.8226%" y="895.50"></text></g><g><title>ntdll`memset (2 samples, 0.02%)</title><rect x="59.5726%" y="869" width="0.0217%" height="15" fill="rgb(216,66,15)" fg:x="5492" fg:w="2"/><text x="59.8226%" y="879.50"></text></g><g><title>stelpatch-benchmark`hashbrown::map::HashMap&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedPropertyInfoList,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::rustc_entry&lt;ref$ (79 samples, 0.86%)</title><rect x="58.7591%" y="917" width="0.8569%" height="15" fill="rgb(226,122,50)" fg:x="5417" fg:w="79"/><text x="59.0091%" y="927.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedPropertyInfoList&gt;,alloc::alloc::Global&gt;::reserve_rehash&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedPropertyInfoList&gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;ref$&lt;str$&gt;,ref$ (44 samples, 0.48%)</title><rect x="59.1387%" y="901" width="0.4773%" height="15" fill="rgb(239,156,16)" fg:x="5452" fg:w="44"/><text x="59.3887%" y="911.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState,ref$&lt;ref$ (2 samples, 0.02%)</title><rect x="59.5943%" y="885" width="0.0217%" height="15" fill="rgb(224,27,38)" fg:x="5494" fg:w="2"/><text x="59.8443%" y="895.50"></text></g><g><title>stelpatch-benchmark`core::hash::sip::impl$5::write (2 samples, 0.02%)</title><rect x="59.5943%" y="869" width="0.0217%" height="15" fill="rgb(224,39,27)" fg:x="5494" fg:w="2"/><text x="59.8443%" y="879.50"></text></g><g><title>VCRUNTIME140`memcpy (18 samples, 0.20%)</title><rect x="59.7136%" y="901" width="0.1952%" height="15" fill="rgb(215,92,29)" fg:x="5505" fg:w="18"/><text x="59.9636%" y="911.50"></text></g><g><title>ntdll`RtlAllocateHeap (15 samples, 0.16%)</title><rect x="59.9414%" y="869" width="0.1627%" height="15" fill="rgb(207,159,16)" fg:x="5526" fg:w="15"/><text x="60.1914%" y="879.50"></text></g><g><title>ntdll`RtlAllocateHeap (8 samples, 0.09%)</title><rect x="60.0174%" y="853" width="0.0868%" height="15" fill="rgb(238,163,47)" fg:x="5533" fg:w="8"/><text x="60.2674%" y="863.50"></text></g><g><title>ntdll`RtlSetUserValueHeap (2 samples, 0.02%)</title><rect x="60.0824%" y="837" width="0.0217%" height="15" fill="rgb(219,91,49)" fg:x="5539" fg:w="2"/><text x="60.3324%" y="847.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.01%)</title><rect x="60.1258%" y="789" width="0.0108%" height="15" fill="rgb(227,167,31)" fg:x="5543" fg:w="1"/><text x="60.3758%" y="799.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.01%)</title><rect x="60.1258%" y="773" width="0.0108%" height="15" fill="rgb(234,80,54)" fg:x="5543" fg:w="1"/><text x="60.3758%" y="783.50"></text></g><g><title>ntdll`NtAllocateVirtualMemory (1 samples, 0.01%)</title><rect x="60.1258%" y="757" width="0.0108%" height="15" fill="rgb(212,114,2)" fg:x="5543" fg:w="1"/><text x="60.3758%" y="767.50"></text></g><g><title>ntdll`RtlAllocateHeap (3 samples, 0.03%)</title><rect x="60.1150%" y="821" width="0.0325%" height="15" fill="rgb(234,50,24)" fg:x="5542" fg:w="3"/><text x="60.3650%" y="831.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.02%)</title><rect x="60.1258%" y="805" width="0.0217%" height="15" fill="rgb(221,68,8)" fg:x="5543" fg:w="2"/><text x="60.3758%" y="815.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.01%)</title><rect x="60.1367%" y="789" width="0.0108%" height="15" fill="rgb(254,180,31)" fg:x="5544" fg:w="1"/><text x="60.3867%" y="799.50"></text></g><g><title>ntdll`ExpInterlockedPopEntrySListEnd (1 samples, 0.01%)</title><rect x="60.1367%" y="773" width="0.0108%" height="15" fill="rgb(247,130,50)" fg:x="5544" fg:w="1"/><text x="60.3867%" y="783.50"></text></g><g><title>ntdll`RtlFreeHeap (3 samples, 0.03%)</title><rect x="60.1475%" y="821" width="0.0325%" height="15" fill="rgb(211,109,4)" fg:x="5545" fg:w="3"/><text x="60.3975%" y="831.50"></text></g><g><title>ntdll`memset (3 samples, 0.03%)</title><rect x="60.1475%" y="805" width="0.0325%" height="15" fill="rgb(238,50,21)" fg:x="5545" fg:w="3"/><text x="60.3975%" y="815.50"></text></g><g><title>ntdll`RtlEqualUnicodeString (1 samples, 0.01%)</title><rect x="60.1692%" y="789" width="0.0108%" height="15" fill="rgb(225,57,45)" fg:x="5547" fg:w="1"/><text x="60.4192%" y="799.50"></text></g><g><title>ntdll`RtlSetUserValueHeap (1 samples, 0.01%)</title><rect x="60.1692%" y="773" width="0.0108%" height="15" fill="rgb(209,196,50)" fg:x="5547" fg:w="1"/><text x="60.4192%" y="783.50"></text></g><g><title>ntdll`RtlFreeHeap (1 samples, 0.01%)</title><rect x="60.1692%" y="757" width="0.0108%" height="15" fill="rgb(242,140,13)" fg:x="5547" fg:w="1"/><text x="60.4192%" y="767.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.01%)</title><rect x="60.1692%" y="741" width="0.0108%" height="15" fill="rgb(217,111,7)" fg:x="5547" fg:w="1"/><text x="60.4192%" y="751.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.01%)</title><rect x="60.1692%" y="725" width="0.0108%" height="15" fill="rgb(253,193,51)" fg:x="5547" fg:w="1"/><text x="60.4192%" y="735.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.01%)</title><rect x="60.1692%" y="709" width="0.0108%" height="15" fill="rgb(252,70,29)" fg:x="5547" fg:w="1"/><text x="60.4192%" y="719.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.01%)</title><rect x="60.1692%" y="693" width="0.0108%" height="15" fill="rgb(232,127,12)" fg:x="5547" fg:w="1"/><text x="60.4192%" y="703.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.01%)</title><rect x="60.1692%" y="677" width="0.0108%" height="15" fill="rgb(211,180,21)" fg:x="5547" fg:w="1"/><text x="60.4192%" y="687.50"></text></g><g><title>ntdll`TpWaitForWait (1 samples, 0.01%)</title><rect x="60.1692%" y="661" width="0.0108%" height="15" fill="rgb(229,72,13)" fg:x="5547" fg:w="1"/><text x="60.4192%" y="671.50"></text></g><g><title>ntdll`NtFreeVirtualMemory (1 samples, 0.01%)</title><rect x="60.1692%" y="645" width="0.0108%" height="15" fill="rgb(240,211,49)" fg:x="5547" fg:w="1"/><text x="60.4192%" y="655.50"></text></g><g><title>ntdll`RtlReAllocateHeap (9 samples, 0.10%)</title><rect x="60.1041%" y="869" width="0.0976%" height="15" fill="rgb(219,149,40)" fg:x="5541" fg:w="9"/><text x="60.3541%" y="879.50"></text></g><g><title>ntdll`RtlReAllocateHeap (9 samples, 0.10%)</title><rect x="60.1041%" y="853" width="0.0976%" height="15" fill="rgb(210,127,46)" fg:x="5541" fg:w="9"/><text x="60.3541%" y="863.50"></text></g><g><title>ntdll`RtlReleaseSRWLockShared (8 samples, 0.09%)</title><rect x="60.1150%" y="837" width="0.0868%" height="15" fill="rgb(220,106,7)" fg:x="5542" fg:w="8"/><text x="60.3650%" y="847.50"></text></g><g><title>ntdll`memcpy (2 samples, 0.02%)</title><rect x="60.1801%" y="821" width="0.0217%" height="15" fill="rgb(249,31,22)" fg:x="5548" fg:w="2"/><text x="60.4301%" y="831.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::RawVec&lt;enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,alloc::alloc::Global&gt;::reserve_for_push&lt;enum2$ (29 samples, 0.31%)</title><rect x="59.9089%" y="901" width="0.3146%" height="15" fill="rgb(253,1,49)" fg:x="5523" fg:w="29"/><text x="60.1589%" y="911.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::finish_grow (27 samples, 0.29%)</title><rect x="59.9306%" y="885" width="0.2929%" height="15" fill="rgb(227,144,33)" fg:x="5525" fg:w="27"/><text x="60.1806%" y="895.50"></text></g><g><title>stelpatch-benchmark`std::alloc::__default_lib_allocator::__rdl_alloc (2 samples, 0.02%)</title><rect x="60.2018%" y="869" width="0.0217%" height="15" fill="rgb(249,163,44)" fg:x="5550" fg:w="2"/><text x="60.4518%" y="879.50"></text></g><g><title>VCRUNTIME140`memcpy (31 samples, 0.34%)</title><rect x="60.2777%" y="885" width="0.3363%" height="15" fill="rgb(234,15,39)" fg:x="5557" fg:w="31"/><text x="60.5277%" y="895.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (4 samples, 0.04%)</title><rect x="60.6248%" y="869" width="0.0434%" height="15" fill="rgb(207,66,16)" fg:x="5589" fg:w="4"/><text x="60.8748%" y="879.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (2 samples, 0.02%)</title><rect x="60.6465%" y="853" width="0.0217%" height="15" fill="rgb(233,112,24)" fg:x="5591" fg:w="2"/><text x="60.8965%" y="863.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="60.6899%" y="821" width="0.0108%" height="15" fill="rgb(230,90,22)" fg:x="5595" fg:w="1"/><text x="60.9399%" y="831.50"></text></g><g><title>stelpatch-benchmark`core::ops::function::FnMut::call_mut&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),tuple$&lt;ref$ (3 samples, 0.03%)</title><rect x="60.6790%" y="853" width="0.0325%" height="15" fill="rgb(229,61,13)" fg:x="5594" fg:w="3"/><text x="60.9290%" y="863.50"></text></g><g><title>stelpatch-benchmark`nom::sequence::impl$3::parse&lt;ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;char&gt; &gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;tuple$&lt;char,ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,ref$&lt;str$&gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (2 samples, 0.02%)</title><rect x="60.6899%" y="837" width="0.0217%" height="15" fill="rgb(225,57,24)" fg:x="5595" fg:w="2"/><text x="60.9399%" y="847.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::digit1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="60.7007%" y="821" width="0.0108%" height="15" fill="rgb(208,169,48)" fg:x="5596" fg:w="1"/><text x="60.9507%" y="831.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$2::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::one_of::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (3 samples, 0.03%)</title><rect x="60.7550%" y="805" width="0.0325%" height="15" fill="rgb(244,218,51)" fg:x="5601" fg:w="3"/><text x="61.0050%" y="815.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (3 samples, 0.03%)</title><rect x="60.7550%" y="789" width="0.0325%" height="15" fill="rgb(214,148,10)" fg:x="5601" fg:w="3"/><text x="61.0050%" y="799.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="60.7767%" y="773" width="0.0108%" height="15" fill="rgb(225,174,27)" fg:x="5603" fg:w="1"/><text x="61.0267%" y="783.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$130::slice (8 samples, 0.09%)</title><rect x="60.9285%" y="789" width="0.0868%" height="15" fill="rgb(230,96,26)" fg:x="5617" fg:w="8"/><text x="61.1785%" y="799.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (102 samples, 1.11%)</title><rect x="60.7116%" y="853" width="1.1064%" height="15" fill="rgb(232,10,30)" fg:x="5597" fg:w="102"/><text x="60.9616%" y="863.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (102 samples, 1.11%)</title><rect x="60.7116%" y="837" width="1.1064%" height="15" fill="rgb(222,8,50)" fg:x="5597" fg:w="102"/><text x="60.9616%" y="847.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (102 samples, 1.11%)</title><rect x="60.7116%" y="821" width="1.1064%" height="15" fill="rgb(213,81,27)" fg:x="5597" fg:w="102"/><text x="60.9616%" y="831.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,char&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (95 samples, 1.03%)</title><rect x="60.7875%" y="805" width="1.0305%" height="15" fill="rgb(245,50,10)" fg:x="5604" fg:w="95"/><text x="61.0375%" y="815.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$32::find_token (74 samples, 0.80%)</title><rect x="61.0153%" y="789" width="0.8027%" height="15" fill="rgb(216,100,18)" fg:x="5625" fg:w="74"/><text x="61.2653%" y="799.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::RawVec&lt;stelpatch::cw_model::PropertyInfo,alloc::alloc::Global&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="61.8288%" y="837" width="0.0108%" height="15" fill="rgb(236,147,54)" fg:x="5700" fg:w="1"/><text x="62.0788%" y="847.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="61.8288%" y="821" width="0.0108%" height="15" fill="rgb(205,143,26)" fg:x="5700" fg:w="1"/><text x="62.0788%" y="831.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="61.8288%" y="805" width="0.0108%" height="15" fill="rgb(236,26,9)" fg:x="5700" fg:w="1"/><text x="62.0788%" y="815.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState,ref$&lt;ref$ (1 samples, 0.01%)</title><rect x="61.8397%" y="821" width="0.0108%" height="15" fill="rgb(221,165,53)" fg:x="5701" fg:w="1"/><text x="62.0897%" y="831.50"></text></g><g><title>VCRUNTIME140`memset (1 samples, 0.01%)</title><rect x="61.8505%" y="805" width="0.0108%" height="15" fill="rgb(214,110,17)" fg:x="5702" fg:w="1"/><text x="62.1005%" y="815.50"></text></g><g><title>stelpatch-benchmark`hashbrown::map::HashMap&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedPropertyInfoList,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::rustc_entry&lt;ref$ (3 samples, 0.03%)</title><rect x="61.8397%" y="837" width="0.0325%" height="15" fill="rgb(237,197,12)" fg:x="5701" fg:w="3"/><text x="62.0897%" y="847.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedPropertyInfoList&gt;,alloc::alloc::Global&gt;::reserve_rehash&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedPropertyInfoList&gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;ref$&lt;str$&gt;,ref$ (2 samples, 0.02%)</title><rect x="61.8505%" y="821" width="0.0217%" height="15" fill="rgb(205,84,17)" fg:x="5702" fg:w="2"/><text x="62.1005%" y="831.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="61.8614%" y="805" width="0.0108%" height="15" fill="rgb(237,18,45)" fg:x="5703" fg:w="1"/><text x="62.1114%" y="815.50"></text></g><g><title>stelpatch-benchmark`core::ops::function::FnMut::call_mut&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),tuple$&lt;ref$ (1 samples, 0.01%)</title><rect x="61.8722%" y="757" width="0.0108%" height="15" fill="rgb(221,87,14)" fg:x="5704" fg:w="1"/><text x="62.1222%" y="767.50"></text></g><g><title>stelpatch-benchmark`nom::sequence::impl$3::parse&lt;ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;char&gt; &gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;tuple$&lt;char,ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,ref$&lt;str$&gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (1 samples, 0.01%)</title><rect x="61.8722%" y="741" width="0.0108%" height="15" fill="rgb(238,186,15)" fg:x="5704" fg:w="1"/><text x="62.1222%" y="751.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$2::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::one_of::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (3 samples, 0.03%)</title><rect x="61.8831%" y="709" width="0.0325%" height="15" fill="rgb(208,115,11)" fg:x="5705" fg:w="3"/><text x="62.1331%" y="719.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (2 samples, 0.02%)</title><rect x="61.8939%" y="693" width="0.0217%" height="15" fill="rgb(254,175,0)" fg:x="5706" fg:w="2"/><text x="62.1439%" y="703.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="61.9048%" y="677" width="0.0108%" height="15" fill="rgb(227,24,42)" fg:x="5707" fg:w="1"/><text x="62.1548%" y="687.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$130::slice (3 samples, 0.03%)</title><rect x="61.9265%" y="693" width="0.0325%" height="15" fill="rgb(223,211,37)" fg:x="5709" fg:w="3"/><text x="62.1765%" y="703.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$5::choice&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(stelpatch::cw_parser::parser::ParsedEntity)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(ref$&lt;str$&gt;)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),stelpatch::cw_parser::parser::script_value::closure_env$0&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result (10 samples, 0.11%)</title><rect x="61.8722%" y="773" width="0.1085%" height="15" fill="rgb(235,49,27)" fg:x="5704" fg:w="10"/><text x="62.1222%" y="783.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (9 samples, 0.10%)</title><rect x="61.8831%" y="757" width="0.0976%" height="15" fill="rgb(254,97,51)" fg:x="5705" fg:w="9"/><text x="62.1331%" y="767.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (9 samples, 0.10%)</title><rect x="61.8831%" y="741" width="0.0976%" height="15" fill="rgb(249,51,40)" fg:x="5705" fg:w="9"/><text x="62.1331%" y="751.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (9 samples, 0.10%)</title><rect x="61.8831%" y="725" width="0.0976%" height="15" fill="rgb(210,128,45)" fg:x="5705" fg:w="9"/><text x="62.1331%" y="735.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,char&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (6 samples, 0.07%)</title><rect x="61.9156%" y="709" width="0.0651%" height="15" fill="rgb(224,137,50)" fg:x="5708" fg:w="6"/><text x="62.1656%" y="719.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$32::find_token (2 samples, 0.02%)</title><rect x="61.9590%" y="693" width="0.0217%" height="15" fill="rgb(242,15,9)" fg:x="5712" fg:w="2"/><text x="62.2090%" y="703.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="61.9807%" y="773" width="0.0108%" height="15" fill="rgb(233,187,41)" fg:x="5714" fg:w="1"/><text x="62.2307%" y="783.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$8::choice&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="61.9807%" y="757" width="0.0108%" height="15" fill="rgb(227,2,29)" fg:x="5714" fg:w="1"/><text x="62.2307%" y="767.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (1 samples, 0.01%)</title><rect x="61.9915%" y="757" width="0.0108%" height="15" fill="rgb(222,70,3)" fg:x="5715" fg:w="1"/><text x="62.2415%" y="767.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (1 samples, 0.01%)</title><rect x="61.9915%" y="741" width="0.0108%" height="15" fill="rgb(213,11,42)" fg:x="5715" fg:w="1"/><text x="62.2415%" y="751.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,char&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (1 samples, 0.01%)</title><rect x="61.9915%" y="725" width="0.0108%" height="15" fill="rgb(225,150,9)" fg:x="5715" fg:w="1"/><text x="62.2415%" y="735.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$32::find_token (1 samples, 0.01%)</title><rect x="61.9915%" y="709" width="0.0108%" height="15" fill="rgb(230,162,45)" fg:x="5715" fg:w="1"/><text x="62.2415%" y="719.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;alloc::vec::Vec&lt;enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,alloc::alloc::Global&gt;,char&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::cut::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;alloc::vec::Vec&lt;enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,alloc::alloc::Global&gt;,char&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::multi::many_till::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedExpression)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context (13 samples, 0.14%)</title><rect x="61.8722%" y="837" width="0.1410%" height="15" fill="rgb(222,14,52)" fg:x="5704" fg:w="13"/><text x="62.1222%" y="847.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$2::choice&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedExpression)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedConditionalBlock,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedConditionalBlock&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedConditionalBlock)&gt;,enum2$ (13 samples, 0.14%)</title><rect x="61.8722%" y="821" width="0.1410%" height="15" fill="rgb(254,198,14)" fg:x="5704" fg:w="13"/><text x="62.1222%" y="831.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedExpression)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$ (13 samples, 0.14%)</title><rect x="61.8722%" y="805" width="0.1410%" height="15" fill="rgb(220,217,30)" fg:x="5704" fg:w="13"/><text x="62.1222%" y="815.50"></text></g><g><title>stelpatch-benchmark`core::ops::function::FnMut::call_mut&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),tuple$&lt;ref$ (13 samples, 0.14%)</title><rect x="61.8722%" y="789" width="0.1410%" height="15" fill="rgb(215,146,41)" fg:x="5704" fg:w="13"/><text x="62.1222%" y="799.50"></text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::with_opt_trailing_ws::closure$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (2 samples, 0.02%)</title><rect x="61.9915%" y="773" width="0.0217%" height="15" fill="rgb(217,27,36)" fg:x="5715" fg:w="2"/><text x="62.2415%" y="783.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (1 samples, 0.01%)</title><rect x="62.0024%" y="757" width="0.0108%" height="15" fill="rgb(219,218,39)" fg:x="5716" fg:w="1"/><text x="62.2524%" y="767.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$ (131 samples, 1.42%)</title><rect x="60.6139%" y="885" width="1.4210%" height="15" fill="rgb(219,4,42)" fg:x="5588" fg:w="131"/><text x="60.8639%" y="895.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$5::choice&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(stelpatch::cw_parser::parser::ParsedEntity)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(ref$&lt;str$&gt;)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),stelpatch::cw_parser::parser::script_value::closure_env$0&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result (126 samples, 1.37%)</title><rect x="60.6682%" y="869" width="1.3667%" height="15" fill="rgb(249,119,36)" fg:x="5593" fg:w="126"/><text x="60.9182%" y="879.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (20 samples, 0.22%)</title><rect x="61.8180%" y="853" width="0.2169%" height="15" fill="rgb(209,23,33)" fg:x="5699" fg:w="20"/><text x="62.0680%" y="863.50"></text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::with_opt_trailing_ws::closure$0&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,char,nom::error::Error&lt;ref$ (2 samples, 0.02%)</title><rect x="62.0132%" y="837" width="0.0217%" height="15" fill="rgb(211,10,0)" fg:x="5717" fg:w="2"/><text x="62.2632%" y="847.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (2 samples, 0.02%)</title><rect x="62.0132%" y="821" width="0.0217%" height="15" fill="rgb(208,99,37)" fg:x="5717" fg:w="2"/><text x="62.2632%" y="831.50"></text></g><g><title>VCRUNTIME140`memcpy (30 samples, 0.33%)</title><rect x="62.1651%" y="869" width="0.3254%" height="15" fill="rgb(213,132,31)" fg:x="5731" fg:w="30"/><text x="62.4151%" y="879.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$2::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::one_of::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (4 samples, 0.04%)</title><rect x="62.7942%" y="821" width="0.0434%" height="15" fill="rgb(243,129,40)" fg:x="5789" fg:w="4"/><text x="63.0442%" y="831.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (2 samples, 0.02%)</title><rect x="62.8159%" y="805" width="0.0217%" height="15" fill="rgb(210,66,33)" fg:x="5791" fg:w="2"/><text x="63.0659%" y="815.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="62.8268%" y="789" width="0.0108%" height="15" fill="rgb(209,189,4)" fg:x="5792" fg:w="1"/><text x="63.0768%" y="799.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="62.8919%" y="805" width="0.0108%" height="15" fill="rgb(214,107,37)" fg:x="5798" fg:w="1"/><text x="63.1419%" y="815.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;char,ref$&lt;str$&gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (2 samples, 0.02%)</title><rect x="62.9027%" y="805" width="0.0217%" height="15" fill="rgb(245,88,54)" fg:x="5799" fg:w="2"/><text x="63.1527%" y="815.50"></text></g><g><title>stelpatch-benchmark`core::ops::function::FnMut::call_mut&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),tuple$&lt;ref$ (25 samples, 0.27%)</title><rect x="62.7183%" y="837" width="0.2712%" height="15" fill="rgb(205,146,20)" fg:x="5782" fg:w="25"/><text x="62.9683%" y="847.50"></text></g><g><title>stelpatch-benchmark`nom::sequence::impl$3::parse&lt;ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;char&gt; &gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;tuple$&lt;char,ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,ref$&lt;str$&gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (14 samples, 0.15%)</title><rect x="62.8376%" y="821" width="0.1519%" height="15" fill="rgb(220,161,25)" fg:x="5793" fg:w="14"/><text x="63.0876%" y="831.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::digit1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (6 samples, 0.07%)</title><rect x="62.9244%" y="805" width="0.0651%" height="15" fill="rgb(215,152,15)" fg:x="5801" fg:w="6"/><text x="63.1744%" y="815.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$2::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::one_of::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (2 samples, 0.02%)</title><rect x="63.0546%" y="805" width="0.0217%" height="15" fill="rgb(233,192,44)" fg:x="5813" fg:w="2"/><text x="63.3046%" y="815.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (2 samples, 0.02%)</title><rect x="63.0546%" y="789" width="0.0217%" height="15" fill="rgb(240,170,46)" fg:x="5813" fg:w="2"/><text x="63.3046%" y="799.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="63.0654%" y="773" width="0.0108%" height="15" fill="rgb(207,104,33)" fg:x="5814" fg:w="1"/><text x="63.3154%" y="783.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (3 samples, 0.03%)</title><rect x="63.1522%" y="757" width="0.0325%" height="15" fill="rgb(219,21,39)" fg:x="5822" fg:w="3"/><text x="63.4022%" y="767.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::bytes::complete::is_not::closure$0::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="63.1739%" y="741" width="0.0108%" height="15" fill="rgb(214,133,29)" fg:x="5824" fg:w="1"/><text x="63.4239%" y="751.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$32::find_token (1 samples, 0.01%)</title><rect x="63.1739%" y="725" width="0.0108%" height="15" fill="rgb(226,93,6)" fg:x="5824" fg:w="1"/><text x="63.4239%" y="735.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (10 samples, 0.11%)</title><rect x="63.1196%" y="773" width="0.1085%" height="15" fill="rgb(252,222,34)" fg:x="5819" fg:w="10"/><text x="63.3696%" y="783.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (4 samples, 0.04%)</title><rect x="63.1847%" y="757" width="0.0434%" height="15" fill="rgb(252,92,48)" fg:x="5825" fg:w="4"/><text x="63.4347%" y="767.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$2::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::one_of::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (11 samples, 0.12%)</title><rect x="63.1196%" y="789" width="0.1193%" height="15" fill="rgb(245,223,24)" fg:x="5819" fg:w="11"/><text x="63.3696%" y="799.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::one_of::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="63.2281%" y="773" width="0.0108%" height="15" fill="rgb(205,176,3)" fg:x="5829" fg:w="1"/><text x="63.4781%" y="783.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$130::slice (6 samples, 0.07%)</title><rect x="63.4993%" y="773" width="0.0651%" height="15" fill="rgb(235,151,15)" fg:x="5854" fg:w="6"/><text x="63.7493%" y="783.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (114 samples, 1.24%)</title><rect x="63.0763%" y="805" width="1.2366%" height="15" fill="rgb(237,209,11)" fg:x="5815" fg:w="114"/><text x="63.3263%" y="815.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,char&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (99 samples, 1.07%)</title><rect x="63.2390%" y="789" width="1.0739%" height="15" fill="rgb(243,227,24)" fg:x="5830" fg:w="99"/><text x="63.4890%" y="799.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$32::find_token (69 samples, 0.75%)</title><rect x="63.5644%" y="773" width="0.7485%" height="15" fill="rgb(239,193,16)" fg:x="5860" fg:w="69"/><text x="63.8144%" y="783.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::recognize::closure_env$0&lt;ref$&lt;str$&gt;,usize,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::multi::many0_count::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::escaped::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt;,ref$ (11 samples, 0.12%)</title><rect x="64.3128%" y="805" width="0.1193%" height="15" fill="rgb(231,27,9)" fg:x="5929" fg:w="11"/><text x="64.5628%" y="815.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::escaped::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt;,ref$ (10 samples, 0.11%)</title><rect x="64.3237%" y="789" width="0.1085%" height="15" fill="rgb(219,169,10)" fg:x="5930" fg:w="10"/><text x="64.5737%" y="799.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::bytes::complete::is_not::closure$0::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (8 samples, 0.09%)</title><rect x="64.3454%" y="773" width="0.0868%" height="15" fill="rgb(244,229,43)" fg:x="5932" fg:w="8"/><text x="64.5954%" y="783.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$32::find_token (2 samples, 0.02%)</title><rect x="64.4105%" y="757" width="0.0217%" height="15" fill="rgb(254,38,20)" fg:x="5938" fg:w="2"/><text x="64.6605%" y="767.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (129 samples, 1.40%)</title><rect x="63.0437%" y="821" width="1.3993%" height="15" fill="rgb(250,47,30)" fg:x="5812" fg:w="129"/><text x="63.2937%" y="831.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$130::slice (1 samples, 0.01%)</title><rect x="64.4322%" y="805" width="0.0108%" height="15" fill="rgb(224,124,36)" fg:x="5940" fg:w="1"/><text x="64.6822%" y="815.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$2::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::one_of::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (1 samples, 0.01%)</title><rect x="64.4864%" y="789" width="0.0108%" height="15" fill="rgb(246,68,51)" fg:x="5945" fg:w="1"/><text x="64.7364%" y="799.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (1 samples, 0.01%)</title><rect x="64.4864%" y="773" width="0.0108%" height="15" fill="rgb(253,43,49)" fg:x="5945" fg:w="1"/><text x="64.7364%" y="783.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (156 samples, 1.69%)</title><rect x="62.9895%" y="837" width="1.6922%" height="15" fill="rgb(219,54,36)" fg:x="5807" fg:w="156"/><text x="63.2395%" y="847.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;char,ref$&lt;str$&gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (22 samples, 0.24%)</title><rect x="64.4430%" y="821" width="0.2386%" height="15" fill="rgb(227,133,34)" fg:x="5941" fg:w="22"/><text x="64.6930%" y="831.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (19 samples, 0.21%)</title><rect x="64.4755%" y="805" width="0.2061%" height="15" fill="rgb(247,227,15)" fg:x="5944" fg:w="19"/><text x="64.7255%" y="815.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,char&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (17 samples, 0.18%)</title><rect x="64.4972%" y="789" width="0.1844%" height="15" fill="rgb(229,96,14)" fg:x="5946" fg:w="17"/><text x="64.7472%" y="799.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$32::find_token (13 samples, 0.14%)</title><rect x="64.5406%" y="773" width="0.1410%" height="15" fill="rgb(220,79,17)" fg:x="5950" fg:w="13"/><text x="64.7906%" y="783.50"></text></g><g><title>VCRUNTIME140`memcpy (16 samples, 0.17%)</title><rect x="64.9637%" y="821" width="0.1736%" height="15" fill="rgb(205,131,53)" fg:x="5989" fg:w="16"/><text x="65.2137%" y="831.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (4 samples, 0.04%)</title><rect x="65.1698%" y="805" width="0.0434%" height="15" fill="rgb(209,50,29)" fg:x="6008" fg:w="4"/><text x="65.4198%" y="815.50"></text></g><g><title>ntdll`RtlFreeHeap (18 samples, 0.20%)</title><rect x="65.1372%" y="821" width="0.1952%" height="15" fill="rgb(245,86,46)" fg:x="6005" fg:w="18"/><text x="65.3872%" y="831.50"></text></g><g><title>ntdll`memset (11 samples, 0.12%)</title><rect x="65.2131%" y="805" width="0.1193%" height="15" fill="rgb(235,66,46)" fg:x="6012" fg:w="11"/><text x="65.4631%" y="815.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="65.3325%" y="789" width="0.0108%" height="15" fill="rgb(232,148,31)" fg:x="6023" fg:w="1"/><text x="65.5825%" y="799.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="65.3325%" y="773" width="0.0108%" height="15" fill="rgb(217,149,8)" fg:x="6023" fg:w="1"/><text x="65.5825%" y="783.50"></text></g><g><title>ntdll`RtlCreateTimer (1 samples, 0.01%)</title><rect x="65.3650%" y="709" width="0.0108%" height="15" fill="rgb(209,183,11)" fg:x="6026" fg:w="1"/><text x="65.6150%" y="719.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::RawVec&lt;enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,alloc::alloc::Global&gt;::reserve_for_push&lt;enum2$ (5 samples, 0.05%)</title><rect x="65.3325%" y="821" width="0.0542%" height="15" fill="rgb(208,55,20)" fg:x="6023" fg:w="5"/><text x="65.5825%" y="831.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::finish_grow (5 samples, 0.05%)</title><rect x="65.3325%" y="805" width="0.0542%" height="15" fill="rgb(218,39,14)" fg:x="6023" fg:w="5"/><text x="65.5825%" y="815.50"></text></g><g><title>ntdll`RtlReAllocateHeap (4 samples, 0.04%)</title><rect x="65.3433%" y="789" width="0.0434%" height="15" fill="rgb(216,169,33)" fg:x="6024" fg:w="4"/><text x="65.5933%" y="799.50"></text></g><g><title>ntdll`RtlReAllocateHeap (3 samples, 0.03%)</title><rect x="65.3542%" y="773" width="0.0325%" height="15" fill="rgb(233,80,24)" fg:x="6025" fg:w="3"/><text x="65.6042%" y="783.50"></text></g><g><title>ntdll`RtlReleaseSRWLockShared (2 samples, 0.02%)</title><rect x="65.3650%" y="757" width="0.0217%" height="15" fill="rgb(213,179,31)" fg:x="6026" fg:w="2"/><text x="65.6150%" y="767.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.02%)</title><rect x="65.3650%" y="741" width="0.0217%" height="15" fill="rgb(209,19,5)" fg:x="6026" fg:w="2"/><text x="65.6150%" y="751.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.02%)</title><rect x="65.3650%" y="725" width="0.0217%" height="15" fill="rgb(219,18,35)" fg:x="6026" fg:w="2"/><text x="65.6150%" y="735.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.01%)</title><rect x="65.3759%" y="709" width="0.0108%" height="15" fill="rgb(209,169,16)" fg:x="6027" fg:w="1"/><text x="65.6259%" y="719.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.01%)</title><rect x="65.3759%" y="693" width="0.0108%" height="15" fill="rgb(245,90,51)" fg:x="6027" fg:w="1"/><text x="65.6259%" y="703.50"></text></g><g><title>ntdll`NtAllocateVirtualMemory (1 samples, 0.01%)</title><rect x="65.3759%" y="677" width="0.0108%" height="15" fill="rgb(220,99,45)" fg:x="6027" fg:w="1"/><text x="65.6259%" y="687.50"></text></g><g><title>ntdll`RtlCreateTimer (18 samples, 0.20%)</title><rect x="65.7880%" y="757" width="0.1952%" height="15" fill="rgb(249,89,25)" fg:x="6065" fg:w="18"/><text x="66.0380%" y="767.50"></text></g><g><title>ntdll`memset (1 samples, 0.01%)</title><rect x="65.9724%" y="741" width="0.0108%" height="15" fill="rgb(239,193,0)" fg:x="6082" fg:w="1"/><text x="66.2224%" y="751.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::RawVec&lt;stelpatch::cw_model::PropertyInfo,alloc::alloc::Global&gt;::reserve_for_push (57 samples, 0.62%)</title><rect x="65.3867%" y="821" width="0.6183%" height="15" fill="rgb(231,126,1)" fg:x="6028" fg:w="57"/><text x="65.6367%" y="831.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::finish_grow (54 samples, 0.59%)</title><rect x="65.4192%" y="805" width="0.5857%" height="15" fill="rgb(243,166,3)" fg:x="6031" fg:w="54"/><text x="65.6692%" y="815.50"></text></g><g><title>ntdll`RtlAllocateHeap (51 samples, 0.55%)</title><rect x="65.4518%" y="789" width="0.5532%" height="15" fill="rgb(223,22,34)" fg:x="6034" fg:w="51"/><text x="65.7018%" y="799.50"></text></g><g><title>ntdll`RtlAllocateHeap (43 samples, 0.47%)</title><rect x="65.5386%" y="773" width="0.4664%" height="15" fill="rgb(251,52,51)" fg:x="6042" fg:w="43"/><text x="65.7886%" y="783.50"></text></g><g><title>ntdll`RtlSetUserValueHeap (2 samples, 0.02%)</title><rect x="65.9833%" y="757" width="0.0217%" height="15" fill="rgb(221,165,28)" fg:x="6083" fg:w="2"/><text x="66.2333%" y="767.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState,ref$&lt;ref$ (16 samples, 0.17%)</title><rect x="66.0267%" y="805" width="0.1736%" height="15" fill="rgb(218,121,47)" fg:x="6087" fg:w="16"/><text x="66.2767%" y="815.50"></text></g><g><title>stelpatch-benchmark`core::hash::sip::impl$5::write (13 samples, 0.14%)</title><rect x="66.0592%" y="789" width="0.1410%" height="15" fill="rgb(209,120,9)" fg:x="6090" fg:w="13"/><text x="66.3092%" y="799.50"></text></g><g><title>VCRUNTIME140`memset (2 samples, 0.02%)</title><rect x="66.2545%" y="789" width="0.0217%" height="15" fill="rgb(236,68,12)" fg:x="6108" fg:w="2"/><text x="66.5045%" y="799.50"></text></g><g><title>ntdll`RtlCreateTimer (9 samples, 0.10%)</title><rect x="66.3738%" y="757" width="0.0976%" height="15" fill="rgb(225,194,26)" fg:x="6119" fg:w="9"/><text x="66.6238%" y="767.50"></text></g><g><title>ntdll`RtlSetUserValueHeap (1 samples, 0.01%)</title><rect x="66.4714%" y="757" width="0.0108%" height="15" fill="rgb(231,84,39)" fg:x="6128" fg:w="1"/><text x="66.7214%" y="767.50"></text></g><g><title>ntdll`RtlAllocateHeap (20 samples, 0.22%)</title><rect x="66.2762%" y="789" width="0.2169%" height="15" fill="rgb(210,11,45)" fg:x="6110" fg:w="20"/><text x="66.5262%" y="799.50"></text></g><g><title>ntdll`RtlAllocateHeap (16 samples, 0.17%)</title><rect x="66.3196%" y="773" width="0.1736%" height="15" fill="rgb(224,54,52)" fg:x="6114" fg:w="16"/><text x="66.5696%" y="783.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.01%)</title><rect x="66.4823%" y="757" width="0.0108%" height="15" fill="rgb(238,102,14)" fg:x="6129" fg:w="1"/><text x="66.7323%" y="767.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.01%)</title><rect x="66.4823%" y="741" width="0.0108%" height="15" fill="rgb(243,160,52)" fg:x="6129" fg:w="1"/><text x="66.7323%" y="751.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="66.4823%" y="725" width="0.0108%" height="15" fill="rgb(216,114,19)" fg:x="6129" fg:w="1"/><text x="66.7323%" y="735.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="66.4823%" y="709" width="0.0108%" height="15" fill="rgb(244,166,37)" fg:x="6129" fg:w="1"/><text x="66.7323%" y="719.50"></text></g><g><title>stelpatch-benchmark`hashbrown::map::HashMap&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedPropertyInfoList,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::rustc_entry&lt;ref$ (46 samples, 0.50%)</title><rect x="66.0050%" y="821" width="0.4990%" height="15" fill="rgb(246,29,44)" fg:x="6085" fg:w="46"/><text x="66.2550%" y="831.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedPropertyInfoList&gt;,alloc::alloc::Global&gt;::reserve_rehash&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedPropertyInfoList&gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;ref$&lt;str$&gt;,ref$ (28 samples, 0.30%)</title><rect x="66.2002%" y="805" width="0.3037%" height="15" fill="rgb(215,56,53)" fg:x="6103" fg:w="28"/><text x="66.4502%" y="815.50"></text></g><g><title>stelpatch-benchmark`std::alloc::__default_lib_allocator::__rdl_dealloc (1 samples, 0.01%)</title><rect x="66.4931%" y="789" width="0.0108%" height="15" fill="rgb(217,60,2)" fg:x="6130" fg:w="1"/><text x="66.7431%" y="799.50"></text></g><g><title>VCRUNTIME140`memcpy (17 samples, 0.18%)</title><rect x="66.5257%" y="805" width="0.1844%" height="15" fill="rgb(207,26,24)" fg:x="6133" fg:w="17"/><text x="66.7757%" y="815.50"></text></g><g><title>ntdll`RtlAllocateHeap (14 samples, 0.15%)</title><rect x="66.7643%" y="773" width="0.1519%" height="15" fill="rgb(252,210,15)" fg:x="6155" fg:w="14"/><text x="67.0143%" y="783.50"></text></g><g><title>ntdll`RtlAllocateHeap (9 samples, 0.10%)</title><rect x="66.8185%" y="757" width="0.0976%" height="15" fill="rgb(253,209,26)" fg:x="6160" fg:w="9"/><text x="67.0685%" y="767.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.02%)</title><rect x="66.9270%" y="725" width="0.0217%" height="15" fill="rgb(238,170,14)" fg:x="6170" fg:w="2"/><text x="67.1770%" y="735.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.02%)</title><rect x="66.9270%" y="709" width="0.0217%" height="15" fill="rgb(216,178,15)" fg:x="6170" fg:w="2"/><text x="67.1770%" y="719.50"></text></g><g><title>ntdll`RtlCreateTimer (1 samples, 0.01%)</title><rect x="66.9378%" y="693" width="0.0108%" height="15" fill="rgb(250,197,2)" fg:x="6171" fg:w="1"/><text x="67.1878%" y="703.50"></text></g><g><title>ntdll`RtlFreeHeap (3 samples, 0.03%)</title><rect x="66.9487%" y="725" width="0.0325%" height="15" fill="rgb(212,70,42)" fg:x="6172" fg:w="3"/><text x="67.1987%" y="735.50"></text></g><g><title>ntdll`memset (3 samples, 0.03%)</title><rect x="66.9487%" y="709" width="0.0325%" height="15" fill="rgb(227,213,9)" fg:x="6172" fg:w="3"/><text x="67.1987%" y="719.50"></text></g><g><title>ntdll`RtlReAllocateHeap (7 samples, 0.08%)</title><rect x="66.9162%" y="773" width="0.0759%" height="15" fill="rgb(245,99,25)" fg:x="6169" fg:w="7"/><text x="67.1662%" y="783.50"></text></g><g><title>ntdll`RtlReAllocateHeap (7 samples, 0.08%)</title><rect x="66.9162%" y="757" width="0.0759%" height="15" fill="rgb(250,82,29)" fg:x="6169" fg:w="7"/><text x="67.1662%" y="767.50"></text></g><g><title>ntdll`RtlReleaseSRWLockShared (6 samples, 0.07%)</title><rect x="66.9270%" y="741" width="0.0651%" height="15" fill="rgb(241,226,54)" fg:x="6170" fg:w="6"/><text x="67.1770%" y="751.50"></text></g><g><title>ntdll`memcpy (1 samples, 0.01%)</title><rect x="66.9812%" y="725" width="0.0108%" height="15" fill="rgb(221,99,41)" fg:x="6175" fg:w="1"/><text x="67.2312%" y="735.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::RawVec&lt;enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,alloc::alloc::Global&gt;::reserve_for_push&lt;enum2$ (27 samples, 0.29%)</title><rect x="66.7101%" y="805" width="0.2929%" height="15" fill="rgb(213,90,21)" fg:x="6150" fg:w="27"/><text x="66.9601%" y="815.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::finish_grow (22 samples, 0.24%)</title><rect x="66.7643%" y="789" width="0.2386%" height="15" fill="rgb(205,208,24)" fg:x="6155" fg:w="22"/><text x="67.0143%" y="799.50"></text></g><g><title>stelpatch-benchmark`std::alloc::__default_lib_allocator::__rdl_alloc (1 samples, 0.01%)</title><rect x="66.9921%" y="773" width="0.0108%" height="15" fill="rgb(246,31,12)" fg:x="6176" fg:w="1"/><text x="67.2421%" y="783.50"></text></g><g><title>VCRUNTIME140`memcpy (12 samples, 0.13%)</title><rect x="67.0355%" y="789" width="0.1302%" height="15" fill="rgb(213,154,6)" fg:x="6180" fg:w="12"/><text x="67.2855%" y="799.50"></text></g><g><title>stelpatch-benchmark`memcpy (1 samples, 0.01%)</title><rect x="67.1656%" y="789" width="0.0108%" height="15" fill="rgb(222,163,29)" fg:x="6192" fg:w="1"/><text x="67.4156%" y="799.50"></text></g><g><title>VCRUNTIME140`memcpy (1 samples, 0.01%)</title><rect x="67.1982%" y="773" width="0.0108%" height="15" fill="rgb(227,201,8)" fg:x="6195" fg:w="1"/><text x="67.4482%" y="783.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (2 samples, 0.02%)</title><rect x="67.2090%" y="773" width="0.0217%" height="15" fill="rgb(233,9,32)" fg:x="6196" fg:w="2"/><text x="67.4590%" y="783.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="67.2199%" y="757" width="0.0108%" height="15" fill="rgb(217,54,24)" fg:x="6197" fg:w="1"/><text x="67.4699%" y="767.50"></text></g><g><title>stelpatch-benchmark`core::ops::function::FnMut::call_mut&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),tuple$&lt;ref$ (2 samples, 0.02%)</title><rect x="67.2416%" y="757" width="0.0217%" height="15" fill="rgb(235,192,0)" fg:x="6199" fg:w="2"/><text x="67.4916%" y="767.50"></text></g><g><title>stelpatch-benchmark`nom::sequence::impl$3::parse&lt;ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;char&gt; &gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;tuple$&lt;char,ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,ref$&lt;str$&gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (1 samples, 0.01%)</title><rect x="67.2524%" y="741" width="0.0108%" height="15" fill="rgb(235,45,9)" fg:x="6200" fg:w="1"/><text x="67.5024%" y="751.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="67.3392%" y="677" width="0.0108%" height="15" fill="rgb(246,42,40)" fg:x="6208" fg:w="1"/><text x="67.5892%" y="687.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$2::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::one_of::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (4 samples, 0.04%)</title><rect x="67.3283%" y="709" width="0.0434%" height="15" fill="rgb(248,111,24)" fg:x="6207" fg:w="4"/><text x="67.5783%" y="719.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (4 samples, 0.04%)</title><rect x="67.3283%" y="693" width="0.0434%" height="15" fill="rgb(249,65,22)" fg:x="6207" fg:w="4"/><text x="67.5783%" y="703.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (2 samples, 0.02%)</title><rect x="67.3500%" y="677" width="0.0217%" height="15" fill="rgb(238,111,51)" fg:x="6209" fg:w="2"/><text x="67.6000%" y="687.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$130::slice (9 samples, 0.10%)</title><rect x="67.5019%" y="693" width="0.0976%" height="15" fill="rgb(250,118,22)" fg:x="6223" fg:w="9"/><text x="67.7519%" y="703.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (125 samples, 1.36%)</title><rect x="67.2633%" y="757" width="1.3559%" height="15" fill="rgb(234,84,26)" fg:x="6201" fg:w="125"/><text x="67.5133%" y="767.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (122 samples, 1.32%)</title><rect x="67.2958%" y="741" width="1.3234%" height="15" fill="rgb(243,172,12)" fg:x="6204" fg:w="122"/><text x="67.5458%" y="751.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (121 samples, 1.31%)</title><rect x="67.3066%" y="725" width="1.3125%" height="15" fill="rgb(236,150,49)" fg:x="6205" fg:w="121"/><text x="67.5566%" y="735.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,char&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (115 samples, 1.25%)</title><rect x="67.3717%" y="709" width="1.2474%" height="15" fill="rgb(225,197,26)" fg:x="6211" fg:w="115"/><text x="67.6217%" y="719.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$32::find_token (94 samples, 1.02%)</title><rect x="67.5995%" y="693" width="1.0196%" height="15" fill="rgb(214,17,42)" fg:x="6232" fg:w="94"/><text x="67.8495%" y="703.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (1 samples, 0.01%)</title><rect x="68.6192%" y="757" width="0.0108%" height="15" fill="rgb(224,165,40)" fg:x="6326" fg:w="1"/><text x="68.8692%" y="767.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$ (140 samples, 1.52%)</title><rect x="67.1765%" y="789" width="1.5186%" height="15" fill="rgb(246,100,4)" fg:x="6193" fg:w="140"/><text x="67.4265%" y="799.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$5::choice&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(stelpatch::cw_parser::parser::ParsedEntity)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(ref$&lt;str$&gt;)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),stelpatch::cw_parser::parser::script_value::closure_env$0&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result (135 samples, 1.46%)</title><rect x="67.2307%" y="773" width="1.4644%" height="15" fill="rgb(222,103,0)" fg:x="6198" fg:w="135"/><text x="67.4807%" y="783.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (6 samples, 0.07%)</title><rect x="68.6300%" y="757" width="0.0651%" height="15" fill="rgb(227,189,26)" fg:x="6327" fg:w="6"/><text x="68.8800%" y="767.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (4 samples, 0.04%)</title><rect x="68.6517%" y="741" width="0.0434%" height="15" fill="rgb(214,202,17)" fg:x="6329" fg:w="4"/><text x="68.9017%" y="751.50"></text></g><g><title>VCRUNTIME140`memcpy (22 samples, 0.24%)</title><rect x="68.7493%" y="773" width="0.2386%" height="15" fill="rgb(229,111,3)" fg:x="6338" fg:w="22"/><text x="68.9993%" y="783.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$2::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::one_of::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (3 samples, 0.03%)</title><rect x="69.1615%" y="725" width="0.0325%" height="15" fill="rgb(229,172,15)" fg:x="6376" fg:w="3"/><text x="69.4115%" y="735.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (1 samples, 0.01%)</title><rect x="69.1832%" y="709" width="0.0108%" height="15" fill="rgb(230,224,35)" fg:x="6378" fg:w="1"/><text x="69.4332%" y="719.50"></text></g><g><title>stelpatch-benchmark`nom::sequence::impl$3::parse&lt;ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;char&gt; &gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;tuple$&lt;char,ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,ref$&lt;str$&gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (3 samples, 0.03%)</title><rect x="69.1941%" y="725" width="0.0325%" height="15" fill="rgb(251,141,6)" fg:x="6379" fg:w="3"/><text x="69.4441%" y="735.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::digit1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="69.2158%" y="709" width="0.0108%" height="15" fill="rgb(225,208,6)" fg:x="6381" fg:w="1"/><text x="69.4658%" y="719.50"></text></g><g><title>stelpatch-benchmark`core::ops::function::FnMut::call_mut&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),tuple$&lt;ref$ (9 samples, 0.10%)</title><rect x="69.1398%" y="741" width="0.0976%" height="15" fill="rgb(246,181,16)" fg:x="6374" fg:w="9"/><text x="69.3898%" y="751.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$129::slice (1 samples, 0.01%)</title><rect x="69.2266%" y="725" width="0.0108%" height="15" fill="rgb(227,129,36)" fg:x="6382" fg:w="1"/><text x="69.4766%" y="735.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="69.4218%" y="661" width="0.0108%" height="15" fill="rgb(248,117,24)" fg:x="6400" fg:w="1"/><text x="69.6718%" y="671.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$2::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::one_of::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (12 samples, 0.13%)</title><rect x="69.3568%" y="693" width="0.1302%" height="15" fill="rgb(214,185,35)" fg:x="6394" fg:w="12"/><text x="69.6068%" y="703.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (11 samples, 0.12%)</title><rect x="69.3676%" y="677" width="0.1193%" height="15" fill="rgb(236,150,34)" fg:x="6395" fg:w="11"/><text x="69.6176%" y="687.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (5 samples, 0.05%)</title><rect x="69.4327%" y="661" width="0.0542%" height="15" fill="rgb(243,228,27)" fg:x="6401" fg:w="5"/><text x="69.6827%" y="671.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$130::slice (7 samples, 0.08%)</title><rect x="69.6496%" y="677" width="0.0759%" height="15" fill="rgb(245,77,44)" fg:x="6421" fg:w="7"/><text x="69.8996%" y="687.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (100 samples, 1.08%)</title><rect x="69.3351%" y="709" width="1.0847%" height="15" fill="rgb(235,214,42)" fg:x="6392" fg:w="100"/><text x="69.5851%" y="719.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,char&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (86 samples, 0.93%)</title><rect x="69.4869%" y="693" width="0.9329%" height="15" fill="rgb(221,74,3)" fg:x="6406" fg:w="86"/><text x="69.7369%" y="703.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$32::find_token (64 samples, 0.69%)</title><rect x="69.7256%" y="677" width="0.6942%" height="15" fill="rgb(206,121,29)" fg:x="6428" fg:w="64"/><text x="69.9756%" y="687.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (112 samples, 1.21%)</title><rect x="69.2808%" y="725" width="1.2149%" height="15" fill="rgb(249,131,53)" fg:x="6387" fg:w="112"/><text x="69.5308%" y="735.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::recognize::closure_env$0&lt;ref$&lt;str$&gt;,usize,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::multi::many0_count::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::escaped::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt;,ref$ (7 samples, 0.08%)</title><rect x="70.4198%" y="709" width="0.0759%" height="15" fill="rgb(236,170,29)" fg:x="6492" fg:w="7"/><text x="70.6698%" y="719.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::escaped::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt;,ref$ (7 samples, 0.08%)</title><rect x="70.4198%" y="693" width="0.0759%" height="15" fill="rgb(247,96,15)" fg:x="6492" fg:w="7"/><text x="70.6698%" y="703.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::bytes::complete::is_not::closure$0::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (4 samples, 0.04%)</title><rect x="70.4523%" y="677" width="0.0434%" height="15" fill="rgb(211,210,7)" fg:x="6495" fg:w="4"/><text x="70.7023%" y="687.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$32::find_token (2 samples, 0.02%)</title><rect x="70.4740%" y="661" width="0.0217%" height="15" fill="rgb(240,88,50)" fg:x="6497" fg:w="2"/><text x="70.7240%" y="671.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (118 samples, 1.28%)</title><rect x="69.2374%" y="741" width="1.2800%" height="15" fill="rgb(209,229,26)" fg:x="6383" fg:w="118"/><text x="69.4874%" y="751.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;char,ref$&lt;str$&gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (2 samples, 0.02%)</title><rect x="70.4957%" y="725" width="0.0217%" height="15" fill="rgb(210,68,23)" fg:x="6499" fg:w="2"/><text x="70.7457%" y="735.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (2 samples, 0.02%)</title><rect x="70.4957%" y="709" width="0.0217%" height="15" fill="rgb(229,180,13)" fg:x="6499" fg:w="2"/><text x="70.7457%" y="719.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,char&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (2 samples, 0.02%)</title><rect x="70.4957%" y="693" width="0.0217%" height="15" fill="rgb(236,53,44)" fg:x="6499" fg:w="2"/><text x="70.7457%" y="703.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$32::find_token (1 samples, 0.01%)</title><rect x="70.5066%" y="677" width="0.0108%" height="15" fill="rgb(244,214,29)" fg:x="6500" fg:w="1"/><text x="70.7566%" y="687.50"></text></g><g><title>VCRUNTIME140`memcpy (9 samples, 0.10%)</title><rect x="70.6476%" y="725" width="0.0976%" height="15" fill="rgb(220,75,29)" fg:x="6513" fg:w="9"/><text x="70.8976%" y="735.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.01%)</title><rect x="70.7560%" y="709" width="0.0108%" height="15" fill="rgb(214,183,37)" fg:x="6523" fg:w="1"/><text x="71.0060%" y="719.50"></text></g><g><title>ntdll`RtlFreeHeap (3 samples, 0.03%)</title><rect x="70.7452%" y="725" width="0.0325%" height="15" fill="rgb(239,117,29)" fg:x="6522" fg:w="3"/><text x="70.9952%" y="735.50"></text></g><g><title>ntdll`memset (1 samples, 0.01%)</title><rect x="70.7669%" y="709" width="0.0108%" height="15" fill="rgb(237,171,35)" fg:x="6524" fg:w="1"/><text x="71.0169%" y="719.50"></text></g><g><title>ntdll`RtlCreateTimer (5 samples, 0.05%)</title><rect x="71.0055%" y="661" width="0.0542%" height="15" fill="rgb(229,178,53)" fg:x="6546" fg:w="5"/><text x="71.2555%" y="671.50"></text></g><g><title>ntdll`RtlAllocateHeap (26 samples, 0.28%)</title><rect x="70.8103%" y="693" width="0.2820%" height="15" fill="rgb(210,102,19)" fg:x="6528" fg:w="26"/><text x="71.0603%" y="703.50"></text></g><g><title>ntdll`RtlAllocateHeap (24 samples, 0.26%)</title><rect x="70.8320%" y="677" width="0.2603%" height="15" fill="rgb(235,127,22)" fg:x="6530" fg:w="24"/><text x="71.0820%" y="687.50"></text></g><g><title>ntdll`RtlSetUserValueHeap (3 samples, 0.03%)</title><rect x="71.0598%" y="661" width="0.0325%" height="15" fill="rgb(244,31,31)" fg:x="6551" fg:w="3"/><text x="71.3098%" y="671.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::RawVec&lt;stelpatch::cw_model::PropertyInfo,alloc::alloc::Global&gt;::reserve_for_push (30 samples, 0.33%)</title><rect x="70.7777%" y="725" width="0.3254%" height="15" fill="rgb(231,43,21)" fg:x="6525" fg:w="30"/><text x="71.0277%" y="735.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::finish_grow (28 samples, 0.30%)</title><rect x="70.7994%" y="709" width="0.3037%" height="15" fill="rgb(217,131,35)" fg:x="6527" fg:w="28"/><text x="71.0494%" y="719.50"></text></g><g><title>stelpatch-benchmark`std::alloc::__default_lib_allocator::__rdl_alloc (1 samples, 0.01%)</title><rect x="71.0923%" y="693" width="0.0108%" height="15" fill="rgb(221,149,4)" fg:x="6554" fg:w="1"/><text x="71.3423%" y="703.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState,ref$&lt;ref$ (5 samples, 0.05%)</title><rect x="71.1140%" y="709" width="0.0542%" height="15" fill="rgb(232,170,28)" fg:x="6556" fg:w="5"/><text x="71.3640%" y="719.50"></text></g><g><title>stelpatch-benchmark`core::hash::sip::impl$5::write (2 samples, 0.02%)</title><rect x="71.1465%" y="693" width="0.0217%" height="15" fill="rgb(238,56,10)" fg:x="6559" fg:w="2"/><text x="71.3965%" y="703.50"></text></g><g><title>ntdll`ExpInterlockedPopEntrySListEnd (1 samples, 0.01%)</title><rect x="71.2225%" y="661" width="0.0108%" height="15" fill="rgb(235,196,14)" fg:x="6566" fg:w="1"/><text x="71.4725%" y="671.50"></text></g><g><title>ntdll`RtlCreateTimer (2 samples, 0.02%)</title><rect x="71.2333%" y="661" width="0.0217%" height="15" fill="rgb(216,45,48)" fg:x="6567" fg:w="2"/><text x="71.4833%" y="671.50"></text></g><g><title>ntdll`RtlSetUserValueHeap (1 samples, 0.01%)</title><rect x="71.2550%" y="661" width="0.0108%" height="15" fill="rgb(238,213,17)" fg:x="6569" fg:w="1"/><text x="71.5050%" y="671.50"></text></g><g><title>stelpatch-benchmark`hashbrown::map::HashMap&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedPropertyInfoList,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::rustc_entry&lt;ref$ (17 samples, 0.18%)</title><rect x="71.1032%" y="725" width="0.1844%" height="15" fill="rgb(212,13,2)" fg:x="6555" fg:w="17"/><text x="71.3532%" y="735.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedPropertyInfoList&gt;,alloc::alloc::Global&gt;::reserve_rehash&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedPropertyInfoList&gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;ref$&lt;str$&gt;,ref$ (11 samples, 0.12%)</title><rect x="71.1682%" y="709" width="0.1193%" height="15" fill="rgb(240,114,20)" fg:x="6561" fg:w="11"/><text x="71.4182%" y="719.50"></text></g><g><title>ntdll`RtlAllocateHeap (10 samples, 0.11%)</title><rect x="71.1791%" y="693" width="0.1085%" height="15" fill="rgb(228,41,40)" fg:x="6562" fg:w="10"/><text x="71.4291%" y="703.50"></text></g><g><title>ntdll`RtlAllocateHeap (6 samples, 0.07%)</title><rect x="71.2225%" y="677" width="0.0651%" height="15" fill="rgb(244,132,35)" fg:x="6566" fg:w="6"/><text x="71.4725%" y="687.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (2 samples, 0.02%)</title><rect x="71.2659%" y="661" width="0.0217%" height="15" fill="rgb(253,189,4)" fg:x="6570" fg:w="2"/><text x="71.5159%" y="671.50"></text></g><g><title>ntdll`ExpInterlockedPopEntrySListResume (1 samples, 0.01%)</title><rect x="71.2767%" y="645" width="0.0108%" height="15" fill="rgb(224,37,19)" fg:x="6571" fg:w="1"/><text x="71.5267%" y="655.50"></text></g><g><title>VCRUNTIME140`memcpy (6 samples, 0.07%)</title><rect x="71.3201%" y="709" width="0.0651%" height="15" fill="rgb(235,223,18)" fg:x="6575" fg:w="6"/><text x="71.5701%" y="719.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.02%)</title><rect x="71.4069%" y="677" width="0.0217%" height="15" fill="rgb(235,163,25)" fg:x="6583" fg:w="2"/><text x="71.6569%" y="687.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="71.4177%" y="661" width="0.0108%" height="15" fill="rgb(217,145,28)" fg:x="6584" fg:w="1"/><text x="71.6677%" y="671.50"></text></g><g><title>ntdll`RtlReAllocateHeap (1 samples, 0.01%)</title><rect x="71.4286%" y="677" width="0.0108%" height="15" fill="rgb(223,223,32)" fg:x="6585" fg:w="1"/><text x="71.6786%" y="687.50"></text></g><g><title>ntdll`RtlReAllocateHeap (1 samples, 0.01%)</title><rect x="71.4286%" y="661" width="0.0108%" height="15" fill="rgb(227,189,39)" fg:x="6585" fg:w="1"/><text x="71.6786%" y="671.50"></text></g><g><title>ntdll`RtlReleaseSRWLockShared (1 samples, 0.01%)</title><rect x="71.4286%" y="645" width="0.0108%" height="15" fill="rgb(248,10,22)" fg:x="6585" fg:w="1"/><text x="71.6786%" y="655.50"></text></g><g><title>ntdll`memcpy (1 samples, 0.01%)</title><rect x="71.4286%" y="629" width="0.0108%" height="15" fill="rgb(248,46,39)" fg:x="6585" fg:w="1"/><text x="71.6786%" y="639.50"></text></g><g><title>stelpatch-benchmark`std::alloc::__default_lib_allocator::__rdl_alloc (1 samples, 0.01%)</title><rect x="71.4394%" y="677" width="0.0108%" height="15" fill="rgb(248,113,48)" fg:x="6586" fg:w="1"/><text x="71.6894%" y="687.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::RawVec&lt;enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,alloc::alloc::Global&gt;::reserve_for_push&lt;enum2$ (7 samples, 0.08%)</title><rect x="71.3852%" y="709" width="0.0759%" height="15" fill="rgb(245,16,25)" fg:x="6581" fg:w="7"/><text x="71.6352%" y="719.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::finish_grow (5 samples, 0.05%)</title><rect x="71.4069%" y="693" width="0.0542%" height="15" fill="rgb(249,152,16)" fg:x="6583" fg:w="5"/><text x="71.6569%" y="703.50"></text></g><g><title>stelpatch-benchmark`std::alloc::__default_lib_allocator::__rdl_realloc (1 samples, 0.01%)</title><rect x="71.4503%" y="677" width="0.0108%" height="15" fill="rgb(250,16,1)" fg:x="6587" fg:w="1"/><text x="71.7003%" y="687.50"></text></g><g><title>VCRUNTIME140`memcpy (6 samples, 0.07%)</title><rect x="71.4828%" y="693" width="0.0651%" height="15" fill="rgb(249,138,3)" fg:x="6590" fg:w="6"/><text x="71.7328%" y="703.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="71.5479%" y="693" width="0.0108%" height="15" fill="rgb(227,71,41)" fg:x="6596" fg:w="1"/><text x="71.7979%" y="703.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (1 samples, 0.01%)</title><rect x="71.5479%" y="677" width="0.0108%" height="15" fill="rgb(209,184,23)" fg:x="6596" fg:w="1"/><text x="71.7979%" y="687.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="71.5479%" y="661" width="0.0108%" height="15" fill="rgb(223,215,31)" fg:x="6596" fg:w="1"/><text x="71.7979%" y="671.50"></text></g><g><title>VCRUNTIME140`memcpy (6 samples, 0.07%)</title><rect x="71.5804%" y="677" width="0.0651%" height="15" fill="rgb(210,146,28)" fg:x="6599" fg:w="6"/><text x="71.8304%" y="687.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="71.7648%" y="613" width="0.0108%" height="15" fill="rgb(209,183,41)" fg:x="6616" fg:w="1"/><text x="72.0148%" y="623.50"></text></g><g><title>stelpatch-benchmark`core::ops::function::FnMut::call_mut&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),tuple$&lt;ref$ (9 samples, 0.10%)</title><rect x="71.6889%" y="645" width="0.0976%" height="15" fill="rgb(209,224,45)" fg:x="6609" fg:w="9"/><text x="71.9389%" y="655.50"></text></g><g><title>stelpatch-benchmark`nom::sequence::impl$3::parse&lt;ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;char&gt; &gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;tuple$&lt;char,ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,ref$&lt;str$&gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (5 samples, 0.05%)</title><rect x="71.7323%" y="629" width="0.0542%" height="15" fill="rgb(224,209,51)" fg:x="6613" fg:w="5"/><text x="71.9823%" y="639.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::digit1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="71.7757%" y="613" width="0.0108%" height="15" fill="rgb(223,17,39)" fg:x="6617" fg:w="1"/><text x="72.0257%" y="623.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (2 samples, 0.02%)</title><rect x="71.9058%" y="565" width="0.0217%" height="15" fill="rgb(234,204,37)" fg:x="6629" fg:w="2"/><text x="72.1558%" y="575.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::bytes::complete::is_not::closure$0::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="71.9167%" y="549" width="0.0108%" height="15" fill="rgb(236,120,5)" fg:x="6630" fg:w="1"/><text x="72.1667%" y="559.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$32::find_token (1 samples, 0.01%)</title><rect x="71.9167%" y="533" width="0.0108%" height="15" fill="rgb(248,97,27)" fg:x="6630" fg:w="1"/><text x="72.1667%" y="543.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$2::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::one_of::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (12 samples, 0.13%)</title><rect x="71.8516%" y="597" width="0.1302%" height="15" fill="rgb(240,66,17)" fg:x="6624" fg:w="12"/><text x="72.1016%" y="607.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (11 samples, 0.12%)</title><rect x="71.8625%" y="581" width="0.1193%" height="15" fill="rgb(210,79,3)" fg:x="6625" fg:w="11"/><text x="72.1125%" y="591.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (5 samples, 0.05%)</title><rect x="71.9275%" y="565" width="0.0542%" height="15" fill="rgb(214,176,27)" fg:x="6631" fg:w="5"/><text x="72.1775%" y="575.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$130::slice (7 samples, 0.08%)</title><rect x="72.1011%" y="581" width="0.0759%" height="15" fill="rgb(235,185,3)" fg:x="6647" fg:w="7"/><text x="72.3511%" y="591.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (61 samples, 0.66%)</title><rect x="71.8299%" y="613" width="0.6617%" height="15" fill="rgb(227,24,12)" fg:x="6622" fg:w="61"/><text x="72.0799%" y="623.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,char&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (47 samples, 0.51%)</title><rect x="71.9818%" y="597" width="0.5098%" height="15" fill="rgb(252,169,48)" fg:x="6636" fg:w="47"/><text x="72.2318%" y="607.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$32::find_token (29 samples, 0.31%)</title><rect x="72.1770%" y="581" width="0.3146%" height="15" fill="rgb(212,65,1)" fg:x="6654" fg:w="29"/><text x="72.4270%" y="591.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (66 samples, 0.72%)</title><rect x="71.7865%" y="629" width="0.7159%" height="15" fill="rgb(242,39,24)" fg:x="6618" fg:w="66"/><text x="72.0365%" y="639.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::recognize::closure_env$0&lt;ref$&lt;str$&gt;,usize,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::multi::many0_count::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::escaped::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt;,ref$ (1 samples, 0.01%)</title><rect x="72.4916%" y="613" width="0.0108%" height="15" fill="rgb(249,32,23)" fg:x="6683" fg:w="1"/><text x="72.7416%" y="623.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::escaped::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt;,ref$ (1 samples, 0.01%)</title><rect x="72.4916%" y="597" width="0.0108%" height="15" fill="rgb(251,195,23)" fg:x="6683" fg:w="1"/><text x="72.7416%" y="607.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::bytes::complete::is_not::closure$0::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="72.4916%" y="581" width="0.0108%" height="15" fill="rgb(236,174,8)" fg:x="6683" fg:w="1"/><text x="72.7416%" y="591.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (67 samples, 0.73%)</title><rect x="71.7865%" y="645" width="0.7268%" height="15" fill="rgb(220,197,8)" fg:x="6618" fg:w="67"/><text x="72.0365%" y="655.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;char,ref$&lt;str$&gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (1 samples, 0.01%)</title><rect x="72.5024%" y="629" width="0.0108%" height="15" fill="rgb(240,108,37)" fg:x="6684" fg:w="1"/><text x="72.7524%" y="639.50"></text></g><g><title>VCRUNTIME140`memcpy (1 samples, 0.01%)</title><rect x="72.5458%" y="629" width="0.0108%" height="15" fill="rgb(232,176,24)" fg:x="6688" fg:w="1"/><text x="72.7958%" y="639.50"></text></g><g><title>ntdll`RtlCreateTimer (1 samples, 0.01%)</title><rect x="72.6109%" y="565" width="0.0108%" height="15" fill="rgb(243,35,29)" fg:x="6694" fg:w="1"/><text x="72.8609%" y="575.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::RawVec&lt;stelpatch::cw_model::PropertyInfo,alloc::alloc::Global&gt;::reserve_for_push (7 samples, 0.08%)</title><rect x="72.5567%" y="629" width="0.0759%" height="15" fill="rgb(210,37,18)" fg:x="6689" fg:w="7"/><text x="72.8067%" y="639.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::finish_grow (7 samples, 0.08%)</title><rect x="72.5567%" y="613" width="0.0759%" height="15" fill="rgb(224,184,40)" fg:x="6689" fg:w="7"/><text x="72.8067%" y="623.50"></text></g><g><title>ntdll`RtlAllocateHeap (7 samples, 0.08%)</title><rect x="72.5567%" y="597" width="0.0759%" height="15" fill="rgb(236,39,29)" fg:x="6689" fg:w="7"/><text x="72.8067%" y="607.50"></text></g><g><title>ntdll`RtlAllocateHeap (5 samples, 0.05%)</title><rect x="72.5784%" y="581" width="0.0542%" height="15" fill="rgb(232,48,39)" fg:x="6691" fg:w="5"/><text x="72.8284%" y="591.50"></text></g><g><title>ntdll`RtlSetUserValueHeap (1 samples, 0.01%)</title><rect x="72.6218%" y="565" width="0.0108%" height="15" fill="rgb(236,34,42)" fg:x="6695" fg:w="1"/><text x="72.8718%" y="575.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState,ref$&lt;ref$ (2 samples, 0.02%)</title><rect x="72.6326%" y="613" width="0.0217%" height="15" fill="rgb(243,106,37)" fg:x="6696" fg:w="2"/><text x="72.8826%" y="623.50"></text></g><g><title>stelpatch-benchmark`core::hash::sip::impl$5::write (2 samples, 0.02%)</title><rect x="72.6326%" y="597" width="0.0217%" height="15" fill="rgb(218,96,6)" fg:x="6696" fg:w="2"/><text x="72.8826%" y="607.50"></text></g><g><title>stelpatch-benchmark`hashbrown::map::HashMap&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedPropertyInfoList,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::rustc_entry&lt;ref$ (6 samples, 0.07%)</title><rect x="72.6326%" y="629" width="0.0651%" height="15" fill="rgb(235,130,12)" fg:x="6696" fg:w="6"/><text x="72.8826%" y="639.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedPropertyInfoList&gt;,alloc::alloc::Global&gt;::reserve_rehash&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedPropertyInfoList&gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;ref$&lt;str$&gt;,ref$ (4 samples, 0.04%)</title><rect x="72.6543%" y="613" width="0.0434%" height="15" fill="rgb(231,95,0)" fg:x="6698" fg:w="4"/><text x="72.9043%" y="623.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.02%)</title><rect x="72.6760%" y="597" width="0.0217%" height="15" fill="rgb(228,12,23)" fg:x="6700" fg:w="2"/><text x="72.9260%" y="607.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.02%)</title><rect x="72.6760%" y="581" width="0.0217%" height="15" fill="rgb(216,12,1)" fg:x="6700" fg:w="2"/><text x="72.9260%" y="591.50"></text></g><g><title>ntdll`RtlSetUserValueHeap (1 samples, 0.01%)</title><rect x="72.6868%" y="565" width="0.0108%" height="15" fill="rgb(219,59,3)" fg:x="6701" fg:w="1"/><text x="72.9368%" y="575.50"></text></g><g><title>VCRUNTIME140`memcpy (2 samples, 0.02%)</title><rect x="72.7085%" y="613" width="0.0217%" height="15" fill="rgb(215,208,46)" fg:x="6703" fg:w="2"/><text x="72.9585%" y="623.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::RawVec&lt;enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,alloc::alloc::Global&gt;::reserve_for_push&lt;enum2$ (3 samples, 0.03%)</title><rect x="72.7302%" y="613" width="0.0325%" height="15" fill="rgb(254,224,29)" fg:x="6705" fg:w="3"/><text x="72.9802%" y="623.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="72.7411%" y="597" width="0.0217%" height="15" fill="rgb(232,14,29)" fg:x="6706" fg:w="2"/><text x="72.9911%" y="607.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.02%)</title><rect x="72.7411%" y="581" width="0.0217%" height="15" fill="rgb(208,45,52)" fg:x="6706" fg:w="2"/><text x="72.9911%" y="591.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.02%)</title><rect x="72.7411%" y="565" width="0.0217%" height="15" fill="rgb(234,191,28)" fg:x="6706" fg:w="2"/><text x="72.9911%" y="575.50"></text></g><g><title>ntdll`RtlSetUserValueHeap (1 samples, 0.01%)</title><rect x="72.7519%" y="549" width="0.0108%" height="15" fill="rgb(244,67,43)" fg:x="6707" fg:w="1"/><text x="73.0019%" y="559.50"></text></g><g><title>VCRUNTIME140`memcpy (4 samples, 0.04%)</title><rect x="72.7628%" y="597" width="0.0434%" height="15" fill="rgb(236,189,24)" fg:x="6708" fg:w="4"/><text x="73.0128%" y="607.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="72.8062%" y="565" width="0.0108%" height="15" fill="rgb(239,214,33)" fg:x="6712" fg:w="1"/><text x="73.0562%" y="575.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$ (2 samples, 0.02%)</title><rect x="72.8062%" y="597" width="0.0217%" height="15" fill="rgb(226,176,41)" fg:x="6712" fg:w="2"/><text x="73.0562%" y="607.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (2 samples, 0.02%)</title><rect x="72.8062%" y="581" width="0.0217%" height="15" fill="rgb(248,47,8)" fg:x="6712" fg:w="2"/><text x="73.0562%" y="591.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="72.8170%" y="565" width="0.0108%" height="15" fill="rgb(218,81,44)" fg:x="6713" fg:w="1"/><text x="73.0670%" y="575.50"></text></g><g><title>VCRUNTIME140`memcpy (8 samples, 0.09%)</title><rect x="72.8495%" y="581" width="0.0868%" height="15" fill="rgb(213,98,6)" fg:x="6716" fg:w="8"/><text x="73.0995%" y="591.50"></text></g><g><title>stelpatch-benchmark`core::ops::function::FnMut::call_mut&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),tuple$&lt;ref$ (2 samples, 0.02%)</title><rect x="72.9580%" y="549" width="0.0217%" height="15" fill="rgb(222,85,22)" fg:x="6726" fg:w="2"/><text x="73.2080%" y="559.50"></text></g><g><title>stelpatch-benchmark`nom::sequence::impl$3::parse&lt;ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;char&gt; &gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;tuple$&lt;char,ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,ref$&lt;str$&gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (1 samples, 0.01%)</title><rect x="72.9689%" y="533" width="0.0108%" height="15" fill="rgb(239,46,39)" fg:x="6727" fg:w="1"/><text x="73.2189%" y="543.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="72.9689%" y="517" width="0.0108%" height="15" fill="rgb(237,12,29)" fg:x="6727" fg:w="1"/><text x="73.2189%" y="527.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="73.0123%" y="469" width="0.0108%" height="15" fill="rgb(214,77,8)" fg:x="6731" fg:w="1"/><text x="73.2623%" y="479.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::bytes::complete::is_not::closure$0::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="73.0123%" y="453" width="0.0108%" height="15" fill="rgb(217,168,37)" fg:x="6731" fg:w="1"/><text x="73.2623%" y="463.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$32::find_token (1 samples, 0.01%)</title><rect x="73.0123%" y="437" width="0.0108%" height="15" fill="rgb(221,217,23)" fg:x="6731" fg:w="1"/><text x="73.2623%" y="447.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$2::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::one_of::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (4 samples, 0.04%)</title><rect x="73.0014%" y="501" width="0.0434%" height="15" fill="rgb(243,229,36)" fg:x="6730" fg:w="4"/><text x="73.2514%" y="511.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (4 samples, 0.04%)</title><rect x="73.0014%" y="485" width="0.0434%" height="15" fill="rgb(251,163,40)" fg:x="6730" fg:w="4"/><text x="73.2514%" y="495.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (2 samples, 0.02%)</title><rect x="73.0231%" y="469" width="0.0217%" height="15" fill="rgb(237,222,12)" fg:x="6732" fg:w="2"/><text x="73.2731%" y="479.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$130::slice (1 samples, 0.01%)</title><rect x="73.0556%" y="485" width="0.0108%" height="15" fill="rgb(248,132,6)" fg:x="6735" fg:w="1"/><text x="73.3056%" y="495.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (26 samples, 0.28%)</title><rect x="72.9797%" y="533" width="0.2820%" height="15" fill="rgb(227,167,50)" fg:x="6728" fg:w="26"/><text x="73.2297%" y="543.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (25 samples, 0.27%)</title><rect x="72.9906%" y="517" width="0.2712%" height="15" fill="rgb(242,84,37)" fg:x="6729" fg:w="25"/><text x="73.2406%" y="527.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,char&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (20 samples, 0.22%)</title><rect x="73.0448%" y="501" width="0.2169%" height="15" fill="rgb(212,4,50)" fg:x="6734" fg:w="20"/><text x="73.2948%" y="511.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$32::find_token (18 samples, 0.20%)</title><rect x="73.0665%" y="485" width="0.1952%" height="15" fill="rgb(230,228,32)" fg:x="6736" fg:w="18"/><text x="73.3165%" y="495.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (27 samples, 0.29%)</title><rect x="72.9797%" y="549" width="0.2929%" height="15" fill="rgb(248,217,23)" fg:x="6728" fg:w="27"/><text x="73.2297%" y="559.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;char,ref$&lt;str$&gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (1 samples, 0.01%)</title><rect x="73.2617%" y="533" width="0.0108%" height="15" fill="rgb(238,197,32)" fg:x="6754" fg:w="1"/><text x="73.5117%" y="543.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (1 samples, 0.01%)</title><rect x="73.2617%" y="517" width="0.0108%" height="15" fill="rgb(236,106,1)" fg:x="6754" fg:w="1"/><text x="73.5117%" y="527.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$2::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::one_of::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (1 samples, 0.01%)</title><rect x="73.2617%" y="501" width="0.0108%" height="15" fill="rgb(219,228,13)" fg:x="6754" fg:w="1"/><text x="73.5117%" y="511.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (1 samples, 0.01%)</title><rect x="73.2617%" y="485" width="0.0108%" height="15" fill="rgb(238,30,35)" fg:x="6754" fg:w="1"/><text x="73.5117%" y="495.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="73.2617%" y="469" width="0.0108%" height="15" fill="rgb(236,70,23)" fg:x="6754" fg:w="1"/><text x="73.5117%" y="479.50"></text></g><g><title>VCRUNTIME140`memcpy (2 samples, 0.02%)</title><rect x="73.3268%" y="533" width="0.0217%" height="15" fill="rgb(249,104,48)" fg:x="6760" fg:w="2"/><text x="73.5768%" y="543.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::RawVec&lt;stelpatch::cw_model::PropertyInfo,alloc::alloc::Global&gt;::reserve_for_push (2 samples, 0.02%)</title><rect x="73.3485%" y="533" width="0.0217%" height="15" fill="rgb(254,117,50)" fg:x="6762" fg:w="2"/><text x="73.5985%" y="543.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="73.3485%" y="517" width="0.0217%" height="15" fill="rgb(223,152,4)" fg:x="6762" fg:w="2"/><text x="73.5985%" y="527.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.02%)</title><rect x="73.3485%" y="501" width="0.0217%" height="15" fill="rgb(245,6,2)" fg:x="6762" fg:w="2"/><text x="73.5985%" y="511.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.02%)</title><rect x="73.3485%" y="485" width="0.0217%" height="15" fill="rgb(249,150,24)" fg:x="6762" fg:w="2"/><text x="73.5985%" y="495.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState,ref$&lt;ref$ (5 samples, 0.05%)</title><rect x="73.3811%" y="517" width="0.0542%" height="15" fill="rgb(228,185,42)" fg:x="6765" fg:w="5"/><text x="73.6311%" y="527.50"></text></g><g><title>stelpatch-benchmark`core::hash::sip::impl$5::write (4 samples, 0.04%)</title><rect x="73.3919%" y="501" width="0.0434%" height="15" fill="rgb(226,39,33)" fg:x="6766" fg:w="4"/><text x="73.6419%" y="511.50"></text></g><g><title>VCRUNTIME140`memset (2 samples, 0.02%)</title><rect x="73.4461%" y="501" width="0.0217%" height="15" fill="rgb(221,166,19)" fg:x="6771" fg:w="2"/><text x="73.6961%" y="511.50"></text></g><g><title>stelpatch-benchmark`hashbrown::map::HashMap&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedPropertyInfoList,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::rustc_entry&lt;ref$ (13 samples, 0.14%)</title><rect x="73.3702%" y="533" width="0.1410%" height="15" fill="rgb(209,109,2)" fg:x="6764" fg:w="13"/><text x="73.6202%" y="543.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedPropertyInfoList&gt;,alloc::alloc::Global&gt;::reserve_rehash&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedPropertyInfoList&gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;ref$&lt;str$&gt;,ref$ (7 samples, 0.08%)</title><rect x="73.4353%" y="517" width="0.0759%" height="15" fill="rgb(252,216,26)" fg:x="6770" fg:w="7"/><text x="73.6853%" y="527.50"></text></g><g><title>ntdll`RtlAllocateHeap (4 samples, 0.04%)</title><rect x="73.4678%" y="501" width="0.0434%" height="15" fill="rgb(227,173,36)" fg:x="6773" fg:w="4"/><text x="73.7178%" y="511.50"></text></g><g><title>ntdll`RtlAllocateHeap (4 samples, 0.04%)</title><rect x="73.4678%" y="485" width="0.0434%" height="15" fill="rgb(209,90,7)" fg:x="6773" fg:w="4"/><text x="73.7178%" y="495.50"></text></g><g><title>ntdll`RtlCreateTimer (1 samples, 0.01%)</title><rect x="73.5004%" y="469" width="0.0108%" height="15" fill="rgb(250,194,11)" fg:x="6776" fg:w="1"/><text x="73.7504%" y="479.50"></text></g><g><title>VCRUNTIME140`memcpy (1 samples, 0.01%)</title><rect x="73.5221%" y="501" width="0.0108%" height="15" fill="rgb(220,72,50)" fg:x="6778" fg:w="1"/><text x="73.7721%" y="511.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="73.5329%" y="501" width="0.0108%" height="15" fill="rgb(222,106,48)" fg:x="6779" fg:w="1"/><text x="73.7829%" y="511.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$5::choice&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(stelpatch::cw_parser::parser::ParsedEntity)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(ref$&lt;str$&gt;)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),stelpatch::cw_parser::parser::script_value::closure_env$0&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result (1 samples, 0.01%)</title><rect x="73.5329%" y="485" width="0.0108%" height="15" fill="rgb(216,220,45)" fg:x="6779" fg:w="1"/><text x="73.7829%" y="495.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (1 samples, 0.01%)</title><rect x="73.5329%" y="469" width="0.0108%" height="15" fill="rgb(234,112,18)" fg:x="6779" fg:w="1"/><text x="73.7829%" y="479.50"></text></g><g><title>VCRUNTIME140`memcpy (5 samples, 0.05%)</title><rect x="73.5438%" y="485" width="0.0542%" height="15" fill="rgb(206,179,9)" fg:x="6780" fg:w="5"/><text x="73.7938%" y="495.50"></text></g><g><title>stelpatch-benchmark`core::ops::function::FnMut::call_mut&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),tuple$&lt;ref$ (1 samples, 0.01%)</title><rect x="73.6197%" y="453" width="0.0108%" height="15" fill="rgb(215,115,40)" fg:x="6787" fg:w="1"/><text x="73.8697%" y="463.50"></text></g><g><title>stelpatch-benchmark`nom::sequence::impl$3::parse&lt;ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;char&gt; &gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;tuple$&lt;char,ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,ref$&lt;str$&gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (1 samples, 0.01%)</title><rect x="73.6197%" y="437" width="0.0108%" height="15" fill="rgb(222,69,34)" fg:x="6787" fg:w="1"/><text x="73.8697%" y="447.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$130::slice (2 samples, 0.02%)</title><rect x="73.6522%" y="389" width="0.0217%" height="15" fill="rgb(209,161,10)" fg:x="6790" fg:w="2"/><text x="73.9022%" y="399.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,char&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (11 samples, 0.12%)</title><rect x="73.6305%" y="405" width="0.1193%" height="15" fill="rgb(217,6,38)" fg:x="6788" fg:w="11"/><text x="73.8805%" y="415.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$32::find_token (7 samples, 0.08%)</title><rect x="73.6739%" y="389" width="0.0759%" height="15" fill="rgb(229,229,48)" fg:x="6792" fg:w="7"/><text x="73.9239%" y="399.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (12 samples, 0.13%)</title><rect x="73.6305%" y="453" width="0.1302%" height="15" fill="rgb(225,21,28)" fg:x="6788" fg:w="12"/><text x="73.8805%" y="463.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (12 samples, 0.13%)</title><rect x="73.6305%" y="437" width="0.1302%" height="15" fill="rgb(206,33,13)" fg:x="6788" fg:w="12"/><text x="73.8805%" y="447.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (12 samples, 0.13%)</title><rect x="73.6305%" y="421" width="0.1302%" height="15" fill="rgb(242,178,17)" fg:x="6788" fg:w="12"/><text x="73.8805%" y="431.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$6::offset (1 samples, 0.01%)</title><rect x="73.7499%" y="405" width="0.0108%" height="15" fill="rgb(220,162,5)" fg:x="6799" fg:w="1"/><text x="73.9999%" y="415.50"></text></g><g><title>VCRUNTIME140`memcpy (3 samples, 0.03%)</title><rect x="73.7607%" y="437" width="0.0325%" height="15" fill="rgb(210,33,43)" fg:x="6800" fg:w="3"/><text x="74.0107%" y="447.50"></text></g><g><title>ntdll`RtlFreeHeap (2 samples, 0.02%)</title><rect x="73.7933%" y="437" width="0.0217%" height="15" fill="rgb(216,116,54)" fg:x="6803" fg:w="2"/><text x="74.0433%" y="447.50"></text></g><g><title>ntdll`memset (2 samples, 0.02%)</title><rect x="73.7933%" y="421" width="0.0217%" height="15" fill="rgb(249,92,24)" fg:x="6803" fg:w="2"/><text x="74.0433%" y="431.50"></text></g><g><title>stelpatch-benchmark`hashbrown::map::HashMap&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedPropertyInfoList,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::rustc_entry&lt;ref$ (1 samples, 0.01%)</title><rect x="73.8149%" y="437" width="0.0108%" height="15" fill="rgb(231,189,14)" fg:x="6805" fg:w="1"/><text x="74.0649%" y="447.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedPropertyInfoList&gt;,alloc::alloc::Global&gt;::reserve_rehash&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedPropertyInfoList&gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;ref$&lt;str$&gt;,ref$ (1 samples, 0.01%)</title><rect x="73.8149%" y="421" width="0.0108%" height="15" fill="rgb(230,8,41)" fg:x="6805" fg:w="1"/><text x="74.0649%" y="431.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="73.8149%" y="405" width="0.0108%" height="15" fill="rgb(249,7,27)" fg:x="6805" fg:w="1"/><text x="74.0649%" y="415.50"></text></g><g><title>VCRUNTIME140`memcpy (1 samples, 0.01%)</title><rect x="73.8258%" y="421" width="0.0108%" height="15" fill="rgb(232,86,5)" fg:x="6806" fg:w="1"/><text x="74.0758%" y="431.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="73.8366%" y="389" width="0.0108%" height="15" fill="rgb(224,175,18)" fg:x="6807" fg:w="1"/><text x="74.0866%" y="399.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="73.8366%" y="373" width="0.0108%" height="15" fill="rgb(220,129,12)" fg:x="6807" fg:w="1"/><text x="74.0866%" y="383.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::RawVec&lt;enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,alloc::alloc::Global&gt;::reserve_for_push&lt;enum2$ (2 samples, 0.02%)</title><rect x="73.8366%" y="421" width="0.0217%" height="15" fill="rgb(210,19,36)" fg:x="6807" fg:w="2"/><text x="74.0866%" y="431.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="73.8366%" y="405" width="0.0217%" height="15" fill="rgb(219,96,14)" fg:x="6807" fg:w="2"/><text x="74.0866%" y="415.50"></text></g><g><title>stelpatch-benchmark`std::alloc::__default_lib_allocator::__rdl_alloc (1 samples, 0.01%)</title><rect x="73.8475%" y="389" width="0.0108%" height="15" fill="rgb(249,106,1)" fg:x="6808" fg:w="1"/><text x="74.0975%" y="399.50"></text></g><g><title>VCRUNTIME140`memcpy (1 samples, 0.01%)</title><rect x="73.8583%" y="389" width="0.0108%" height="15" fill="rgb(249,155,20)" fg:x="6809" fg:w="1"/><text x="74.1083%" y="399.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (7 samples, 0.08%)</title><rect x="73.8692%" y="357" width="0.0759%" height="15" fill="rgb(244,168,9)" fg:x="6810" fg:w="7"/><text x="74.1192%" y="367.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (7 samples, 0.08%)</title><rect x="73.8692%" y="341" width="0.0759%" height="15" fill="rgb(216,23,50)" fg:x="6810" fg:w="7"/><text x="74.1192%" y="351.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (6 samples, 0.07%)</title><rect x="73.8800%" y="325" width="0.0651%" height="15" fill="rgb(224,219,20)" fg:x="6811" fg:w="6"/><text x="74.1300%" y="335.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,char&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (6 samples, 0.07%)</title><rect x="73.8800%" y="309" width="0.0651%" height="15" fill="rgb(222,156,15)" fg:x="6811" fg:w="6"/><text x="74.1300%" y="319.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$32::find_token (4 samples, 0.04%)</title><rect x="73.9017%" y="293" width="0.0434%" height="15" fill="rgb(231,97,17)" fg:x="6813" fg:w="4"/><text x="74.1517%" y="303.50"></text></g><g><title>stelpatch-benchmark`hashbrown::map::HashMap&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedPropertyInfoList,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::rustc_entry&lt;ref$ (1 samples, 0.01%)</title><rect x="73.9451%" y="341" width="0.0108%" height="15" fill="rgb(218,70,48)" fg:x="6817" fg:w="1"/><text x="74.1951%" y="351.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState,ref$&lt;ref$ (1 samples, 0.01%)</title><rect x="73.9451%" y="325" width="0.0108%" height="15" fill="rgb(212,196,52)" fg:x="6817" fg:w="1"/><text x="74.1951%" y="335.50"></text></g><g><title>stelpatch-benchmark`core::hash::sip::impl$5::write (1 samples, 0.01%)</title><rect x="73.9451%" y="309" width="0.0108%" height="15" fill="rgb(243,203,18)" fg:x="6817" fg:w="1"/><text x="74.1951%" y="319.50"></text></g><g><title>VCRUNTIME140`memcpy (2 samples, 0.02%)</title><rect x="73.9560%" y="293" width="0.0217%" height="15" fill="rgb(252,125,41)" fg:x="6818" fg:w="2"/><text x="74.2060%" y="303.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (2 samples, 0.02%)</title><rect x="73.9777%" y="261" width="0.0217%" height="15" fill="rgb(223,180,33)" fg:x="6820" fg:w="2"/><text x="74.2277%" y="271.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (2 samples, 0.02%)</title><rect x="73.9777%" y="245" width="0.0217%" height="15" fill="rgb(254,159,46)" fg:x="6820" fg:w="2"/><text x="74.2277%" y="255.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (2 samples, 0.02%)</title><rect x="73.9777%" y="229" width="0.0217%" height="15" fill="rgb(254,38,10)" fg:x="6820" fg:w="2"/><text x="74.2277%" y="239.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,char&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (2 samples, 0.02%)</title><rect x="73.9777%" y="213" width="0.0217%" height="15" fill="rgb(208,217,32)" fg:x="6820" fg:w="2"/><text x="74.2277%" y="223.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$32::find_token (1 samples, 0.01%)</title><rect x="73.9885%" y="197" width="0.0108%" height="15" fill="rgb(221,120,13)" fg:x="6821" fg:w="1"/><text x="74.2385%" y="207.50"></text></g><g><title>stelpatch-benchmark`core::ops::function::FnMut::call_mut&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),tuple$&lt;ref$ (1 samples, 0.01%)</title><rect x="73.9993%" y="165" width="0.0108%" height="15" fill="rgb(246,54,52)" fg:x="6822" fg:w="1"/><text x="74.2493%" y="175.50"></text></g><g><title>stelpatch-benchmark`nom::sequence::impl$3::parse&lt;ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;char&gt; &gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;tuple$&lt;char,ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,ref$&lt;str$&gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (1 samples, 0.01%)</title><rect x="73.9993%" y="149" width="0.0108%" height="15" fill="rgb(242,34,25)" fg:x="6822" fg:w="1"/><text x="74.2493%" y="159.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="73.9993%" y="133" width="0.0108%" height="15" fill="rgb(247,209,9)" fg:x="6822" fg:w="1"/><text x="74.2493%" y="143.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$5::choice&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(stelpatch::cw_parser::parser::ParsedEntity)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(ref$&lt;str$&gt;)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),stelpatch::cw_parser::parser::script_value::closure_env$0&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result (2 samples, 0.02%)</title><rect x="73.9993%" y="181" width="0.0217%" height="15" fill="rgb(228,71,26)" fg:x="6822" fg:w="2"/><text x="74.2493%" y="191.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (1 samples, 0.01%)</title><rect x="74.0102%" y="165" width="0.0108%" height="15" fill="rgb(222,145,49)" fg:x="6823" fg:w="1"/><text x="74.2602%" y="175.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;alloc::vec::Vec&lt;enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,alloc::alloc::Global&gt;,char&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::cut::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;alloc::vec::Vec&lt;enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,alloc::alloc::Global&gt;,char&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::multi::many_till::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedExpression)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context (1 samples, 0.01%)</title><rect x="74.0102%" y="149" width="0.0108%" height="15" fill="rgb(218,121,17)" fg:x="6823" fg:w="1"/><text x="74.2602%" y="159.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$2::choice&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedExpression)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedConditionalBlock,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedConditionalBlock&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedConditionalBlock)&gt;,enum2$ (1 samples, 0.01%)</title><rect x="74.0102%" y="133" width="0.0108%" height="15" fill="rgb(244,50,7)" fg:x="6823" fg:w="1"/><text x="74.2602%" y="143.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedExpression)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="74.0102%" y="117" width="0.0108%" height="15" fill="rgb(246,229,37)" fg:x="6823" fg:w="1"/><text x="74.2602%" y="127.50"></text></g><g><title>stelpatch-benchmark`core::ops::function::FnMut::call_mut&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),tuple$&lt;ref$ (1 samples, 0.01%)</title><rect x="74.0102%" y="101" width="0.0108%" height="15" fill="rgb(225,18,5)" fg:x="6823" fg:w="1"/><text x="74.2602%" y="111.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$5::choice&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(stelpatch::cw_parser::parser::ParsedEntity)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(ref$&lt;str$&gt;)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),stelpatch::cw_parser::parser::script_value::closure_env$0&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result (1 samples, 0.01%)</title><rect x="74.0102%" y="85" width="0.0108%" height="15" fill="rgb(213,204,8)" fg:x="6823" fg:w="1"/><text x="74.2602%" y="95.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (1 samples, 0.01%)</title><rect x="74.0102%" y="69" width="0.0108%" height="15" fill="rgb(238,103,6)" fg:x="6823" fg:w="1"/><text x="74.2602%" y="79.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;alloc::vec::Vec&lt;enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,alloc::alloc::Global&gt;,char&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::cut::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;alloc::vec::Vec&lt;enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,alloc::alloc::Global&gt;,char&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::multi::many_till::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedExpression)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context (1 samples, 0.01%)</title><rect x="74.0102%" y="53" width="0.0108%" height="15" fill="rgb(222,25,35)" fg:x="6823" fg:w="1"/><text x="74.2602%" y="63.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$2::choice&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedExpression)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedConditionalBlock,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedConditionalBlock&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedConditionalBlock)&gt;,enum2$ (1 samples, 0.01%)</title><rect x="74.0102%" y="37" width="0.0108%" height="15" fill="rgb(213,203,35)" fg:x="6823" fg:w="1"/><text x="74.2602%" y="47.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$5::choice&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(stelpatch::cw_parser::parser::ParsedEntity)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(ref$&lt;str$&gt;)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),stelpatch::cw_parser::parser::script_value::closure_env$0&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result (6 samples, 0.07%)</title><rect x="73.9777%" y="277" width="0.0651%" height="15" fill="rgb(221,79,53)" fg:x="6820" fg:w="6"/><text x="74.2277%" y="287.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (4 samples, 0.04%)</title><rect x="73.9993%" y="261" width="0.0434%" height="15" fill="rgb(243,200,35)" fg:x="6822" fg:w="4"/><text x="74.2493%" y="271.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;alloc::vec::Vec&lt;enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,alloc::alloc::Global&gt;,char&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::cut::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;alloc::vec::Vec&lt;enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,alloc::alloc::Global&gt;,char&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::multi::many_till::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedExpression)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context (4 samples, 0.04%)</title><rect x="73.9993%" y="245" width="0.0434%" height="15" fill="rgb(248,60,25)" fg:x="6822" fg:w="4"/><text x="74.2493%" y="255.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$2::choice&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedExpression)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedConditionalBlock,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedConditionalBlock&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedConditionalBlock)&gt;,enum2$ (4 samples, 0.04%)</title><rect x="73.9993%" y="229" width="0.0434%" height="15" fill="rgb(227,53,46)" fg:x="6822" fg:w="4"/><text x="74.2493%" y="239.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedExpression)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$ (4 samples, 0.04%)</title><rect x="73.9993%" y="213" width="0.0434%" height="15" fill="rgb(216,120,32)" fg:x="6822" fg:w="4"/><text x="74.2493%" y="223.50"></text></g><g><title>stelpatch-benchmark`core::ops::function::FnMut::call_mut&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),tuple$&lt;ref$ (4 samples, 0.04%)</title><rect x="73.9993%" y="197" width="0.0434%" height="15" fill="rgb(220,134,1)" fg:x="6822" fg:w="4"/><text x="74.2493%" y="207.50"></text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::with_opt_trailing_ws::closure$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (2 samples, 0.02%)</title><rect x="74.0210%" y="181" width="0.0217%" height="15" fill="rgb(237,168,5)" fg:x="6824" fg:w="2"/><text x="74.2710%" y="191.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (2 samples, 0.02%)</title><rect x="74.0210%" y="165" width="0.0217%" height="15" fill="rgb(231,100,33)" fg:x="6824" fg:w="2"/><text x="74.2710%" y="175.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (2 samples, 0.02%)</title><rect x="74.0210%" y="149" width="0.0217%" height="15" fill="rgb(236,177,47)" fg:x="6824" fg:w="2"/><text x="74.2710%" y="159.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,char&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (2 samples, 0.02%)</title><rect x="74.0210%" y="133" width="0.0217%" height="15" fill="rgb(235,7,49)" fg:x="6824" fg:w="2"/><text x="74.2710%" y="143.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$130::slice (1 samples, 0.01%)</title><rect x="74.0427%" y="213" width="0.0108%" height="15" fill="rgb(232,119,22)" fg:x="6826" fg:w="1"/><text x="74.2927%" y="223.50"></text></g><g><title>stelpatch-benchmark`core::ops::function::FnMut::call_mut&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),tuple$&lt;ref$ (9 samples, 0.10%)</title><rect x="73.9777%" y="293" width="0.0976%" height="15" fill="rgb(254,73,53)" fg:x="6820" fg:w="9"/><text x="74.2277%" y="303.50"></text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::with_opt_trailing_ws::closure$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (3 samples, 0.03%)</title><rect x="74.0427%" y="277" width="0.0325%" height="15" fill="rgb(251,35,20)" fg:x="6826" fg:w="3"/><text x="74.2927%" y="287.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (3 samples, 0.03%)</title><rect x="74.0427%" y="261" width="0.0325%" height="15" fill="rgb(241,119,20)" fg:x="6826" fg:w="3"/><text x="74.2927%" y="271.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (3 samples, 0.03%)</title><rect x="74.0427%" y="245" width="0.0325%" height="15" fill="rgb(207,102,14)" fg:x="6826" fg:w="3"/><text x="74.2927%" y="255.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,char&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (3 samples, 0.03%)</title><rect x="74.0427%" y="229" width="0.0325%" height="15" fill="rgb(248,201,50)" fg:x="6826" fg:w="3"/><text x="74.2927%" y="239.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$32::find_token (2 samples, 0.02%)</title><rect x="74.0536%" y="213" width="0.0217%" height="15" fill="rgb(222,185,44)" fg:x="6827" fg:w="2"/><text x="74.3036%" y="223.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;alloc::vec::Vec&lt;enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,alloc::alloc::Global&gt;,char&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::cut::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;alloc::vec::Vec&lt;enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,alloc::alloc::Global&gt;,char&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::multi::many_till::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedExpression)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context (12 samples, 0.13%)</title><rect x="73.9560%" y="341" width="0.1302%" height="15" fill="rgb(218,107,18)" fg:x="6818" fg:w="12"/><text x="74.2060%" y="351.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$2::choice&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedExpression)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedConditionalBlock,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedConditionalBlock&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedConditionalBlock)&gt;,enum2$ (12 samples, 0.13%)</title><rect x="73.9560%" y="325" width="0.1302%" height="15" fill="rgb(237,177,39)" fg:x="6818" fg:w="12"/><text x="74.2060%" y="335.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedExpression)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$ (12 samples, 0.13%)</title><rect x="73.9560%" y="309" width="0.1302%" height="15" fill="rgb(246,69,6)" fg:x="6818" fg:w="12"/><text x="74.2060%" y="319.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (1 samples, 0.01%)</title><rect x="74.0753%" y="293" width="0.0108%" height="15" fill="rgb(234,208,37)" fg:x="6829" fg:w="1"/><text x="74.3253%" y="303.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="74.0753%" y="277" width="0.0108%" height="15" fill="rgb(225,4,6)" fg:x="6829" fg:w="1"/><text x="74.3253%" y="287.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$5::choice&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(stelpatch::cw_parser::parser::ParsedEntity)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(ref$&lt;str$&gt;)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),stelpatch::cw_parser::parser::script_value::closure_env$0&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result (21 samples, 0.23%)</title><rect x="73.8692%" y="373" width="0.2278%" height="15" fill="rgb(233,45,0)" fg:x="6810" fg:w="21"/><text x="74.1192%" y="383.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (14 samples, 0.15%)</title><rect x="73.9451%" y="357" width="0.1519%" height="15" fill="rgb(226,136,5)" fg:x="6817" fg:w="14"/><text x="74.1951%" y="367.50"></text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::with_opt_trailing_ws::closure$0&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,char,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="74.0861%" y="341" width="0.0108%" height="15" fill="rgb(211,91,47)" fg:x="6830" fg:w="1"/><text x="74.3361%" y="351.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (1 samples, 0.01%)</title><rect x="74.0861%" y="325" width="0.0108%" height="15" fill="rgb(242,88,51)" fg:x="6830" fg:w="1"/><text x="74.3361%" y="335.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="74.0861%" y="309" width="0.0108%" height="15" fill="rgb(230,91,28)" fg:x="6830" fg:w="1"/><text x="74.3361%" y="319.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$2::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::one_of::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (1 samples, 0.01%)</title><rect x="74.0970%" y="325" width="0.0108%" height="15" fill="rgb(254,186,29)" fg:x="6831" fg:w="1"/><text x="74.3470%" y="335.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (1 samples, 0.01%)</title><rect x="74.0970%" y="309" width="0.0108%" height="15" fill="rgb(238,6,4)" fg:x="6831" fg:w="1"/><text x="74.3470%" y="319.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="74.0970%" y="293" width="0.0108%" height="15" fill="rgb(221,151,16)" fg:x="6831" fg:w="1"/><text x="74.3470%" y="303.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (4 samples, 0.04%)</title><rect x="74.0970%" y="357" width="0.0434%" height="15" fill="rgb(251,143,52)" fg:x="6831" fg:w="4"/><text x="74.3470%" y="367.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (4 samples, 0.04%)</title><rect x="74.0970%" y="341" width="0.0434%" height="15" fill="rgb(206,90,15)" fg:x="6831" fg:w="4"/><text x="74.3470%" y="351.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,char&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (3 samples, 0.03%)</title><rect x="74.1078%" y="325" width="0.0325%" height="15" fill="rgb(218,35,8)" fg:x="6832" fg:w="3"/><text x="74.3578%" y="335.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$32::find_token (3 samples, 0.03%)</title><rect x="74.1078%" y="309" width="0.0325%" height="15" fill="rgb(239,215,6)" fg:x="6832" fg:w="3"/><text x="74.3578%" y="319.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;alloc::vec::Vec&lt;enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,alloc::alloc::Global&gt;,char&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::cut::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;alloc::vec::Vec&lt;enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,alloc::alloc::Global&gt;,char&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::multi::many_till::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedExpression)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context (30 samples, 0.33%)</title><rect x="73.8258%" y="437" width="0.3254%" height="15" fill="rgb(245,116,39)" fg:x="6806" fg:w="30"/><text x="74.0758%" y="447.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$2::choice&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedExpression)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedConditionalBlock,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedConditionalBlock&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedConditionalBlock)&gt;,enum2$ (27 samples, 0.29%)</title><rect x="73.8583%" y="421" width="0.2929%" height="15" fill="rgb(242,65,28)" fg:x="6809" fg:w="27"/><text x="74.1083%" y="431.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedExpression)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$ (27 samples, 0.29%)</title><rect x="73.8583%" y="405" width="0.2929%" height="15" fill="rgb(252,132,53)" fg:x="6809" fg:w="27"/><text x="74.1083%" y="415.50"></text></g><g><title>stelpatch-benchmark`core::ops::function::FnMut::call_mut&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),tuple$&lt;ref$ (26 samples, 0.28%)</title><rect x="73.8692%" y="389" width="0.2820%" height="15" fill="rgb(224,159,50)" fg:x="6810" fg:w="26"/><text x="74.1192%" y="399.50"></text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::with_opt_trailing_ws::closure$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (5 samples, 0.05%)</title><rect x="74.0970%" y="373" width="0.0542%" height="15" fill="rgb(224,93,4)" fg:x="6831" fg:w="5"/><text x="74.3470%" y="383.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (1 samples, 0.01%)</title><rect x="74.1404%" y="357" width="0.0108%" height="15" fill="rgb(208,81,34)" fg:x="6835" fg:w="1"/><text x="74.3904%" y="367.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="74.1404%" y="341" width="0.0108%" height="15" fill="rgb(233,92,54)" fg:x="6835" fg:w="1"/><text x="74.3904%" y="351.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (37 samples, 0.40%)</title><rect x="73.7607%" y="453" width="0.4013%" height="15" fill="rgb(237,21,14)" fg:x="6800" fg:w="37"/><text x="74.0107%" y="463.50"></text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::with_opt_trailing_ws::closure$0&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,char,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="74.1512%" y="437" width="0.0108%" height="15" fill="rgb(249,128,51)" fg:x="6836" fg:w="1"/><text x="74.4012%" y="447.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (1 samples, 0.01%)</title><rect x="74.1512%" y="421" width="0.0108%" height="15" fill="rgb(223,129,24)" fg:x="6836" fg:w="1"/><text x="74.4012%" y="431.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="74.1512%" y="405" width="0.0108%" height="15" fill="rgb(231,168,25)" fg:x="6836" fg:w="1"/><text x="74.4012%" y="415.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$5::choice&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(stelpatch::cw_parser::parser::ParsedEntity)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(ref$&lt;str$&gt;)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),stelpatch::cw_parser::parser::script_value::closure_env$0&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result (52 samples, 0.56%)</title><rect x="73.6089%" y="469" width="0.5641%" height="15" fill="rgb(224,39,20)" fg:x="6786" fg:w="52"/><text x="73.8589%" y="479.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (1 samples, 0.01%)</title><rect x="74.1621%" y="453" width="0.0108%" height="15" fill="rgb(225,152,53)" fg:x="6837" fg:w="1"/><text x="74.4121%" y="463.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="74.1729%" y="469" width="0.0108%" height="15" fill="rgb(252,17,24)" fg:x="6838" fg:w="1"/><text x="74.4229%" y="479.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (1 samples, 0.01%)</title><rect x="74.1729%" y="453" width="0.0108%" height="15" fill="rgb(250,114,30)" fg:x="6838" fg:w="1"/><text x="74.4229%" y="463.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$130::slice (1 samples, 0.01%)</title><rect x="74.2054%" y="405" width="0.0108%" height="15" fill="rgb(229,5,4)" fg:x="6841" fg:w="1"/><text x="74.4554%" y="415.50"></text></g><g><title>stelpatch-benchmark`core::ops::function::FnMut::call_mut&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),tuple$&lt;ref$ (59 samples, 0.64%)</title><rect x="73.5980%" y="485" width="0.6400%" height="15" fill="rgb(225,176,49)" fg:x="6785" fg:w="59"/><text x="73.8480%" y="495.50"></text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::with_opt_trailing_ws::closure$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (5 samples, 0.05%)</title><rect x="74.1838%" y="469" width="0.0542%" height="15" fill="rgb(224,221,49)" fg:x="6839" fg:w="5"/><text x="74.4338%" y="479.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (5 samples, 0.05%)</title><rect x="74.1838%" y="453" width="0.0542%" height="15" fill="rgb(253,169,27)" fg:x="6839" fg:w="5"/><text x="74.4338%" y="463.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (5 samples, 0.05%)</title><rect x="74.1838%" y="437" width="0.0542%" height="15" fill="rgb(211,206,16)" fg:x="6839" fg:w="5"/><text x="74.4338%" y="447.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,char&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (5 samples, 0.05%)</title><rect x="74.1838%" y="421" width="0.0542%" height="15" fill="rgb(244,87,35)" fg:x="6839" fg:w="5"/><text x="74.4338%" y="431.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$32::find_token (2 samples, 0.02%)</title><rect x="74.2163%" y="405" width="0.0217%" height="15" fill="rgb(246,28,10)" fg:x="6842" fg:w="2"/><text x="74.4663%" y="415.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;alloc::vec::Vec&lt;enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,alloc::alloc::Global&gt;,char&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::cut::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;alloc::vec::Vec&lt;enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,alloc::alloc::Global&gt;,char&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::multi::many_till::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedExpression)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context (69 samples, 0.75%)</title><rect x="73.5112%" y="533" width="0.7485%" height="15" fill="rgb(229,12,44)" fg:x="6777" fg:w="69"/><text x="73.7612%" y="543.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$2::choice&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedExpression)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedConditionalBlock,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedConditionalBlock&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedConditionalBlock)&gt;,enum2$ (69 samples, 0.75%)</title><rect x="73.5112%" y="517" width="0.7485%" height="15" fill="rgb(210,145,37)" fg:x="6777" fg:w="69"/><text x="73.7612%" y="527.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedExpression)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$ (66 samples, 0.72%)</title><rect x="73.5438%" y="501" width="0.7159%" height="15" fill="rgb(227,112,52)" fg:x="6780" fg:w="66"/><text x="73.7938%" y="511.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (2 samples, 0.02%)</title><rect x="74.2380%" y="485" width="0.0217%" height="15" fill="rgb(238,155,34)" fg:x="6844" fg:w="2"/><text x="74.4880%" y="495.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (95 samples, 1.03%)</title><rect x="73.2726%" y="549" width="1.0305%" height="15" fill="rgb(239,226,36)" fg:x="6755" fg:w="95"/><text x="73.5226%" y="559.50"></text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::with_opt_trailing_ws::closure$0&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,char,nom::error::Error&lt;ref$ (4 samples, 0.04%)</title><rect x="74.2597%" y="533" width="0.0434%" height="15" fill="rgb(230,16,23)" fg:x="6846" fg:w="4"/><text x="74.5097%" y="543.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (3 samples, 0.03%)</title><rect x="74.2705%" y="517" width="0.0325%" height="15" fill="rgb(236,171,36)" fg:x="6847" fg:w="3"/><text x="74.5205%" y="527.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="74.2922%" y="501" width="0.0108%" height="15" fill="rgb(221,22,14)" fg:x="6849" fg:w="1"/><text x="74.5422%" y="511.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$5::choice&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(stelpatch::cw_parser::parser::ParsedEntity)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(ref$&lt;str$&gt;)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),stelpatch::cw_parser::parser::script_value::closure_env$0&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result (127 samples, 1.38%)</title><rect x="72.9580%" y="565" width="1.3776%" height="15" fill="rgb(242,43,11)" fg:x="6726" fg:w="127"/><text x="73.2080%" y="575.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (3 samples, 0.03%)</title><rect x="74.3031%" y="549" width="0.0325%" height="15" fill="rgb(232,69,23)" fg:x="6850" fg:w="3"/><text x="74.5531%" y="559.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (2 samples, 0.02%)</title><rect x="74.3139%" y="533" width="0.0217%" height="15" fill="rgb(216,180,54)" fg:x="6851" fg:w="2"/><text x="74.5639%" y="543.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (4 samples, 0.04%)</title><rect x="74.3465%" y="549" width="0.0434%" height="15" fill="rgb(216,5,24)" fg:x="6854" fg:w="4"/><text x="74.5965%" y="559.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="74.3790%" y="533" width="0.0108%" height="15" fill="rgb(225,89,9)" fg:x="6857" fg:w="1"/><text x="74.6290%" y="543.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (7 samples, 0.08%)</title><rect x="74.3356%" y="565" width="0.0759%" height="15" fill="rgb(243,75,33)" fg:x="6853" fg:w="7"/><text x="74.5856%" y="575.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$8::choice&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (2 samples, 0.02%)</title><rect x="74.3898%" y="549" width="0.0217%" height="15" fill="rgb(247,141,45)" fg:x="6858" fg:w="2"/><text x="74.6398%" y="559.50"></text></g><g><title>stelpatch-benchmark`stelpatch::cw_model::impl$12::from_str (1 samples, 0.01%)</title><rect x="74.4115%" y="565" width="0.0108%" height="15" fill="rgb(232,177,36)" fg:x="6860" fg:w="1"/><text x="74.6615%" y="575.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$2::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::one_of::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (5 samples, 0.05%)</title><rect x="74.4875%" y="517" width="0.0542%" height="15" fill="rgb(219,125,36)" fg:x="6867" fg:w="5"/><text x="74.7375%" y="527.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (4 samples, 0.04%)</title><rect x="74.4983%" y="501" width="0.0434%" height="15" fill="rgb(227,94,9)" fg:x="6868" fg:w="4"/><text x="74.7483%" y="511.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (35 samples, 0.38%)</title><rect x="74.4441%" y="549" width="0.3797%" height="15" fill="rgb(240,34,52)" fg:x="6863" fg:w="35"/><text x="74.6941%" y="559.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (33 samples, 0.36%)</title><rect x="74.4658%" y="533" width="0.3580%" height="15" fill="rgb(216,45,12)" fg:x="6865" fg:w="33"/><text x="74.7158%" y="543.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,char&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (26 samples, 0.28%)</title><rect x="74.5417%" y="517" width="0.2820%" height="15" fill="rgb(246,21,19)" fg:x="6872" fg:w="26"/><text x="74.7917%" y="527.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$32::find_token (22 samples, 0.24%)</title><rect x="74.5851%" y="501" width="0.2386%" height="15" fill="rgb(213,98,42)" fg:x="6876" fg:w="22"/><text x="74.8351%" y="511.50"></text></g><g><title>stelpatch-benchmark`core::ops::function::FnMut::call_mut&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),tuple$&lt;ref$ (178 samples, 1.93%)</title><rect x="72.9363%" y="581" width="1.9308%" height="15" fill="rgb(250,136,47)" fg:x="6724" fg:w="178"/><text x="73.1863%" y="591.50">s..</text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::with_opt_trailing_ws::closure$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (41 samples, 0.44%)</title><rect x="74.4224%" y="565" width="0.4447%" height="15" fill="rgb(251,124,27)" fg:x="6861" fg:w="41"/><text x="74.6724%" y="575.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (4 samples, 0.04%)</title><rect x="74.8237%" y="549" width="0.0434%" height="15" fill="rgb(229,180,14)" fg:x="6898" fg:w="4"/><text x="75.0737%" y="559.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (3 samples, 0.03%)</title><rect x="74.8346%" y="533" width="0.0325%" height="15" fill="rgb(245,216,25)" fg:x="6899" fg:w="3"/><text x="75.0846%" y="543.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;alloc::vec::Vec&lt;enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,alloc::alloc::Global&gt;,char&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::cut::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;alloc::vec::Vec&lt;enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,alloc::alloc::Global&gt;,char&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::multi::many_till::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedExpression)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context (204 samples, 2.21%)</title><rect x="72.6977%" y="629" width="2.2128%" height="15" fill="rgb(251,43,5)" fg:x="6702" fg:w="204"/><text x="72.9477%" y="639.50">s..</text></g><g><title>stelpatch-benchmark`nom::branch::impl$2::choice&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedExpression)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedConditionalBlock,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedConditionalBlock&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedConditionalBlock)&gt;,enum2$ (198 samples, 2.15%)</title><rect x="72.7628%" y="613" width="2.1477%" height="15" fill="rgb(250,128,24)" fg:x="6708" fg:w="198"/><text x="73.0128%" y="623.50">s..</text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedExpression)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$ (192 samples, 2.08%)</title><rect x="72.8279%" y="597" width="2.0827%" height="15" fill="rgb(217,117,27)" fg:x="6714" fg:w="192"/><text x="73.0779%" y="607.50">s..</text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (4 samples, 0.04%)</title><rect x="74.8671%" y="581" width="0.0434%" height="15" fill="rgb(245,147,4)" fg:x="6902" fg:w="4"/><text x="75.1171%" y="591.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (3 samples, 0.03%)</title><rect x="74.8780%" y="565" width="0.0325%" height="15" fill="rgb(242,201,35)" fg:x="6903" fg:w="3"/><text x="75.1280%" y="575.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (2 samples, 0.02%)</title><rect x="74.9105%" y="613" width="0.0217%" height="15" fill="rgb(218,181,1)" fg:x="6906" fg:w="2"/><text x="75.1605%" y="623.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (2 samples, 0.02%)</title><rect x="74.9105%" y="597" width="0.0217%" height="15" fill="rgb(222,6,29)" fg:x="6906" fg:w="2"/><text x="75.1605%" y="607.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (224 samples, 2.43%)</title><rect x="72.5133%" y="645" width="2.4298%" height="15" fill="rgb(208,186,3)" fg:x="6685" fg:w="224"/><text x="72.7633%" y="655.50">st..</text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::with_opt_trailing_ws::closure$0&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,char,nom::error::Error&lt;ref$ (3 samples, 0.03%)</title><rect x="74.9105%" y="629" width="0.0325%" height="15" fill="rgb(216,36,26)" fg:x="6906" fg:w="3"/><text x="75.1605%" y="639.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$130::slice (1 samples, 0.01%)</title><rect x="74.9322%" y="613" width="0.0108%" height="15" fill="rgb(248,201,23)" fg:x="6908" fg:w="1"/><text x="75.1822%" y="623.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$5::choice&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(stelpatch::cw_parser::parser::ParsedEntity)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(ref$&lt;str$&gt;)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),stelpatch::cw_parser::parser::script_value::closure_env$0&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result (303 samples, 3.29%)</title><rect x="71.6781%" y="661" width="3.2867%" height="15" fill="rgb(251,170,31)" fg:x="6608" fg:w="303"/><text x="71.9281%" y="671.50">ste..</text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (2 samples, 0.02%)</title><rect x="74.9431%" y="645" width="0.0217%" height="15" fill="rgb(207,110,25)" fg:x="6909" fg:w="2"/><text x="75.1931%" y="655.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="74.9539%" y="629" width="0.0108%" height="15" fill="rgb(250,54,15)" fg:x="6910" fg:w="1"/><text x="75.2039%" y="639.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (6 samples, 0.07%)</title><rect x="74.9647%" y="661" width="0.0651%" height="15" fill="rgb(227,68,33)" fg:x="6911" fg:w="6"/><text x="75.2147%" y="671.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (2 samples, 0.02%)</title><rect x="75.0081%" y="645" width="0.0217%" height="15" fill="rgb(238,34,41)" fg:x="6915" fg:w="2"/><text x="75.2581%" y="655.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="75.0190%" y="629" width="0.0108%" height="15" fill="rgb(220,11,15)" fg:x="6916" fg:w="1"/><text x="75.2690%" y="639.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (2 samples, 0.02%)</title><rect x="75.1383%" y="581" width="0.0217%" height="15" fill="rgb(246,111,35)" fg:x="6927" fg:w="2"/><text x="75.3883%" y="591.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$2::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::one_of::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (11 samples, 0.12%)</title><rect x="75.0841%" y="613" width="0.1193%" height="15" fill="rgb(209,88,53)" fg:x="6922" fg:w="11"/><text x="75.3341%" y="623.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (10 samples, 0.11%)</title><rect x="75.0949%" y="597" width="0.1085%" height="15" fill="rgb(231,185,47)" fg:x="6923" fg:w="10"/><text x="75.3449%" y="607.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (4 samples, 0.04%)</title><rect x="75.1600%" y="581" width="0.0434%" height="15" fill="rgb(233,154,1)" fg:x="6929" fg:w="4"/><text x="75.4100%" y="591.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$130::slice (7 samples, 0.08%)</title><rect x="75.3661%" y="597" width="0.0759%" height="15" fill="rgb(225,15,46)" fg:x="6948" fg:w="7"/><text x="75.6161%" y="607.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (76 samples, 0.82%)</title><rect x="75.0407%" y="645" width="0.8244%" height="15" fill="rgb(211,135,41)" fg:x="6918" fg:w="76"/><text x="75.2907%" y="655.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (74 samples, 0.80%)</title><rect x="75.0624%" y="629" width="0.8027%" height="15" fill="rgb(208,54,0)" fg:x="6920" fg:w="74"/><text x="75.3124%" y="639.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,char&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (61 samples, 0.66%)</title><rect x="75.2034%" y="613" width="0.6617%" height="15" fill="rgb(244,136,14)" fg:x="6933" fg:w="61"/><text x="75.4534%" y="623.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$32::find_token (39 samples, 0.42%)</title><rect x="75.4420%" y="597" width="0.4230%" height="15" fill="rgb(241,56,14)" fg:x="6955" fg:w="39"/><text x="75.6920%" y="607.50"></text></g><g><title>stelpatch-benchmark`core::ops::function::FnMut::call_mut&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),tuple$&lt;ref$ (396 samples, 4.30%)</title><rect x="71.6455%" y="677" width="4.2955%" height="15" fill="rgb(205,80,24)" fg:x="6605" fg:w="396"/><text x="71.8955%" y="687.50">stelp..</text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::with_opt_trailing_ws::closure$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (84 samples, 0.91%)</title><rect x="75.0298%" y="661" width="0.9112%" height="15" fill="rgb(220,57,4)" fg:x="6917" fg:w="84"/><text x="75.2798%" y="671.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (7 samples, 0.08%)</title><rect x="75.8651%" y="645" width="0.0759%" height="15" fill="rgb(226,193,50)" fg:x="6994" fg:w="7"/><text x="76.1151%" y="655.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (2 samples, 0.02%)</title><rect x="75.9193%" y="629" width="0.0217%" height="15" fill="rgb(231,168,22)" fg:x="6999" fg:w="2"/><text x="76.1693%" y="639.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="76.0278%" y="661" width="0.0108%" height="15" fill="rgb(254,215,14)" fg:x="7009" fg:w="1"/><text x="76.2778%" y="671.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::bytes::complete::is_not::closure$0::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="76.0278%" y="645" width="0.0108%" height="15" fill="rgb(211,115,16)" fg:x="7009" fg:w="1"/><text x="76.2778%" y="655.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$32::find_token (1 samples, 0.01%)</title><rect x="76.0278%" y="629" width="0.0108%" height="15" fill="rgb(236,210,16)" fg:x="7009" fg:w="1"/><text x="76.2778%" y="639.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;alloc::vec::Vec&lt;enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,alloc::alloc::Global&gt;,char&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::cut::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;alloc::vec::Vec&lt;enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,alloc::alloc::Global&gt;,char&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::multi::many_till::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedExpression)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context (442 samples, 4.79%)</title><rect x="71.2876%" y="725" width="4.7944%" height="15" fill="rgb(221,94,12)" fg:x="6572" fg:w="442"/><text x="71.5376%" y="735.50">stelpa..</text></g><g><title>stelpatch-benchmark`nom::branch::impl$2::choice&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedExpression)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedConditionalBlock,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedConditionalBlock&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedConditionalBlock)&gt;,enum2$ (426 samples, 4.62%)</title><rect x="71.4611%" y="709" width="4.6209%" height="15" fill="rgb(235,218,49)" fg:x="6588" fg:w="426"/><text x="71.7111%" y="719.50">stelp..</text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedExpression)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$ (417 samples, 4.52%)</title><rect x="71.5587%" y="693" width="4.5233%" height="15" fill="rgb(217,114,14)" fg:x="6597" fg:w="417"/><text x="71.8087%" y="703.50">stelp..</text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (13 samples, 0.14%)</title><rect x="75.9410%" y="677" width="0.1410%" height="15" fill="rgb(216,145,22)" fg:x="7001" fg:w="13"/><text x="76.1910%" y="687.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (4 samples, 0.04%)</title><rect x="76.0386%" y="661" width="0.0434%" height="15" fill="rgb(217,112,39)" fg:x="7010" fg:w="4"/><text x="76.2886%" y="671.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (518 samples, 5.62%)</title><rect x="70.5174%" y="741" width="5.6188%" height="15" fill="rgb(225,85,32)" fg:x="6501" fg:w="518"/><text x="70.7674%" y="751.50">stelpat..</text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::with_opt_trailing_ws::closure$0&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,char,nom::error::Error&lt;ref$ (5 samples, 0.05%)</title><rect x="76.0820%" y="725" width="0.0542%" height="15" fill="rgb(245,209,47)" fg:x="7014" fg:w="5"/><text x="76.3320%" y="735.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (4 samples, 0.04%)</title><rect x="76.0929%" y="709" width="0.0434%" height="15" fill="rgb(218,220,15)" fg:x="7015" fg:w="4"/><text x="76.3429%" y="719.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="76.1254%" y="693" width="0.0108%" height="15" fill="rgb(222,202,31)" fg:x="7018" fg:w="1"/><text x="76.3754%" y="703.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$5::choice&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(stelpatch::cw_parser::parser::ParsedEntity)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(ref$&lt;str$&gt;)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),stelpatch::cw_parser::parser::script_value::closure_env$0&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result (650 samples, 7.05%)</title><rect x="69.1073%" y="757" width="7.0507%" height="15" fill="rgb(243,203,4)" fg:x="6371" fg:w="650"/><text x="69.3573%" y="767.50">stelpatch..</text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (2 samples, 0.02%)</title><rect x="76.1362%" y="741" width="0.0217%" height="15" fill="rgb(237,92,17)" fg:x="7019" fg:w="2"/><text x="76.3862%" y="751.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (2 samples, 0.02%)</title><rect x="76.2881%" y="725" width="0.0217%" height="15" fill="rgb(231,119,7)" fg:x="7033" fg:w="2"/><text x="76.5381%" y="735.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (13 samples, 0.14%)</title><rect x="76.2339%" y="741" width="0.1410%" height="15" fill="rgb(237,82,41)" fg:x="7028" fg:w="13"/><text x="76.4839%" y="751.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (6 samples, 0.07%)</title><rect x="76.3098%" y="725" width="0.0651%" height="15" fill="rgb(226,81,48)" fg:x="7035" fg:w="6"/><text x="76.5598%" y="735.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (25 samples, 0.27%)</title><rect x="76.1579%" y="757" width="0.2712%" height="15" fill="rgb(234,70,51)" fg:x="7021" fg:w="25"/><text x="76.4079%" y="767.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$8::choice&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (5 samples, 0.05%)</title><rect x="76.3749%" y="741" width="0.0542%" height="15" fill="rgb(251,86,4)" fg:x="7041" fg:w="5"/><text x="76.6249%" y="751.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (2 samples, 0.02%)</title><rect x="76.4074%" y="725" width="0.0217%" height="15" fill="rgb(244,144,28)" fg:x="7044" fg:w="2"/><text x="76.6574%" y="735.50"></text></g><g><title>stelpatch-benchmark`stelpatch::cw_model::impl$12::from_str (3 samples, 0.03%)</title><rect x="76.4291%" y="757" width="0.0325%" height="15" fill="rgb(232,161,39)" fg:x="7046" fg:w="3"/><text x="76.6791%" y="767.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (3 samples, 0.03%)</title><rect x="76.7328%" y="677" width="0.0325%" height="15" fill="rgb(247,34,51)" fg:x="7074" fg:w="3"/><text x="76.9828%" y="687.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$2::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::one_of::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (12 samples, 0.13%)</title><rect x="76.6569%" y="709" width="0.1302%" height="15" fill="rgb(225,132,2)" fg:x="7067" fg:w="12"/><text x="76.9069%" y="719.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (10 samples, 0.11%)</title><rect x="76.6786%" y="693" width="0.1085%" height="15" fill="rgb(209,159,44)" fg:x="7069" fg:w="10"/><text x="76.9286%" y="703.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (2 samples, 0.02%)</title><rect x="76.7654%" y="677" width="0.0217%" height="15" fill="rgb(251,214,1)" fg:x="7077" fg:w="2"/><text x="77.0154%" y="687.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$130::slice (16 samples, 0.17%)</title><rect x="77.1884%" y="693" width="0.1736%" height="15" fill="rgb(247,84,47)" fg:x="7116" fg:w="16"/><text x="77.4384%" y="703.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (252 samples, 2.73%)</title><rect x="76.5050%" y="741" width="2.7335%" height="15" fill="rgb(240,111,43)" fg:x="7053" fg:w="252"/><text x="76.7550%" y="751.50">st..</text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (245 samples, 2.66%)</title><rect x="76.5810%" y="725" width="2.6576%" height="15" fill="rgb(215,214,35)" fg:x="7060" fg:w="245"/><text x="76.8310%" y="735.50">st..</text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,char&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (226 samples, 2.45%)</title><rect x="76.7871%" y="709" width="2.4515%" height="15" fill="rgb(248,207,23)" fg:x="7079" fg:w="226"/><text x="77.0371%" y="719.50">st..</text></g><g><title>stelpatch-benchmark`nom::traits::impl$32::find_token (173 samples, 1.88%)</title><rect x="77.3620%" y="693" width="1.8766%" height="15" fill="rgb(214,186,4)" fg:x="7132" fg:w="173"/><text x="77.6120%" y="703.50">s..</text></g><g><title>stelpatch-benchmark`core::ops::function::FnMut::call_mut&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),tuple$&lt;ref$ (957 samples, 10.38%)</title><rect x="68.9880%" y="773" width="10.3807%" height="15" fill="rgb(220,133,22)" fg:x="6360" fg:w="957"/><text x="69.2380%" y="783.50">stelpatch-bench..</text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::with_opt_trailing_ws::closure$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (268 samples, 2.91%)</title><rect x="76.4617%" y="757" width="2.9070%" height="15" fill="rgb(239,134,19)" fg:x="7049" fg:w="268"/><text x="76.7117%" y="767.50">st..</text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (12 samples, 0.13%)</title><rect x="79.2385%" y="741" width="0.1302%" height="15" fill="rgb(250,140,9)" fg:x="7305" fg:w="12"/><text x="79.4885%" y="751.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="79.3578%" y="725" width="0.0108%" height="15" fill="rgb(225,59,14)" fg:x="7316" fg:w="1"/><text x="79.6078%" y="735.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (3 samples, 0.03%)</title><rect x="79.4663%" y="757" width="0.0325%" height="15" fill="rgb(214,152,51)" fg:x="7326" fg:w="3"/><text x="79.7163%" y="767.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::bytes::complete::is_not::closure$0::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="79.4880%" y="741" width="0.0108%" height="15" fill="rgb(251,227,43)" fg:x="7328" fg:w="1"/><text x="79.7380%" y="751.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$32::find_token (1 samples, 0.01%)</title><rect x="79.4880%" y="725" width="0.0108%" height="15" fill="rgb(241,96,17)" fg:x="7328" fg:w="1"/><text x="79.7380%" y="735.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$2::choice&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedExpression)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedConditionalBlock,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedConditionalBlock&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedConditionalBlock)&gt;,enum2$ (1,161 samples, 12.59%)</title><rect x="67.0029%" y="805" width="12.5936%" height="15" fill="rgb(234,198,43)" fg:x="6177" fg:w="1161"/><text x="67.2529%" y="815.50">stelpatch-benchmark..</text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedExpression)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$ (1,005 samples, 10.90%)</title><rect x="68.6951%" y="789" width="10.9014%" height="15" fill="rgb(220,108,29)" fg:x="6333" fg:w="1005"/><text x="68.9451%" y="799.50">stelpatch-benchm..</text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (21 samples, 0.23%)</title><rect x="79.3687%" y="773" width="0.2278%" height="15" fill="rgb(226,163,33)" fg:x="7317" fg:w="21"/><text x="79.6187%" y="783.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (9 samples, 0.10%)</title><rect x="79.4989%" y="757" width="0.0976%" height="15" fill="rgb(205,194,45)" fg:x="7329" fg:w="9"/><text x="79.7489%" y="767.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;alloc::vec::Vec&lt;enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,alloc::alloc::Global&gt;,char&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::cut::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;alloc::vec::Vec&lt;enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,alloc::alloc::Global&gt;,char&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::multi::many_till::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedExpression)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context (1,208 samples, 13.10%)</title><rect x="66.5040%" y="821" width="13.1034%" height="15" fill="rgb(206,143,44)" fg:x="6131" fg:w="1208"/><text x="66.7540%" y="831.50">stelpatch-benchmark`..</text></g><g><title>stelpatch-benchmark`nom::traits::impl$130::slice (1 samples, 0.01%)</title><rect x="79.5965%" y="805" width="0.0108%" height="15" fill="rgb(236,136,36)" fg:x="7338" fg:w="1"/><text x="79.8465%" y="815.50"></text></g><g><title>stelpatch-benchmark`std::alloc::__default_lib_allocator::__rdl_dealloc (1 samples, 0.01%)</title><rect x="79.6073%" y="821" width="0.0108%" height="15" fill="rgb(249,172,42)" fg:x="7339" fg:w="1"/><text x="79.8573%" y="831.50"></text></g><g><title>stelpatch-benchmark`std::collections::hash::map::impl$82::new::KEYS::__getit::__KEY (2 samples, 0.02%)</title><rect x="79.6182%" y="821" width="0.0217%" height="15" fill="rgb(216,139,23)" fg:x="7340" fg:w="2"/><text x="79.8682%" y="831.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (12 samples, 0.13%)</title><rect x="79.6616%" y="805" width="0.1302%" height="15" fill="rgb(207,166,20)" fg:x="7344" fg:w="12"/><text x="79.9116%" y="815.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (3 samples, 0.03%)</title><rect x="79.7592%" y="789" width="0.0325%" height="15" fill="rgb(210,209,22)" fg:x="7353" fg:w="3"/><text x="80.0092%" y="799.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (1,395 samples, 15.13%)</title><rect x="64.6816%" y="837" width="15.1318%" height="15" fill="rgb(232,118,20)" fg:x="5963" fg:w="1395"/><text x="64.9316%" y="847.50">stelpatch-benchmark`nom..</text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::with_opt_trailing_ws::closure$0&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,char,nom::error::Error&lt;ref$ (16 samples, 0.17%)</title><rect x="79.6399%" y="821" width="0.1736%" height="15" fill="rgb(238,113,42)" fg:x="7342" fg:w="16"/><text x="79.8899%" y="831.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$130::slice (2 samples, 0.02%)</title><rect x="79.7917%" y="805" width="0.0217%" height="15" fill="rgb(231,42,5)" fg:x="7356" fg:w="2"/><text x="80.0417%" y="815.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$5::choice&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(stelpatch::cw_parser::parser::ParsedEntity)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(ref$&lt;str$&gt;)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),stelpatch::cw_parser::parser::script_value::closure_env$0&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result (1,589 samples, 17.24%)</title><rect x="62.6749%" y="853" width="17.2361%" height="15" fill="rgb(243,166,24)" fg:x="5778" fg:w="1589"/><text x="62.9249%" y="863.50">stelpatch-benchmark`nom::br..</text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (9 samples, 0.10%)</title><rect x="79.8134%" y="837" width="0.0976%" height="15" fill="rgb(237,226,12)" fg:x="7358" fg:w="9"/><text x="80.0634%" y="847.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (2 samples, 0.02%)</title><rect x="80.1931%" y="821" width="0.0217%" height="15" fill="rgb(229,133,24)" fg:x="7393" fg:w="2"/><text x="80.4431%" y="831.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (20 samples, 0.22%)</title><rect x="80.0412%" y="837" width="0.2169%" height="15" fill="rgb(238,33,43)" fg:x="7379" fg:w="20"/><text x="80.2912%" y="847.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (4 samples, 0.04%)</title><rect x="80.2148%" y="821" width="0.0434%" height="15" fill="rgb(227,59,38)" fg:x="7395" fg:w="4"/><text x="80.4648%" y="831.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (48 samples, 0.52%)</title><rect x="79.9111%" y="853" width="0.5207%" height="15" fill="rgb(230,97,0)" fg:x="7367" fg:w="48"/><text x="80.1611%" y="863.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$8::choice&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (16 samples, 0.17%)</title><rect x="80.2582%" y="837" width="0.1736%" height="15" fill="rgb(250,173,50)" fg:x="7399" fg:w="16"/><text x="80.5082%" y="847.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (4 samples, 0.04%)</title><rect x="80.3883%" y="821" width="0.0434%" height="15" fill="rgb(240,15,50)" fg:x="7411" fg:w="4"/><text x="80.6383%" y="831.50"></text></g><g><title>stelpatch-benchmark`stelpatch::cw_model::impl$12::from_str (2 samples, 0.02%)</title><rect x="80.4317%" y="853" width="0.0217%" height="15" fill="rgb(221,93,22)" fg:x="7415" fg:w="2"/><text x="80.6817%" y="863.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (2 samples, 0.02%)</title><rect x="81.1042%" y="773" width="0.0217%" height="15" fill="rgb(245,180,53)" fg:x="7477" fg:w="2"/><text x="81.3542%" y="783.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (30 samples, 0.33%)</title><rect x="80.9415%" y="789" width="0.3254%" height="15" fill="rgb(231,88,51)" fg:x="7462" fg:w="30"/><text x="81.1915%" y="799.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (13 samples, 0.14%)</title><rect x="81.1259%" y="773" width="0.1410%" height="15" fill="rgb(240,58,21)" fg:x="7479" fg:w="13"/><text x="81.3759%" y="783.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$2::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::one_of::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (37 samples, 0.40%)</title><rect x="80.8765%" y="805" width="0.4013%" height="15" fill="rgb(237,21,10)" fg:x="7456" fg:w="37"/><text x="81.1265%" y="815.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::one_of::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="81.2669%" y="789" width="0.0108%" height="15" fill="rgb(218,43,11)" fg:x="7492" fg:w="1"/><text x="81.5169%" y="799.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$32::find_token (1 samples, 0.01%)</title><rect x="81.2669%" y="773" width="0.0108%" height="15" fill="rgb(218,221,29)" fg:x="7492" fg:w="1"/><text x="81.5169%" y="783.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$130::slice (34 samples, 0.37%)</title><rect x="81.9612%" y="789" width="0.3688%" height="15" fill="rgb(214,118,42)" fg:x="7556" fg:w="34"/><text x="82.2112%" y="799.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,char&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (340 samples, 3.69%)</title><rect x="81.2778%" y="805" width="3.6880%" height="15" fill="rgb(251,200,26)" fg:x="7493" fg:w="340"/><text x="81.5278%" y="815.50">stel..</text></g><g><title>stelpatch-benchmark`nom::traits::impl$32::find_token (243 samples, 2.64%)</title><rect x="82.3300%" y="789" width="2.6359%" height="15" fill="rgb(237,101,39)" fg:x="7590" fg:w="243"/><text x="82.5800%" y="799.50">st..</text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (407 samples, 4.41%)</title><rect x="80.5619%" y="837" width="4.4148%" height="15" fill="rgb(251,117,11)" fg:x="7427" fg:w="407"/><text x="80.8119%" y="847.50">stelp..</text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (394 samples, 4.27%)</title><rect x="80.7029%" y="821" width="4.2738%" height="15" fill="rgb(216,223,23)" fg:x="7440" fg:w="394"/><text x="80.9529%" y="831.50">stelp..</text></g><g><title>stelpatch-benchmark`nom::traits::impl$129::slice (1 samples, 0.01%)</title><rect x="84.9658%" y="805" width="0.0108%" height="15" fill="rgb(251,54,12)" fg:x="7833" fg:w="1"/><text x="85.2158%" y="815.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="85.1719%" y="821" width="0.0108%" height="15" fill="rgb(254,176,54)" fg:x="7852" fg:w="1"/><text x="85.4219%" y="831.50"></text></g><g><title>stelpatch-benchmark`core::ops::function::FnMut::call_mut&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),tuple$&lt;ref$ (2,098 samples, 22.76%)</title><rect x="62.4905%" y="869" width="22.7573%" height="15" fill="rgb(210,32,8)" fg:x="5761" fg:w="2098"/><text x="62.7405%" y="879.50">stelpatch-benchmark`core::ops::funct..</text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::with_opt_trailing_ws::closure$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (442 samples, 4.79%)</title><rect x="80.4534%" y="853" width="4.7944%" height="15" fill="rgb(235,52,38)" fg:x="7417" fg:w="442"/><text x="80.7034%" y="863.50">stelpa..</text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (25 samples, 0.27%)</title><rect x="84.9767%" y="837" width="0.2712%" height="15" fill="rgb(231,4,44)" fg:x="7834" fg:w="25"/><text x="85.2267%" y="847.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (6 samples, 0.07%)</title><rect x="85.1828%" y="821" width="0.0651%" height="15" fill="rgb(249,2,32)" fg:x="7853" fg:w="6"/><text x="85.4328%" y="831.50"></text></g><g><title>stelpatch-benchmark`memcpy (1 samples, 0.01%)</title><rect x="85.2479%" y="869" width="0.0108%" height="15" fill="rgb(224,65,26)" fg:x="7859" fg:w="1"/><text x="85.4979%" y="879.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;alloc::vec::Vec&lt;enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,alloc::alloc::Global&gt;,char&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::cut::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;alloc::vec::Vec&lt;enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,alloc::alloc::Global&gt;,char&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::multi::many_till::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedExpression)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context (2,387 samples, 25.89%)</title><rect x="59.6160%" y="917" width="25.8922%" height="15" fill="rgb(250,73,40)" fg:x="5496" fg:w="2387"/><text x="59.8660%" y="927.50">stelpatch-benchmark`nom::internal::impl$1..</text></g><g><title>stelpatch-benchmark`nom::branch::impl$2::choice&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedExpression)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedConditionalBlock,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedConditionalBlock&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedConditionalBlock)&gt;,enum2$ (2,331 samples, 25.28%)</title><rect x="60.2235%" y="901" width="25.2847%" height="15" fill="rgb(253,177,16)" fg:x="5552" fg:w="2331"/><text x="60.4735%" y="911.50">stelpatch-benchmark`nom::branch::impl$2:..</text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedExpression)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$ (2,164 samples, 23.47%)</title><rect x="62.0349%" y="885" width="23.4733%" height="15" fill="rgb(217,32,34)" fg:x="5719" fg:w="2164"/><text x="62.2849%" y="895.50">stelpatch-benchmark`nom::internal::im..</text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (23 samples, 0.25%)</title><rect x="85.2587%" y="869" width="0.2495%" height="15" fill="rgb(212,7,10)" fg:x="7860" fg:w="23"/><text x="85.5087%" y="879.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (10 samples, 0.11%)</title><rect x="85.3997%" y="853" width="0.1085%" height="15" fill="rgb(245,89,8)" fg:x="7873" fg:w="10"/><text x="85.6497%" y="863.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (3 samples, 0.03%)</title><rect x="85.6600%" y="885" width="0.0325%" height="15" fill="rgb(237,16,53)" fg:x="7897" fg:w="3"/><text x="85.9100%" y="895.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::bytes::complete::is_not::closure$0::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (2 samples, 0.02%)</title><rect x="85.6709%" y="869" width="0.0217%" height="15" fill="rgb(250,204,30)" fg:x="7898" fg:w="2"/><text x="85.9209%" y="879.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (16 samples, 0.17%)</title><rect x="85.5841%" y="901" width="0.1736%" height="15" fill="rgb(208,77,27)" fg:x="7890" fg:w="16"/><text x="85.8341%" y="911.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (6 samples, 0.07%)</title><rect x="85.6926%" y="885" width="0.0651%" height="15" fill="rgb(250,204,28)" fg:x="7900" fg:w="6"/><text x="85.9426%" y="895.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (2,672 samples, 28.98%)</title><rect x="56.7957%" y="933" width="28.9836%" height="15" fill="rgb(244,63,21)" fg:x="5236" fg:w="2672"/><text x="57.0457%" y="943.50">stelpatch-benchmark`nom::internal::impl$12::par..</text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::with_opt_trailing_ws::closure$0&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,char,nom::error::Error&lt;ref$ (25 samples, 0.27%)</title><rect x="85.5082%" y="917" width="0.2712%" height="15" fill="rgb(236,85,44)" fg:x="7883" fg:w="25"/><text x="85.7582%" y="927.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$130::slice (2 samples, 0.02%)</title><rect x="85.7577%" y="901" width="0.0217%" height="15" fill="rgb(215,98,4)" fg:x="7906" fg:w="2"/><text x="86.0077%" y="911.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (2 samples, 0.02%)</title><rect x="85.8553%" y="917" width="0.0217%" height="15" fill="rgb(235,38,11)" fg:x="7915" fg:w="2"/><text x="86.1053%" y="927.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$5::choice&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(stelpatch::cw_parser::parser::ParsedEntity)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(ref$&lt;str$&gt;)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),stelpatch::cw_parser::parser::script_value::closure_env$0&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result (2,834 samples, 30.74%)</title><rect x="55.1470%" y="949" width="30.7409%" height="15" fill="rgb(254,186,25)" fg:x="5084" fg:w="2834"/><text x="55.3970%" y="959.50">stelpatch-benchmark`nom::branch::impl$5::choice&lt;re..</text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (10 samples, 0.11%)</title><rect x="85.7794%" y="933" width="0.1085%" height="15" fill="rgb(225,55,31)" fg:x="7908" fg:w="10"/><text x="86.0294%" y="943.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (1 samples, 0.01%)</title><rect x="85.8770%" y="917" width="0.0108%" height="15" fill="rgb(211,15,21)" fg:x="7917" fg:w="1"/><text x="86.1270%" y="927.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="85.8770%" y="901" width="0.0108%" height="15" fill="rgb(215,187,41)" fg:x="7917" fg:w="1"/><text x="86.1270%" y="911.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (6 samples, 0.07%)</title><rect x="86.1916%" y="917" width="0.0651%" height="15" fill="rgb(248,69,32)" fg:x="7946" fg:w="6"/><text x="86.4416%" y="927.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (25 samples, 0.27%)</title><rect x="86.0831%" y="933" width="0.2712%" height="15" fill="rgb(252,102,52)" fg:x="7936" fg:w="25"/><text x="86.3331%" y="943.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (9 samples, 0.10%)</title><rect x="86.2566%" y="917" width="0.0976%" height="15" fill="rgb(253,140,32)" fg:x="7952" fg:w="9"/><text x="86.5066%" y="927.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (52 samples, 0.56%)</title><rect x="85.8878%" y="949" width="0.5641%" height="15" fill="rgb(216,56,42)" fg:x="7918" fg:w="52"/><text x="86.1378%" y="959.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$8::choice&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (9 samples, 0.10%)</title><rect x="86.3543%" y="933" width="0.0976%" height="15" fill="rgb(216,184,14)" fg:x="7961" fg:w="9"/><text x="86.6043%" y="943.50"></text></g><g><title>stelpatch-benchmark`stelpatch::cw_model::impl$12::from_str (4 samples, 0.04%)</title><rect x="86.4519%" y="949" width="0.0434%" height="15" fill="rgb(237,187,27)" fg:x="7970" fg:w="4"/><text x="86.7019%" y="959.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="87.0051%" y="869" width="0.0108%" height="15" fill="rgb(219,65,3)" fg:x="8021" fg:w="1"/><text x="87.2551%" y="879.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$2::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::one_of::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (33 samples, 0.36%)</title><rect x="86.7665%" y="901" width="0.3580%" height="15" fill="rgb(245,83,25)" fg:x="7999" fg:w="33"/><text x="87.0165%" y="911.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (26 samples, 0.28%)</title><rect x="86.8424%" y="885" width="0.2820%" height="15" fill="rgb(214,205,45)" fg:x="8006" fg:w="26"/><text x="87.0924%" y="895.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (10 samples, 0.11%)</title><rect x="87.0159%" y="869" width="0.1085%" height="15" fill="rgb(241,20,18)" fg:x="8022" fg:w="10"/><text x="87.2659%" y="879.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$130::slice (26 samples, 0.28%)</title><rect x="87.8946%" y="885" width="0.2820%" height="15" fill="rgb(232,163,23)" fg:x="8103" fg:w="26"/><text x="88.1446%" y="895.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,char&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (271 samples, 2.94%)</title><rect x="87.1244%" y="901" width="2.9396%" height="15" fill="rgb(214,5,46)" fg:x="8032" fg:w="271"/><text x="87.3744%" y="911.50">st..</text></g><g><title>stelpatch-benchmark`nom::traits::impl$32::find_token (174 samples, 1.89%)</title><rect x="88.1766%" y="885" width="1.8874%" height="15" fill="rgb(229,78,17)" fg:x="8129" fg:w="174"/><text x="88.4266%" y="895.50">s..</text></g><g><title>stelpatch-benchmark`nom::traits::impl$129::slice (2 samples, 0.02%)</title><rect x="90.0640%" y="901" width="0.0217%" height="15" fill="rgb(248,89,10)" fg:x="8303" fg:w="2"/><text x="90.3140%" y="911.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (320 samples, 3.47%)</title><rect x="86.6254%" y="917" width="3.4711%" height="15" fill="rgb(248,54,15)" fg:x="7986" fg:w="320"/><text x="86.8754%" y="927.50">ste..</text></g><g><title>stelpatch-benchmark`nom::traits::impl$6::offset (1 samples, 0.01%)</title><rect x="90.0857%" y="901" width="0.0108%" height="15" fill="rgb(223,116,6)" fg:x="8305" fg:w="1"/><text x="90.3357%" y="911.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (335 samples, 3.63%)</title><rect x="86.5495%" y="933" width="3.6338%" height="15" fill="rgb(205,125,38)" fg:x="7979" fg:w="335"/><text x="86.7995%" y="943.50">stel..</text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::recognize::closure_env$0&lt;ref$&lt;str$&gt;,usize,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::multi::many0_count::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::escaped::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt;,ref$ (8 samples, 0.09%)</title><rect x="90.0965%" y="917" width="0.0868%" height="15" fill="rgb(251,78,38)" fg:x="8306" fg:w="8"/><text x="90.3465%" y="927.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::escaped::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt;,ref$ (8 samples, 0.09%)</title><rect x="90.0965%" y="901" width="0.0868%" height="15" fill="rgb(253,78,28)" fg:x="8306" fg:w="8"/><text x="90.3465%" y="911.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::bytes::complete::is_not::closure$0::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (8 samples, 0.09%)</title><rect x="90.0965%" y="885" width="0.0868%" height="15" fill="rgb(209,120,3)" fg:x="8306" fg:w="8"/><text x="90.3465%" y="895.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$32::find_token (5 samples, 0.05%)</title><rect x="90.1291%" y="869" width="0.0542%" height="15" fill="rgb(238,229,9)" fg:x="8309" fg:w="5"/><text x="90.3791%" y="879.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (6 samples, 0.07%)</title><rect x="90.3243%" y="917" width="0.0651%" height="15" fill="rgb(253,159,18)" fg:x="8327" fg:w="6"/><text x="90.5743%" y="927.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::bytes::complete::is_not::closure$0::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (2 samples, 0.02%)</title><rect x="90.3677%" y="901" width="0.0217%" height="15" fill="rgb(244,42,34)" fg:x="8331" fg:w="2"/><text x="90.6177%" y="911.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$32::find_token (1 samples, 0.01%)</title><rect x="90.3786%" y="885" width="0.0108%" height="15" fill="rgb(224,8,7)" fg:x="8332" fg:w="1"/><text x="90.6286%" y="895.50"></text></g><g><title>stelpatch-benchmark`core::ops::function::FnMut::call_mut&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),tuple$&lt;ref$ (3,274 samples, 35.51%)</title><rect x="54.9626%" y="965" width="35.5136%" height="15" fill="rgb(210,201,45)" fg:x="5067" fg:w="3274"/><text x="55.2126%" y="975.50">stelpatch-benchmark`core::ops::function::FnMut::call_mut&lt;e..</text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::with_opt_trailing_ws::closure$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (367 samples, 3.98%)</title><rect x="86.4953%" y="949" width="3.9809%" height="15" fill="rgb(252,185,21)" fg:x="7974" fg:w="367"/><text x="86.7453%" y="959.50">stel..</text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (27 samples, 0.29%)</title><rect x="90.1833%" y="933" width="0.2929%" height="15" fill="rgb(223,131,1)" fg:x="8314" fg:w="27"/><text x="90.4333%" y="943.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (8 samples, 0.09%)</title><rect x="90.3894%" y="917" width="0.0868%" height="15" fill="rgb(245,141,16)" fg:x="8333" fg:w="8"/><text x="90.6394%" y="927.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (5 samples, 0.05%)</title><rect x="90.6064%" y="949" width="0.0542%" height="15" fill="rgb(229,55,45)" fg:x="8353" fg:w="5"/><text x="90.8564%" y="959.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::bytes::complete::is_not::closure$0::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="90.6497%" y="933" width="0.0108%" height="15" fill="rgb(208,92,15)" fg:x="8357" fg:w="1"/><text x="90.8997%" y="943.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;alloc::vec::Vec&lt;enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,alloc::alloc::Global&gt;,char&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::cut::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;alloc::vec::Vec&lt;enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,alloc::alloc::Global&gt;,char&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::multi::many_till::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedExpression)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context (3,548 samples, 38.49%)</title><rect x="52.3376%" y="1013" width="38.4857%" height="15" fill="rgb(234,185,47)" fg:x="4825" fg:w="3548"/><text x="52.5876%" y="1023.50">stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tu..</text></g><g><title>stelpatch-benchmark`nom::branch::impl$2::choice&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedExpression)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedConditionalBlock,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedConditionalBlock&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedConditionalBlock)&gt;,enum2$ (3,453 samples, 37.46%)</title><rect x="53.3680%" y="997" width="37.4553%" height="15" fill="rgb(253,104,50)" fg:x="4920" fg:w="3453"/><text x="53.6180%" y="1007.50">stelpatch-benchmark`nom::branch::impl$2::choice&lt;ref$&lt;str$&gt;,en..</text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedExpression)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$ (3,367 samples, 36.52%)</title><rect x="54.3009%" y="981" width="36.5224%" height="15" fill="rgb(205,70,7)" fg:x="5006" fg:w="3367"/><text x="54.5509%" y="991.50">stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$..</text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (32 samples, 0.35%)</title><rect x="90.4762%" y="965" width="0.3471%" height="15" fill="rgb(240,178,43)" fg:x="8341" fg:w="32"/><text x="90.7262%" y="975.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (15 samples, 0.16%)</title><rect x="90.6606%" y="949" width="0.1627%" height="15" fill="rgb(214,112,2)" fg:x="8358" fg:w="15"/><text x="90.9106%" y="959.50"></text></g><g><title>stelpatch-benchmark`std::collections::hash::map::impl$82::new::KEYS::__getit::__KEY (2 samples, 0.02%)</title><rect x="90.8233%" y="1013" width="0.0217%" height="15" fill="rgb(206,46,17)" fg:x="8373" fg:w="2"/><text x="91.0733%" y="1023.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (16 samples, 0.17%)</title><rect x="90.9318%" y="997" width="0.1736%" height="15" fill="rgb(225,220,16)" fg:x="8383" fg:w="16"/><text x="91.1818%" y="1007.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (9 samples, 0.10%)</title><rect x="91.0077%" y="981" width="0.0976%" height="15" fill="rgb(238,65,40)" fg:x="8390" fg:w="9"/><text x="91.2577%" y="991.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (3,855 samples, 41.82%)</title><rect x="49.3004%" y="1029" width="41.8158%" height="15" fill="rgb(230,151,21)" fg:x="4545" fg:w="3855"/><text x="49.5504%" y="1039.50">stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,stelpat..</text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::with_opt_trailing_ws::closure$0&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,char,nom::error::Error&lt;ref$ (25 samples, 0.27%)</title><rect x="90.8450%" y="1013" width="0.2712%" height="15" fill="rgb(218,58,49)" fg:x="8375" fg:w="25"/><text x="91.0950%" y="1023.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$130::slice (1 samples, 0.01%)</title><rect x="91.1053%" y="997" width="0.0108%" height="15" fill="rgb(219,179,14)" fg:x="8399" fg:w="1"/><text x="91.3553%" y="1007.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$5::choice&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(stelpatch::cw_parser::parser::ParsedEntity)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(ref$&lt;str$&gt;)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),stelpatch::cw_parser::parser::script_value::closure_env$0&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result (4,019 samples, 43.59%)</title><rect x="47.6516%" y="1045" width="43.5947%" height="15" fill="rgb(223,72,1)" fg:x="4393" fg:w="4019"/><text x="47.9016%" y="1055.50">stelpatch-benchmark`nom::branch::impl$5::choice&lt;ref$&lt;str$&gt;,enum2$&lt;stelp..</text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (12 samples, 0.13%)</title><rect x="91.1162%" y="1029" width="0.1302%" height="15" fill="rgb(238,126,10)" fg:x="8400" fg:w="12"/><text x="91.3662%" y="1039.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (6 samples, 0.07%)</title><rect x="91.1813%" y="1013" width="0.0651%" height="15" fill="rgb(224,206,38)" fg:x="8406" fg:w="6"/><text x="91.4313%" y="1023.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (3 samples, 0.03%)</title><rect x="91.5501%" y="1013" width="0.0325%" height="15" fill="rgb(212,201,54)" fg:x="8440" fg:w="3"/><text x="91.8001%" y="1023.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (18 samples, 0.20%)</title><rect x="91.4416%" y="1029" width="0.1952%" height="15" fill="rgb(218,154,48)" fg:x="8430" fg:w="18"/><text x="91.6916%" y="1039.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (5 samples, 0.05%)</title><rect x="91.5826%" y="1013" width="0.0542%" height="15" fill="rgb(232,93,24)" fg:x="8443" fg:w="5"/><text x="91.8326%" y="1023.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (46 samples, 0.50%)</title><rect x="91.2463%" y="1045" width="0.4990%" height="15" fill="rgb(245,30,21)" fg:x="8412" fg:w="46"/><text x="91.4963%" y="1055.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$8::choice&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (10 samples, 0.11%)</title><rect x="91.6368%" y="1029" width="0.1085%" height="15" fill="rgb(242,148,29)" fg:x="8448" fg:w="10"/><text x="91.8868%" y="1039.50"></text></g><g><title>stelpatch-benchmark`stelpatch::cw_model::impl$12::from_str (5 samples, 0.05%)</title><rect x="91.7453%" y="1045" width="0.0542%" height="15" fill="rgb(244,153,54)" fg:x="8458" fg:w="5"/><text x="91.9953%" y="1055.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$2::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::one_of::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (20 samples, 0.22%)</title><rect x="92.2117%" y="997" width="0.2169%" height="15" fill="rgb(252,87,22)" fg:x="8501" fg:w="20"/><text x="92.4617%" y="1007.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (18 samples, 0.20%)</title><rect x="92.2334%" y="981" width="0.1952%" height="15" fill="rgb(210,51,29)" fg:x="8503" fg:w="18"/><text x="92.4834%" y="991.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (4 samples, 0.04%)</title><rect x="92.3853%" y="965" width="0.0434%" height="15" fill="rgb(242,136,47)" fg:x="8517" fg:w="4"/><text x="92.6353%" y="975.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$130::slice (27 samples, 0.29%)</title><rect x="92.9493%" y="981" width="0.2929%" height="15" fill="rgb(238,68,4)" fg:x="8569" fg:w="27"/><text x="93.1993%" y="991.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,char&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (289 samples, 3.13%)</title><rect x="92.4287%" y="997" width="3.1348%" height="15" fill="rgb(242,161,30)" fg:x="8521" fg:w="289"/><text x="92.6787%" y="1007.50">ste..</text></g><g><title>stelpatch-benchmark`nom::traits::impl$32::find_token (214 samples, 2.32%)</title><rect x="93.2422%" y="981" width="2.3213%" height="15" fill="rgb(218,58,44)" fg:x="8596" fg:w="214"/><text x="93.4922%" y="991.50">s..</text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (333 samples, 3.61%)</title><rect x="91.9731%" y="1029" width="3.6121%" height="15" fill="rgb(252,125,32)" fg:x="8479" fg:w="333"/><text x="92.2231%" y="1039.50">stel..</text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (328 samples, 3.56%)</title><rect x="92.0273%" y="1013" width="3.5579%" height="15" fill="rgb(219,178,0)" fg:x="8484" fg:w="328"/><text x="92.2773%" y="1023.50">stel..</text></g><g><title>stelpatch-benchmark`nom::traits::impl$129::slice (2 samples, 0.02%)</title><rect x="95.5635%" y="997" width="0.0217%" height="15" fill="rgb(213,152,7)" fg:x="8810" fg:w="2"/><text x="95.8135%" y="1007.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (3 samples, 0.03%)</title><rect x="95.7262%" y="1013" width="0.0325%" height="15" fill="rgb(249,109,34)" fg:x="8825" fg:w="3"/><text x="95.9762%" y="1023.50"></text></g><g><title>stelpatch-benchmark`core::ops::function::FnMut::call_mut&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),tuple$&lt;ref$ (4,460 samples, 48.38%)</title><rect x="47.4455%" y="1061" width="48.3783%" height="15" fill="rgb(232,96,21)" fg:x="4374" fg:w="4460"/><text x="47.6955%" y="1071.50">stelpatch-benchmark`core::ops::function::FnMut::call_mut&lt;enum2$&lt;core::result::R..</text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::with_opt_trailing_ws::closure$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (371 samples, 4.02%)</title><rect x="91.7995%" y="1045" width="4.0243%" height="15" fill="rgb(228,27,39)" fg:x="8463" fg:w="371"/><text x="92.0495%" y="1055.50">stel..</text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (22 samples, 0.24%)</title><rect x="95.5852%" y="1029" width="0.2386%" height="15" fill="rgb(211,182,52)" fg:x="8812" fg:w="22"/><text x="95.8352%" y="1039.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (6 samples, 0.07%)</title><rect x="95.7588%" y="1013" width="0.0651%" height="15" fill="rgb(234,178,38)" fg:x="8828" fg:w="6"/><text x="96.0088%" y="1023.50"></text></g><g><title>stelpatch-benchmark`memcpy (2 samples, 0.02%)</title><rect x="95.8238%" y="1061" width="0.0217%" height="15" fill="rgb(221,111,3)" fg:x="8834" fg:w="2"/><text x="96.0738%" y="1071.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (7 samples, 0.08%)</title><rect x="96.0082%" y="1045" width="0.0759%" height="15" fill="rgb(228,175,21)" fg:x="8851" fg:w="7"/><text x="96.2582%" y="1055.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::bytes::complete::is_not::closure$0::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (5 samples, 0.05%)</title><rect x="96.0299%" y="1029" width="0.0542%" height="15" fill="rgb(228,174,43)" fg:x="8853" fg:w="5"/><text x="96.2799%" y="1039.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$32::find_token (2 samples, 0.02%)</title><rect x="96.0625%" y="1013" width="0.0217%" height="15" fill="rgb(211,191,0)" fg:x="8856" fg:w="2"/><text x="96.3125%" y="1023.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;alloc::vec::Vec&lt;enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,alloc::alloc::Global&gt;,char&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::cut::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;alloc::vec::Vec&lt;enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,alloc::alloc::Global&gt;,char&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::multi::many_till::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedExpression)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context (4,719 samples, 51.19%)</title><rect x="45.0483%" y="1109" width="51.1878%" height="15" fill="rgb(253,117,3)" fg:x="4153" fg:w="4719"/><text x="45.2983%" y="1119.50">stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;alloc::vec::Vec&lt;..</text></g><g><title>stelpatch-benchmark`nom::branch::impl$2::choice&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedExpression)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedConditionalBlock,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedConditionalBlock&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedConditionalBlock)&gt;,enum2$ (4,582 samples, 49.70%)</title><rect x="46.5343%" y="1093" width="49.7017%" height="15" fill="rgb(241,127,19)" fg:x="4290" fg:w="4582"/><text x="46.7843%" y="1103.50">stelpatch-benchmark`nom::branch::impl$2::choice&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_pa..</text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedExpression)&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$ (4,541 samples, 49.26%)</title><rect x="46.9791%" y="1077" width="49.2570%" height="15" fill="rgb(218,103,12)" fg:x="4331" fg:w="4541"/><text x="47.2291%" y="1087.50">stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw..</text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (36 samples, 0.39%)</title><rect x="95.8455%" y="1061" width="0.3905%" height="15" fill="rgb(236,214,43)" fg:x="8836" fg:w="36"/><text x="96.0955%" y="1071.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (14 samples, 0.15%)</title><rect x="96.0842%" y="1045" width="0.1519%" height="15" fill="rgb(244,144,19)" fg:x="8858" fg:w="14"/><text x="96.3342%" y="1055.50"></text></g><g><title>stelpatch-benchmark`std::collections::hash::map::impl$82::new::KEYS::__getit::__KEY (1 samples, 0.01%)</title><rect x="96.2360%" y="1109" width="0.0108%" height="15" fill="rgb(246,188,10)" fg:x="8872" fg:w="1"/><text x="96.4860%" y="1119.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (2 samples, 0.02%)</title><rect x="96.2794%" y="1077" width="0.0217%" height="15" fill="rgb(212,193,33)" fg:x="8876" fg:w="2"/><text x="96.5294%" y="1087.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::bytes::complete::is_not::closure$0::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (2 samples, 0.02%)</title><rect x="96.2794%" y="1061" width="0.0217%" height="15" fill="rgb(241,51,29)" fg:x="8876" fg:w="2"/><text x="96.5294%" y="1071.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$32::find_token (1 samples, 0.01%)</title><rect x="96.2903%" y="1045" width="0.0108%" height="15" fill="rgb(211,58,19)" fg:x="8877" fg:w="1"/><text x="96.5403%" y="1055.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (4,969 samples, 53.90%)</title><rect x="42.4341%" y="1125" width="53.8996%" height="15" fill="rgb(229,111,26)" fg:x="3912" fg:w="4969"/><text x="42.6841%" y="1135.50">stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser..</text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::with_opt_trailing_ws::closure$0&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,char,nom::error::Error&lt;ref$ (8 samples, 0.09%)</title><rect x="96.2469%" y="1109" width="0.0868%" height="15" fill="rgb(213,115,40)" fg:x="8873" fg:w="8"/><text x="96.4969%" y="1119.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (6 samples, 0.07%)</title><rect x="96.2686%" y="1093" width="0.0651%" height="15" fill="rgb(209,56,44)" fg:x="8875" fg:w="6"/><text x="96.5186%" y="1103.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (3 samples, 0.03%)</title><rect x="96.3011%" y="1077" width="0.0325%" height="15" fill="rgb(230,108,32)" fg:x="8878" fg:w="3"/><text x="96.5511%" y="1087.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$5::choice&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(stelpatch::cw_parser::parser::ParsedEntity)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(ref$&lt;str$&gt;)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),stelpatch::cw_parser::parser::script_value::closure_env$0&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result (4,976 samples, 53.98%)</title><rect x="42.4016%" y="1141" width="53.9755%" height="15" fill="rgb(216,165,31)" fg:x="3909" fg:w="4976"/><text x="42.6516%" y="1151.50">stelpatch-benchmark`nom::branch::impl$5::choice&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::p..</text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (4 samples, 0.04%)</title><rect x="96.3337%" y="1125" width="0.0434%" height="15" fill="rgb(218,122,21)" fg:x="8881" fg:w="4"/><text x="96.5837%" y="1135.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (2 samples, 0.02%)</title><rect x="96.3554%" y="1109" width="0.0217%" height="15" fill="rgb(223,224,47)" fg:x="8883" fg:w="2"/><text x="96.6054%" y="1119.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (5 samples, 0.05%)</title><rect x="96.3987%" y="1125" width="0.0542%" height="15" fill="rgb(238,102,44)" fg:x="8887" fg:w="5"/><text x="96.6487%" y="1135.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (3 samples, 0.03%)</title><rect x="96.4204%" y="1109" width="0.0325%" height="15" fill="rgb(236,46,40)" fg:x="8889" fg:w="3"/><text x="96.6704%" y="1119.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (9 samples, 0.10%)</title><rect x="96.3770%" y="1141" width="0.0976%" height="15" fill="rgb(247,202,50)" fg:x="8885" fg:w="9"/><text x="96.6270%" y="1151.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$8::choice&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom_supreme::tag::complete::tag::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (2 samples, 0.02%)</title><rect x="96.4530%" y="1125" width="0.0217%" height="15" fill="rgb(209,99,20)" fg:x="8892" fg:w="2"/><text x="96.7030%" y="1135.50"></text></g><g><title>stelpatch-benchmark`stelpatch::cw_model::impl$12::from_str (1 samples, 0.01%)</title><rect x="96.4747%" y="1141" width="0.0108%" height="15" fill="rgb(252,27,34)" fg:x="8894" fg:w="1"/><text x="96.7247%" y="1151.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$2::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::one_of::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (4 samples, 0.04%)</title><rect x="96.5181%" y="1093" width="0.0434%" height="15" fill="rgb(215,206,23)" fg:x="8898" fg:w="4"/><text x="96.7681%" y="1103.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (4 samples, 0.04%)</title><rect x="96.5181%" y="1077" width="0.0434%" height="15" fill="rgb(212,135,36)" fg:x="8898" fg:w="4"/><text x="96.7681%" y="1087.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (2 samples, 0.02%)</title><rect x="96.5398%" y="1061" width="0.0217%" height="15" fill="rgb(240,189,1)" fg:x="8900" fg:w="2"/><text x="96.7898%" y="1071.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$130::slice (7 samples, 0.08%)</title><rect x="96.7784%" y="1077" width="0.0759%" height="15" fill="rgb(242,56,20)" fg:x="8922" fg:w="7"/><text x="97.0284%" y="1087.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (80 samples, 0.87%)</title><rect x="96.4964%" y="1125" width="0.8678%" height="15" fill="rgb(247,132,33)" fg:x="8896" fg:w="80"/><text x="96.7464%" y="1135.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (79 samples, 0.86%)</title><rect x="96.5072%" y="1109" width="0.8569%" height="15" fill="rgb(208,149,11)" fg:x="8897" fg:w="79"/><text x="96.7572%" y="1119.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,char&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (74 samples, 0.80%)</title><rect x="96.5614%" y="1093" width="0.8027%" height="15" fill="rgb(211,33,11)" fg:x="8902" fg:w="74"/><text x="96.8114%" y="1103.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$32::find_token (47 samples, 0.51%)</title><rect x="96.8543%" y="1077" width="0.5098%" height="15" fill="rgb(221,29,38)" fg:x="8929" fg:w="47"/><text x="97.1043%" y="1087.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="97.3967%" y="1109" width="0.0108%" height="15" fill="rgb(206,182,49)" fg:x="8979" fg:w="1"/><text x="97.6467%" y="1119.50"></text></g><g><title>stelpatch-benchmark`core::ops::function::FnMut::call_mut&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),tuple$&lt;ref$ (5,074 samples, 55.04%)</title><rect x="42.3799%" y="1157" width="55.0385%" height="15" fill="rgb(216,140,1)" fg:x="3907" fg:w="5074"/><text x="42.6299%" y="1167.50">stelpatch-benchmark`core::ops::function::FnMut::call_mut&lt;enum2$&lt;core::result::Result&lt;tuple$..</text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::with_opt_trailing_ws::closure$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (86 samples, 0.93%)</title><rect x="96.4855%" y="1141" width="0.9329%" height="15" fill="rgb(232,57,40)" fg:x="8895" fg:w="86"/><text x="96.7355%" y="1151.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (5 samples, 0.05%)</title><rect x="97.3641%" y="1125" width="0.0542%" height="15" fill="rgb(224,186,18)" fg:x="8976" fg:w="5"/><text x="97.6141%" y="1135.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="97.4075%" y="1109" width="0.0108%" height="15" fill="rgb(215,121,11)" fg:x="8980" fg:w="1"/><text x="97.6575%" y="1119.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (9 samples, 0.10%)</title><rect x="97.4618%" y="1141" width="0.0976%" height="15" fill="rgb(245,147,10)" fg:x="8985" fg:w="9"/><text x="97.7118%" y="1151.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::bytes::complete::is_not::closure$0::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (7 samples, 0.08%)</title><rect x="97.4835%" y="1125" width="0.0759%" height="15" fill="rgb(238,153,13)" fg:x="8987" fg:w="7"/><text x="97.7335%" y="1135.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$32::find_token (4 samples, 0.04%)</title><rect x="97.5160%" y="1109" width="0.0434%" height="15" fill="rgb(233,108,0)" fg:x="8990" fg:w="4"/><text x="97.7660%" y="1119.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (14 samples, 0.15%)</title><rect x="97.4184%" y="1157" width="0.1519%" height="15" fill="rgb(212,157,17)" fg:x="8981" fg:w="14"/><text x="97.6684%" y="1167.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="97.5594%" y="1141" width="0.0108%" height="15" fill="rgb(225,213,38)" fg:x="8994" fg:w="1"/><text x="97.8094%" y="1151.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::bytes::complete::is_not::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="97.5702%" y="1093" width="0.0108%" height="15" fill="rgb(248,16,11)" fg:x="8995" fg:w="1"/><text x="97.8202%" y="1103.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::bytes::complete::is_not::closure$0::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="97.5702%" y="1077" width="0.0108%" height="15" fill="rgb(241,33,4)" fg:x="8995" fg:w="1"/><text x="97.8202%" y="1087.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$32::find_token (1 samples, 0.01%)</title><rect x="97.5702%" y="1061" width="0.0108%" height="15" fill="rgb(222,26,43)" fg:x="8995" fg:w="1"/><text x="97.8202%" y="1071.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$5::choice&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedEntity&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(stelpatch::cw_parser::parser::ParsedEntity)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; (*)(ref$&lt;str$&gt;)&gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),stelpatch::cw_parser::parser::script_value::closure_env$0&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result (2 samples, 0.02%)</title><rect x="97.5702%" y="1157" width="0.0217%" height="15" fill="rgb(243,29,36)" fg:x="8995" fg:w="2"/><text x="97.8202%" y="1167.50"></text></g><g><title>stelpatch-benchmark`core::ops::function::FnMut::call_mut&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),tuple$&lt;ref$ (2 samples, 0.02%)</title><rect x="97.5702%" y="1141" width="0.0217%" height="15" fill="rgb(241,9,27)" fg:x="8995" fg:w="2"/><text x="97.8202%" y="1151.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$2::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::one_of::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (2 samples, 0.02%)</title><rect x="97.5702%" y="1125" width="0.0217%" height="15" fill="rgb(205,117,26)" fg:x="8995" fg:w="2"/><text x="97.8202%" y="1135.50"></text></g><g><title>stelpatch-benchmark`nom::branch::impl$1::choice&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::value::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (2 samples, 0.02%)</title><rect x="97.5702%" y="1109" width="0.0217%" height="15" fill="rgb(209,80,39)" fg:x="8995" fg:w="2"/><text x="97.8202%" y="1119.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::multispace1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$ (1 samples, 0.01%)</title><rect x="97.5811%" y="1093" width="0.0108%" height="15" fill="rgb(239,155,6)" fg:x="8996" fg:w="1"/><text x="97.8311%" y="1103.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$130::slice (1 samples, 0.01%)</title><rect x="97.6136%" y="1109" width="0.0108%" height="15" fill="rgb(212,104,12)" fg:x="8999" fg:w="1"/><text x="97.8636%" y="1119.50"></text></g><g><title>stelpatch-benchmark`alloc::vec::spec_from_iter::impl$0::from_iter&lt;enum2$&lt;core::result::Result&lt;stelpatch::cw_model::Module,anyhow::Error&gt; &gt;,core::iter::adapters::map::Map&lt;core::slice::iter::Iter (8,374 samples, 90.83%)</title><rect x="6.8771%" y="1253" width="90.8341%" height="15" fill="rgb(234,204,3)" fg:x="634" fg:w="8374"/><text x="7.1271%" y="1263.50">stelpatch-benchmark`alloc::vec::spec_from_iter::impl$0::from_iter&lt;enum2$&lt;core::result::Result&lt;stelpatch::cw_model::Module,anyhow::Error&gt; &gt;,core::iter::..</text></g><g><title>stelpatch-benchmark`stelpatch::cw_model::Module::parse_from_file (8,371 samples, 90.80%)</title><rect x="6.9096%" y="1237" width="90.8016%" height="15" fill="rgb(251,218,7)" fg:x="637" fg:w="8371"/><text x="7.1596%" y="1247.50">stelpatch-benchmark`stelpatch::cw_model::Module::parse_from_file</text></g><g><title>stelpatch-benchmark`stelpatch::cw_parser::parser::module&lt;nom::error::Error&lt;ref$ (5,217 samples, 56.59%)</title><rect x="41.1216%" y="1221" width="56.5897%" height="15" fill="rgb(221,81,32)" fg:x="3791" fg:w="5217"/><text x="41.3716%" y="1231.50">stelpatch-benchmark`stelpatch::cw_parser::parser::module&lt;nom::error::Error&lt;ref$</text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;alloc::vec::Vec&lt;enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,alloc::alloc::Global&gt;,ref$&lt;str$&gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::multi::many_till::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom_supreme::parser_ext::Context&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),stelpatch::cw_parser::parser::ParsedExpression,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedExpression)&gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),stelpatch::cw_parser::parser::ParsedExpression,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedExpression)&gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$ (5,159 samples, 55.96%)</title><rect x="41.7507%" y="1205" width="55.9605%" height="15" fill="rgb(214,152,26)" fg:x="3849" fg:w="5159"/><text x="42.0007%" y="1215.50">stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;alloc::vec::Vec&lt;enum2$&lt;s..</text></g><g><title>stelpatch-benchmark`nom::branch::impl$2::choice&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),stelpatch::cw_parser::parser::ParsedExpression,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedExpression)&gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),stelpatch::cw_parser::parser::ParsedExpression,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(stelpatch::cw_parser::parser::ParsedExpression)&gt;,ref$&lt;str$&gt; &gt;,nom_supreme::parser_ext::Context&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),enum2$&lt;stelpatch::cw_parser::parser::ParsedValue&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,enum2$&lt;stelpatch::cw_parser::parser::ParsedBlockItem&gt; (*)(enum2$ (5,121 samples, 55.55%)</title><rect x="42.1629%" y="1189" width="55.5483%" height="15" fill="rgb(223,22,3)" fg:x="3887" fg:w="5121"/><text x="42.4129%" y="1199.50">stelpatch-benchmark`nom::branch::impl$2::choice&lt;ref$&lt;str$&gt;,enum2$&lt;stelpatch::cw_parser::pars..</text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,stelpatch::cw_parser::parser::with_opt_trailing_ws::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::ParsedExpression&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),stelpatch::cw_parser::parser::ParsedExpression,nom::error::Error&lt;ref$ (5,113 samples, 55.46%)</title><rect x="42.2497%" y="1173" width="55.4615%" height="15" fill="rgb(207,174,7)" fg:x="3895" fg:w="5113"/><text x="42.4997%" y="1183.50">stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,stelpatch::cw_parser::parser::P..</text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,tuple$&lt;char,ref$&lt;str$&gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (11 samples, 0.12%)</title><rect x="97.5919%" y="1157" width="0.1193%" height="15" fill="rgb(224,19,52)" fg:x="8997" fg:w="11"/><text x="97.8419%" y="1167.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (11 samples, 0.12%)</title><rect x="97.5919%" y="1141" width="0.1193%" height="15" fill="rgb(228,24,14)" fg:x="8997" fg:w="11"/><text x="97.8419%" y="1151.50"></text></g><g><title>stelpatch-benchmark`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,char&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$ (11 samples, 0.12%)</title><rect x="97.5919%" y="1125" width="0.1193%" height="15" fill="rgb(230,153,43)" fg:x="8997" fg:w="11"/><text x="97.8419%" y="1135.50"></text></g><g><title>stelpatch-benchmark`nom::traits::impl$32::find_token (8 samples, 0.09%)</title><rect x="97.6245%" y="1109" width="0.0868%" height="15" fill="rgb(231,106,12)" fg:x="9000" fg:w="8"/><text x="97.8745%" y="1119.50"></text></g><g><title>stelpatch-benchmark`std::path::Path::extension (1 samples, 0.01%)</title><rect x="97.7112%" y="1253" width="0.0108%" height="15" fill="rgb(215,92,2)" fg:x="9008" fg:w="1"/><text x="97.9612%" y="1263.50"></text></g><g><title>stelpatch-benchmark`std::path::Path::file_name (1 samples, 0.01%)</title><rect x="97.7112%" y="1237" width="0.0108%" height="15" fill="rgb(249,143,25)" fg:x="9008" fg:w="1"/><text x="97.9612%" y="1247.50"></text></g><g><title>stelpatch-benchmark`std::path::impl$21::next_back (1 samples, 0.01%)</title><rect x="97.7112%" y="1221" width="0.0108%" height="15" fill="rgb(252,7,35)" fg:x="9008" fg:w="1"/><text x="97.9612%" y="1231.50"></text></g><g><title>stelpatch-benchmark`std::path::Components::parse_next_component_back (1 samples, 0.01%)</title><rect x="97.7112%" y="1205" width="0.0108%" height="15" fill="rgb(216,69,40)" fg:x="9008" fg:w="1"/><text x="97.9612%" y="1215.50"></text></g><g><title>stelpatch-benchmark`std::path::Path::file_name (1 samples, 0.01%)</title><rect x="97.7221%" y="1253" width="0.0108%" height="15" fill="rgb(240,36,33)" fg:x="9009" fg:w="1"/><text x="97.9721%" y="1263.50"></text></g><g><title>stelpatch-benchmark`std::sys::windows::path::parse_prefix (1 samples, 0.01%)</title><rect x="97.7221%" y="1237" width="0.0108%" height="15" fill="rgb(231,128,14)" fg:x="9009" fg:w="1"/><text x="97.9721%" y="1247.50"></text></g><g><title>stelpatch-benchmark`std::path::Path::to_path_buf (1 samples, 0.01%)</title><rect x="97.7329%" y="1253" width="0.0108%" height="15" fill="rgb(245,143,14)" fg:x="9010" fg:w="1"/><text x="97.9829%" y="1263.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="97.7329%" y="1237" width="0.0108%" height="15" fill="rgb(222,130,28)" fg:x="9010" fg:w="1"/><text x="97.9829%" y="1247.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="97.7329%" y="1221" width="0.0108%" height="15" fill="rgb(212,10,48)" fg:x="9010" fg:w="1"/><text x="97.9829%" y="1231.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.01%)</title><rect x="97.7329%" y="1205" width="0.0108%" height="15" fill="rgb(254,118,45)" fg:x="9010" fg:w="1"/><text x="97.9829%" y="1215.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.01%)</title><rect x="97.7329%" y="1189" width="0.0108%" height="15" fill="rgb(228,6,45)" fg:x="9010" fg:w="1"/><text x="97.9829%" y="1199.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="97.7329%" y="1173" width="0.0108%" height="15" fill="rgb(241,18,35)" fg:x="9010" fg:w="1"/><text x="97.9829%" y="1183.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="97.7329%" y="1157" width="0.0108%" height="15" fill="rgb(227,214,53)" fg:x="9010" fg:w="1"/><text x="97.9829%" y="1167.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.01%)</title><rect x="97.7329%" y="1141" width="0.0108%" height="15" fill="rgb(224,107,51)" fg:x="9010" fg:w="1"/><text x="97.9829%" y="1151.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.01%)</title><rect x="97.7329%" y="1125" width="0.0108%" height="15" fill="rgb(248,60,28)" fg:x="9010" fg:w="1"/><text x="97.9829%" y="1135.50"></text></g><g><title>ntdll`NtAllocateVirtualMemory (1 samples, 0.01%)</title><rect x="97.7329%" y="1109" width="0.0108%" height="15" fill="rgb(249,101,23)" fg:x="9010" fg:w="1"/><text x="97.9829%" y="1119.50"></text></g><g><title>stelpatch-benchmark`std::path::PathBuf::_push (1 samples, 0.01%)</title><rect x="97.7438%" y="1253" width="0.0108%" height="15" fill="rgb(228,51,19)" fg:x="9011" fg:w="1"/><text x="97.9938%" y="1263.50"></text></g><g><title>stelpatch-benchmark`std::path::Path::is_absolute (1 samples, 0.01%)</title><rect x="97.7438%" y="1237" width="0.0108%" height="15" fill="rgb(213,20,6)" fg:x="9011" fg:w="1"/><text x="97.9938%" y="1247.50"></text></g><g><title>stelpatch-benchmark`std::sys::windows::path::parse_prefix (1 samples, 0.01%)</title><rect x="97.7438%" y="1221" width="0.0108%" height="15" fill="rgb(212,124,10)" fg:x="9011" fg:w="1"/><text x="97.9938%" y="1231.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;lasso::keys::Spur,ref$&lt;str$&gt;,ahash::random_state::RandomState&gt;::insert&lt;lasso::keys::Spur,ref$ (2 samples, 0.02%)</title><rect x="97.7546%" y="1221" width="0.0217%" height="15" fill="rgb(248,3,40)" fg:x="9012" fg:w="2"/><text x="98.0046%" y="1231.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::entry&lt;ref$ (1 samples, 0.01%)</title><rect x="97.7763%" y="1221" width="0.0108%" height="15" fill="rgb(223,178,23)" fg:x="9014" fg:w="1"/><text x="98.0263%" y="1231.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;ahash::random_state::RandomState,ref$&lt;ref$ (1 samples, 0.01%)</title><rect x="97.7763%" y="1205" width="0.0108%" height="15" fill="rgb(240,132,45)" fg:x="9014" fg:w="1"/><text x="98.0263%" y="1215.50"></text></g><g><title>stelpatch-benchmark`lasso::multi_threaded::ThreadedRodeo&lt;lasso::keys::Spur,ahash::random_state::RandomState&gt;::get_or_intern (5 samples, 0.05%)</title><rect x="97.7546%" y="1237" width="0.0542%" height="15" fill="rgb(245,164,36)" fg:x="9012" fg:w="5"/><text x="98.0046%" y="1247.50"></text></g><g><title>stelpatch-benchmark`dashmap::DashMap&lt;ref$&lt;str$&gt;,lasso::keys::Spur,ahash::random_state::RandomState&gt;::get&lt;ref$ (2 samples, 0.02%)</title><rect x="97.7872%" y="1221" width="0.0217%" height="15" fill="rgb(231,188,53)" fg:x="9015" fg:w="2"/><text x="98.0372%" y="1231.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;ahash::random_state::RandomState,ref$ (1 samples, 0.01%)</title><rect x="97.7980%" y="1205" width="0.0108%" height="15" fill="rgb(237,198,39)" fg:x="9016" fg:w="1"/><text x="98.0480%" y="1215.50"></text></g><g><title>VCRUNTIME140`memcpy (2 samples, 0.02%)</title><rect x="97.8306%" y="1173" width="0.0217%" height="15" fill="rgb(223,120,35)" fg:x="9019" fg:w="2"/><text x="98.0806%" y="1183.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="97.8740%" y="1141" width="0.0108%" height="15" fill="rgb(253,107,49)" fg:x="9023" fg:w="1"/><text x="98.1240%" y="1151.50"></text></g><g><title>stelpatch-benchmark`stelpatch::cw_model::Module::path (8 samples, 0.09%)</title><rect x="97.8089%" y="1237" width="0.0868%" height="15" fill="rgb(216,44,31)" fg:x="9017" fg:w="8"/><text x="98.0589%" y="1247.50"></text></g><g><title>stelpatch-benchmark`alloc::fmt::format::format_inner (8 samples, 0.09%)</title><rect x="97.8089%" y="1221" width="0.0868%" height="15" fill="rgb(253,87,21)" fg:x="9017" fg:w="8"/><text x="98.0589%" y="1231.50"></text></g><g><title>stelpatch-benchmark`core::fmt::write (8 samples, 0.09%)</title><rect x="97.8089%" y="1205" width="0.0868%" height="15" fill="rgb(226,18,2)" fg:x="9017" fg:w="8"/><text x="98.0589%" y="1215.50"></text></g><g><title>stelpatch-benchmark`core::fmt::impl$0::write_str (6 samples, 0.07%)</title><rect x="97.8306%" y="1189" width="0.0651%" height="15" fill="rgb(216,8,46)" fg:x="9019" fg:w="6"/><text x="98.0806%" y="1199.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::impl$1::reserve::do_reserve_and_handle (4 samples, 0.04%)</title><rect x="97.8523%" y="1173" width="0.0434%" height="15" fill="rgb(226,140,39)" fg:x="9021" fg:w="4"/><text x="98.1023%" y="1183.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="97.8740%" y="1157" width="0.0217%" height="15" fill="rgb(221,194,54)" fg:x="9023" fg:w="2"/><text x="98.1240%" y="1167.50"></text></g><g><title>ntdll`RtlReAllocateHeap (1 samples, 0.01%)</title><rect x="97.8848%" y="1141" width="0.0108%" height="15" fill="rgb(213,92,11)" fg:x="9024" fg:w="1"/><text x="98.1348%" y="1151.50"></text></g><g><title>ntdll`RtlReAllocateHeap (1 samples, 0.01%)</title><rect x="97.8848%" y="1125" width="0.0108%" height="15" fill="rgb(229,162,46)" fg:x="9024" fg:w="1"/><text x="98.1348%" y="1135.50"></text></g><g><title>ntdll`RtlReleaseSRWLockShared (1 samples, 0.01%)</title><rect x="97.8848%" y="1109" width="0.0108%" height="15" fill="rgb(214,111,36)" fg:x="9024" fg:w="1"/><text x="98.1348%" y="1119.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="97.8848%" y="1093" width="0.0108%" height="15" fill="rgb(207,6,21)" fg:x="9024" fg:w="1"/><text x="98.1348%" y="1103.50"></text></g><g><title>stelpatch-benchmark`hashbrown::map::HashMap&lt;lasso::keys::Spur,enum2$&lt;stelpatch::cw_model::Value&gt;,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::insert&lt;lasso::keys::Spur,enum2$ (1 samples, 0.01%)</title><rect x="97.9390%" y="1205" width="0.0108%" height="15" fill="rgb(213,127,38)" fg:x="9029" fg:w="1"/><text x="98.1890%" y="1215.50"></text></g><g><title>stelpatch-benchmark`hashbrown::map::impl$97::extend&lt;lasso::keys::Spur,enum2$&lt;stelpatch::cw_model::Value&gt;,std::collections::hash::map::RandomState,alloc::alloc::Global,std::collections::hash::map::HashMap&lt;lasso::keys::Spur,enum2$ (5 samples, 0.05%)</title><rect x="97.9065%" y="1221" width="0.0542%" height="15" fill="rgb(238,118,32)" fg:x="9026" fg:w="5"/><text x="98.1565%" y="1231.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;lasso::keys::Spur,enum2$&lt;stelpatch::cw_model::Value&gt; &gt;,alloc::alloc::Global&gt;::reserve_rehash&lt;tuple$&lt;lasso::keys::Spur,enum2$&lt;stelpatch::cw_model::Value&gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;lasso::keys::Spur,lasso::keys::Spur,enum2$ (1 samples, 0.01%)</title><rect x="97.9499%" y="1205" width="0.0108%" height="15" fill="rgb(240,139,39)" fg:x="9030" fg:w="1"/><text x="98.1999%" y="1215.50"></text></g><g><title>VCRUNTIME140`memcpy (1 samples, 0.01%)</title><rect x="97.9499%" y="1189" width="0.0108%" height="15" fill="rgb(235,10,37)" fg:x="9030" fg:w="1"/><text x="98.1999%" y="1199.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.01%)</title><rect x="98.0258%" y="1189" width="0.0108%" height="15" fill="rgb(249,171,38)" fg:x="9037" fg:w="1"/><text x="98.2758%" y="1199.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.01%)</title><rect x="98.0258%" y="1173" width="0.0108%" height="15" fill="rgb(242,144,32)" fg:x="9037" fg:w="1"/><text x="98.2758%" y="1183.50"></text></g><g><title>ntdll`RtlFreeHeap (3 samples, 0.03%)</title><rect x="98.0258%" y="1205" width="0.0325%" height="15" fill="rgb(217,117,21)" fg:x="9037" fg:w="3"/><text x="98.2758%" y="1215.50"></text></g><g><title>ntdll`memset (2 samples, 0.02%)</title><rect x="98.0367%" y="1189" width="0.0217%" height="15" fill="rgb(249,87,1)" fg:x="9038" fg:w="2"/><text x="98.2867%" y="1199.50"></text></g><g><title>stelpatch-benchmark`core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState,ref$ (3 samples, 0.03%)</title><rect x="98.0584%" y="1189" width="0.0325%" height="15" fill="rgb(248,196,48)" fg:x="9040" fg:w="3"/><text x="98.3084%" y="1199.50"></text></g><g><title>stelpatch-benchmark`core::hash::sip::impl$5::write (1 samples, 0.01%)</title><rect x="98.0801%" y="1173" width="0.0108%" height="15" fill="rgb(251,206,33)" fg:x="9042" fg:w="1"/><text x="98.3301%" y="1183.50"></text></g><g><title>stelpatch-benchmark`hashbrown::map::HashMap&lt;lasso::keys::Spur,stelpatch::cw_model::PropertyInfoList,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::insert (6 samples, 0.07%)</title><rect x="98.0584%" y="1205" width="0.0651%" height="15" fill="rgb(232,141,28)" fg:x="9040" fg:w="6"/><text x="98.3084%" y="1215.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;lasso::keys::Spur,stelpatch::cw_model::PropertyInfoList&gt;,alloc::alloc::Global&gt;::insert&lt;tuple$&lt;lasso::keys::Spur,stelpatch::cw_model::PropertyInfoList&gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0 (3 samples, 0.03%)</title><rect x="98.0909%" y="1189" width="0.0325%" height="15" fill="rgb(209,167,14)" fg:x="9043" fg:w="3"/><text x="98.3409%" y="1199.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::RawTable&lt;tuple$&lt;lasso::keys::Spur,stelpatch::cw_model::PropertyInfoList&gt;,alloc::alloc::Global&gt;::reserve_rehash&lt;tuple$&lt;lasso::keys::Spur,stelpatch::cw_model::PropertyInfoList&gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0 (2 samples, 0.02%)</title><rect x="98.1017%" y="1173" width="0.0217%" height="15" fill="rgb(225,11,50)" fg:x="9044" fg:w="2"/><text x="98.3517%" y="1183.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="98.1126%" y="1157" width="0.0108%" height="15" fill="rgb(209,50,20)" fg:x="9045" fg:w="1"/><text x="98.3626%" y="1167.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="98.1126%" y="1141" width="0.0108%" height="15" fill="rgb(212,17,46)" fg:x="9045" fg:w="1"/><text x="98.3626%" y="1151.50"></text></g><g><title>ntdll`RtlCreateTimer (1 samples, 0.01%)</title><rect x="98.1126%" y="1125" width="0.0108%" height="15" fill="rgb(216,101,39)" fg:x="9045" fg:w="1"/><text x="98.3626%" y="1135.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (2 samples, 0.02%)</title><rect x="98.2970%" y="1173" width="0.0217%" height="15" fill="rgb(212,228,48)" fg:x="9062" fg:w="2"/><text x="98.5470%" y="1183.50"></text></g><g><title>ntdll`RtlFreeHeap (6 samples, 0.07%)</title><rect x="98.2970%" y="1189" width="0.0651%" height="15" fill="rgb(250,6,50)" fg:x="9062" fg:w="6"/><text x="98.5470%" y="1199.50"></text></g><g><title>ntdll`memset (4 samples, 0.04%)</title><rect x="98.3187%" y="1173" width="0.0434%" height="15" fill="rgb(250,160,48)" fg:x="9064" fg:w="4"/><text x="98.5687%" y="1183.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (6 samples, 0.07%)</title><rect x="98.5248%" y="1157" width="0.0651%" height="15" fill="rgb(244,216,33)" fg:x="9083" fg:w="6"/><text x="98.7748%" y="1167.50"></text></g><g><title>ntdll`RtlFreeHeap (8 samples, 0.09%)</title><rect x="98.5248%" y="1173" width="0.0868%" height="15" fill="rgb(207,157,5)" fg:x="9083" fg:w="8"/><text x="98.7748%" y="1183.50"></text></g><g><title>ntdll`memset (2 samples, 0.02%)</title><rect x="98.5899%" y="1157" width="0.0217%" height="15" fill="rgb(228,199,8)" fg:x="9089" fg:w="2"/><text x="98.8399%" y="1167.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.01%)</title><rect x="98.6007%" y="1141" width="0.0108%" height="15" fill="rgb(227,80,20)" fg:x="9090" fg:w="1"/><text x="98.8507%" y="1151.50"></text></g><g><title>KERNEL32`HeapFree (1 samples, 0.01%)</title><rect x="98.7309%" y="1157" width="0.0108%" height="15" fill="rgb(222,9,33)" fg:x="9102" fg:w="1"/><text x="98.9809%" y="1167.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (2 samples, 0.02%)</title><rect x="98.7417%" y="1141" width="0.0217%" height="15" fill="rgb(239,44,28)" fg:x="9103" fg:w="2"/><text x="98.9917%" y="1151.50"></text></g><g><title>ntdll`RtlFreeHeap (8 samples, 0.09%)</title><rect x="98.7417%" y="1157" width="0.0868%" height="15" fill="rgb(249,187,43)" fg:x="9103" fg:w="8"/><text x="98.9917%" y="1167.50"></text></g><g><title>ntdll`memset (6 samples, 0.07%)</title><rect x="98.7634%" y="1141" width="0.0651%" height="15" fill="rgb(216,141,28)" fg:x="9105" fg:w="6"/><text x="99.0134%" y="1151.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::impl$17::drop&lt;tuple$ (72 samples, 0.78%)</title><rect x="98.1234%" y="1205" width="0.7810%" height="15" fill="rgb(230,154,53)" fg:x="9046" fg:w="72"/><text x="98.3734%" y="1215.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::impl$17::drop&lt;tuple$ (50 samples, 0.54%)</title><rect x="98.3621%" y="1189" width="0.5424%" height="15" fill="rgb(227,82,4)" fg:x="9068" fg:w="50"/><text x="98.6121%" y="1199.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::impl$17::drop&lt;tuple$ (27 samples, 0.29%)</title><rect x="98.6116%" y="1173" width="0.2929%" height="15" fill="rgb(220,107,16)" fg:x="9091" fg:w="27"/><text x="98.8616%" y="1183.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::impl$17::drop&lt;tuple$ (7 samples, 0.08%)</title><rect x="98.8285%" y="1157" width="0.0759%" height="15" fill="rgb(207,187,2)" fg:x="9111" fg:w="7"/><text x="99.0785%" y="1167.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::impl$17::drop&lt;tuple$ (2 samples, 0.02%)</title><rect x="98.8827%" y="1141" width="0.0217%" height="15" fill="rgb(210,162,52)" fg:x="9116" fg:w="2"/><text x="99.1327%" y="1151.50"></text></g><g><title>ntdll`RtlFreeHeap (1 samples, 0.01%)</title><rect x="98.8936%" y="1125" width="0.0108%" height="15" fill="rgb(217,216,49)" fg:x="9117" fg:w="1"/><text x="99.1436%" y="1135.50"></text></g><g><title>ntdll`memset (1 samples, 0.01%)</title><rect x="98.8936%" y="1109" width="0.0108%" height="15" fill="rgb(218,146,49)" fg:x="9117" fg:w="1"/><text x="99.1436%" y="1119.50"></text></g><g><title>stelpatch-benchmark`stelpatch::playset::game_mod::GameMod::push (107 samples, 1.16%)</title><rect x="97.7546%" y="1253" width="1.1606%" height="15" fill="rgb(216,55,40)" fg:x="9012" fg:w="107"/><text x="98.0046%" y="1263.50"></text></g><g><title>stelpatch-benchmark`stelpatch::cw_model::Namespace::insert (94 samples, 1.02%)</title><rect x="97.8957%" y="1237" width="1.0196%" height="15" fill="rgb(208,196,21)" fg:x="9025" fg:w="94"/><text x="98.1457%" y="1247.50"></text></g><g><title>stelpatch-benchmark`hashbrown::map::impl$97::extend&lt;lasso::keys::Spur,stelpatch::cw_model::PropertyInfoList,std::collections::hash::map::RandomState,alloc::alloc::Global,std::collections::hash::map::HashMap (88 samples, 0.95%)</title><rect x="97.9607%" y="1221" width="0.9546%" height="15" fill="rgb(242,117,42)" fg:x="9031" fg:w="88"/><text x="98.2107%" y="1231.50"></text></g><g><title>stelpatch-benchmark`hashbrown::raw::impl$33::drop&lt;tuple$ (1 samples, 0.01%)</title><rect x="98.9044%" y="1205" width="0.0108%" height="15" fill="rgb(210,11,23)" fg:x="9118" fg:w="1"/><text x="99.1544%" y="1215.50"></text></g><g><title>VCRUNTIME140`memcpy (1 samples, 0.01%)</title><rect x="98.9153%" y="1237" width="0.0108%" height="15" fill="rgb(217,110,2)" fg:x="9119" fg:w="1"/><text x="99.1653%" y="1247.50"></text></g><g><title>VCRUNTIME140`memcpy (1 samples, 0.01%)</title><rect x="98.9261%" y="1221" width="0.0108%" height="15" fill="rgb(229,77,54)" fg:x="9120" fg:w="1"/><text x="99.1761%" y="1231.50"></text></g><g><title>ntdll`NtQueryDirectoryFileEx (23 samples, 0.25%)</title><rect x="98.9478%" y="1189" width="0.2495%" height="15" fill="rgb(218,53,16)" fg:x="9122" fg:w="23"/><text x="99.1978%" y="1199.50"></text></g><g><title>stelpatch-benchmark`std::fs::impl$24::next (27 samples, 0.29%)</title><rect x="98.9261%" y="1237" width="0.2929%" height="15" fill="rgb(215,38,13)" fg:x="9120" fg:w="27"/><text x="99.1761%" y="1247.50"></text></g><g><title>stelpatch-benchmark`std::sys::windows::fs::impl$5::next (26 samples, 0.28%)</title><rect x="98.9370%" y="1221" width="0.2820%" height="15" fill="rgb(235,42,18)" fg:x="9121" fg:w="26"/><text x="99.1870%" y="1231.50"></text></g><g><title>KERNELBASE`FindNextFileW (26 samples, 0.28%)</title><rect x="98.9370%" y="1205" width="0.2820%" height="15" fill="rgb(219,66,54)" fg:x="9121" fg:w="26"/><text x="99.1870%" y="1215.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.02%)</title><rect x="99.1973%" y="1189" width="0.0217%" height="15" fill="rgb(222,205,4)" fg:x="9145" fg:w="2"/><text x="99.4473%" y="1199.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.02%)</title><rect x="99.1973%" y="1173" width="0.0217%" height="15" fill="rgb(227,213,46)" fg:x="9145" fg:w="2"/><text x="99.4473%" y="1183.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.01%)</title><rect x="99.2082%" y="1157" width="0.0108%" height="15" fill="rgb(250,145,42)" fg:x="9146" fg:w="1"/><text x="99.4582%" y="1167.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.01%)</title><rect x="99.2082%" y="1141" width="0.0108%" height="15" fill="rgb(219,15,2)" fg:x="9146" fg:w="1"/><text x="99.4582%" y="1151.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.01%)</title><rect x="99.2082%" y="1125" width="0.0108%" height="15" fill="rgb(231,181,52)" fg:x="9146" fg:w="1"/><text x="99.4582%" y="1135.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::RawVec&lt;enum2$&lt;walkdir::DirList&gt;,alloc::alloc::Global&gt;::reserve_for_push&lt;enum2$ (1 samples, 0.01%)</title><rect x="99.2190%" y="1205" width="0.0108%" height="15" fill="rgb(235,1,42)" fg:x="9147" fg:w="1"/><text x="99.4690%" y="1215.50"></text></g><g><title>ntdll`NtQueryDirectoryFileEx (9 samples, 0.10%)</title><rect x="99.2407%" y="1157" width="0.0976%" height="15" fill="rgb(249,88,27)" fg:x="9149" fg:w="9"/><text x="99.4907%" y="1167.50"></text></g><g><title>ntdll`RtlFreeHeap (1 samples, 0.01%)</title><rect x="99.3383%" y="1157" width="0.0108%" height="15" fill="rgb(235,145,16)" fg:x="9158" fg:w="1"/><text x="99.5883%" y="1167.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.01%)</title><rect x="99.3383%" y="1141" width="0.0108%" height="15" fill="rgb(237,114,19)" fg:x="9158" fg:w="1"/><text x="99.5883%" y="1151.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.01%)</title><rect x="99.3383%" y="1125" width="0.0108%" height="15" fill="rgb(238,51,50)" fg:x="9158" fg:w="1"/><text x="99.5883%" y="1135.50"></text></g><g><title>ntdll`RtlInitUnicodeString (1 samples, 0.01%)</title><rect x="99.3492%" y="1157" width="0.0108%" height="15" fill="rgb(205,194,25)" fg:x="9159" fg:w="1"/><text x="99.5992%" y="1167.50"></text></g><g><title>ntdll`RtlInitializeCriticalSection (1 samples, 0.01%)</title><rect x="99.3600%" y="1157" width="0.0108%" height="15" fill="rgb(215,203,17)" fg:x="9160" fg:w="1"/><text x="99.6100%" y="1167.50"></text></g><g><title>ntdll`RtlRetrieveNtUserPfn (1 samples, 0.01%)</title><rect x="99.3600%" y="1141" width="0.0108%" height="15" fill="rgb(233,112,49)" fg:x="9160" fg:w="1"/><text x="99.6100%" y="1151.50"></text></g><g><title>KERNELBASE`FindFirstFileW (43 samples, 0.47%)</title><rect x="99.2299%" y="1189" width="0.4664%" height="15" fill="rgb(241,130,26)" fg:x="9148" fg:w="43"/><text x="99.4799%" y="1199.50"></text></g><g><title>KERNELBASE`FindFirstFileExW (43 samples, 0.47%)</title><rect x="99.2299%" y="1173" width="0.4664%" height="15" fill="rgb(252,223,19)" fg:x="9148" fg:w="43"/><text x="99.4799%" y="1183.50"></text></g><g><title>ntdll`ZwOpenFile (30 samples, 0.33%)</title><rect x="99.3709%" y="1157" width="0.3254%" height="15" fill="rgb(211,95,25)" fg:x="9161" fg:w="30"/><text x="99.6209%" y="1167.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="99.6963%" y="1189" width="0.0108%" height="15" fill="rgb(251,182,27)" fg:x="9191" fg:w="1"/><text x="99.9463%" y="1199.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="99.6963%" y="1173" width="0.0108%" height="15" fill="rgb(238,24,4)" fg:x="9191" fg:w="1"/><text x="99.9463%" y="1183.50"></text></g><g><title>stelpatch-benchmark`std::path::PathBuf::_push (1 samples, 0.01%)</title><rect x="99.7071%" y="1189" width="0.0108%" height="15" fill="rgb(224,220,25)" fg:x="9192" fg:w="1"/><text x="99.9571%" y="1199.50"></text></g><g><title>stelpatch-benchmark`std::sys::windows::os_str::Buf::push_slice (1 samples, 0.01%)</title><rect x="99.7071%" y="1173" width="0.0108%" height="15" fill="rgb(239,133,26)" fg:x="9192" fg:w="1"/><text x="99.9571%" y="1183.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::impl$1::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="99.7071%" y="1157" width="0.0108%" height="15" fill="rgb(211,94,48)" fg:x="9192" fg:w="1"/><text x="99.9571%" y="1167.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="99.7071%" y="1141" width="0.0108%" height="15" fill="rgb(239,87,6)" fg:x="9192" fg:w="1"/><text x="99.9571%" y="1151.50"></text></g><g><title>ntdll`RtlReAllocateHeap (1 samples, 0.01%)</title><rect x="99.7071%" y="1125" width="0.0108%" height="15" fill="rgb(227,62,0)" fg:x="9192" fg:w="1"/><text x="99.9571%" y="1135.50"></text></g><g><title>ntdll`RtlReAllocateHeap (1 samples, 0.01%)</title><rect x="99.7071%" y="1109" width="0.0108%" height="15" fill="rgb(211,226,4)" fg:x="9192" fg:w="1"/><text x="99.9571%" y="1119.50"></text></g><g><title>ntdll`RtlReleaseSRWLockShared (1 samples, 0.01%)</title><rect x="99.7071%" y="1093" width="0.0108%" height="15" fill="rgb(253,38,52)" fg:x="9192" fg:w="1"/><text x="99.9571%" y="1103.50"></text></g><g><title>ntdll`RtlFreeHeap (1 samples, 0.01%)</title><rect x="99.7071%" y="1077" width="0.0108%" height="15" fill="rgb(229,126,40)" fg:x="9192" fg:w="1"/><text x="99.9571%" y="1087.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.01%)</title><rect x="99.7071%" y="1061" width="0.0108%" height="15" fill="rgb(229,165,44)" fg:x="9192" fg:w="1"/><text x="99.9571%" y="1071.50"></text></g><g><title>ntdll`RtlFreeHeap (1 samples, 0.01%)</title><rect x="99.7071%" y="1045" width="0.0108%" height="15" fill="rgb(247,95,47)" fg:x="9192" fg:w="1"/><text x="99.9571%" y="1055.50"></text></g><g><title>stelpatch-benchmark`walkdir::IntoIter::handle_entry (49 samples, 0.53%)</title><rect x="99.2190%" y="1237" width="0.5315%" height="15" fill="rgb(216,140,30)" fg:x="9147" fg:w="49"/><text x="99.4690%" y="1247.50"></text></g><g><title>stelpatch-benchmark`walkdir::IntoIter::push (49 samples, 0.53%)</title><rect x="99.2190%" y="1221" width="0.5315%" height="15" fill="rgb(246,214,8)" fg:x="9147" fg:w="49"/><text x="99.4690%" y="1231.50"></text></g><g><title>stelpatch-benchmark`std::sys::windows::fs::readdir (48 samples, 0.52%)</title><rect x="99.2299%" y="1205" width="0.5207%" height="15" fill="rgb(227,224,15)" fg:x="9148" fg:w="48"/><text x="99.4799%" y="1215.50"></text></g><g><title>stelpatch-benchmark`std::sys::windows::to_u16s::inner (3 samples, 0.03%)</title><rect x="99.7180%" y="1189" width="0.0325%" height="15" fill="rgb(233,175,4)" fg:x="9193" fg:w="3"/><text x="99.9680%" y="1199.50"></text></g><g><title>stelpatch-benchmark`alloc::vec::spec_extend::impl$0::spec_extend (2 samples, 0.02%)</title><rect x="99.7288%" y="1173" width="0.0217%" height="15" fill="rgb(221,66,45)" fg:x="9194" fg:w="2"/><text x="99.9788%" y="1183.50"></text></g><g><title>stelpatch-benchmark`walkdir::IntoIter::pop (14 samples, 0.15%)</title><rect x="99.7505%" y="1237" width="0.1519%" height="15" fill="rgb(221,178,18)" fg:x="9196" fg:w="14"/><text x="100.0005%" y="1247.50"></text></g><g><title>KERNELBASE`FindClose (14 samples, 0.15%)</title><rect x="99.7505%" y="1221" width="0.1519%" height="15" fill="rgb(213,81,29)" fg:x="9196" fg:w="14"/><text x="100.0005%" y="1231.50"></text></g><g><title>ntdll`NtClose (14 samples, 0.15%)</title><rect x="99.7505%" y="1205" width="0.1519%" height="15" fill="rgb(220,89,49)" fg:x="9196" fg:w="14"/><text x="100.0005%" y="1215.50"></text></g><g><title>stelpatch-benchmark`std::os::windows::ffi::impl$0::from_wide (1 samples, 0.01%)</title><rect x="99.9024%" y="1205" width="0.0108%" height="15" fill="rgb(227,60,33)" fg:x="9210" fg:w="1"/><text x="100.1524%" y="1215.50"></text></g><g><title>stelpatch-benchmark`std::sys_common::wtf8::Wtf8Buf::push_code_point_unchecked (1 samples, 0.01%)</title><rect x="99.9024%" y="1189" width="0.0108%" height="15" fill="rgb(205,113,12)" fg:x="9210" fg:w="1"/><text x="100.1524%" y="1199.50"></text></g><g><title>VCRUNTIME140`memcpy (1 samples, 0.01%)</title><rect x="99.9024%" y="1173" width="0.0108%" height="15" fill="rgb(211,32,1)" fg:x="9210" fg:w="1"/><text x="100.1524%" y="1183.50"></text></g><g><title>stelpatch-benchmark`std::path::Path::is_absolute (3 samples, 0.03%)</title><rect x="99.9241%" y="1189" width="0.0325%" height="15" fill="rgb(246,2,12)" fg:x="9212" fg:w="3"/><text x="100.1741%" y="1199.50"></text></g><g><title>stelpatch-benchmark`std::sys::windows::path::parse_prefix (2 samples, 0.02%)</title><rect x="99.9349%" y="1173" width="0.0217%" height="15" fill="rgb(243,37,27)" fg:x="9213" fg:w="2"/><text x="100.1849%" y="1183.50"></text></g><g><title>all (9,219 samples, 100%)</title><rect x="0.0000%" y="1429" width="100.0000%" height="15" fill="rgb(248,211,31)" fg:x="0" fg:w="9219"/><text x="0.2500%" y="1439.50"></text></g><g><title>ntdll`RtlUserThreadStart (9,184 samples, 99.62%)</title><rect x="0.3797%" y="1413" width="99.6203%" height="15" fill="rgb(242,146,47)" fg:x="35" fg:w="9184"/><text x="0.6297%" y="1423.50">ntdll`RtlUserThreadStart</text></g><g><title>KERNEL32`BaseThreadInitThunk (9,183 samples, 99.61%)</title><rect x="0.3905%" y="1397" width="99.6095%" height="15" fill="rgb(206,70,20)" fg:x="36" fg:w="9183"/><text x="0.6405%" y="1407.50">KERNEL32`BaseThreadInitThunk</text></g><g><title>stelpatch-benchmark`__scrt_common_main_seh (9,169 samples, 99.46%)</title><rect x="0.5424%" y="1381" width="99.4576%" height="15" fill="rgb(215,10,51)" fg:x="50" fg:w="9169"/><text x="0.7924%" y="1391.50">stelpatch-benchmark`__scrt_common_main_seh</text></g><g><title>stelpatch-benchmark`main (9,169 samples, 99.46%)</title><rect x="0.5424%" y="1365" width="99.4576%" height="15" fill="rgb(243,178,53)" fg:x="50" fg:w="9169"/><text x="0.7924%" y="1375.50">stelpatch-benchmark`main</text></g><g><title>stelpatch-benchmark`std::rt::lang_start_internal (9,169 samples, 99.46%)</title><rect x="0.5424%" y="1349" width="99.4576%" height="15" fill="rgb(233,221,20)" fg:x="50" fg:w="9169"/><text x="0.7924%" y="1359.50">stelpatch-benchmark`std::rt::lang_start_internal</text></g><g><title>stelpatch-benchmark`core::ops::function::FnOnce::call_once&lt;std::rt::lang_start::closure_env$0&lt;tuple$&lt;&gt; &gt;,tuple$ (9,168 samples, 99.45%)</title><rect x="0.5532%" y="1333" width="99.4468%" height="15" fill="rgb(218,95,35)" fg:x="51" fg:w="9168"/><text x="0.8032%" y="1343.50">stelpatch-benchmark`core::ops::function::FnOnce::call_once&lt;std::rt::lang_start::closure_env$0&lt;tuple$&lt;&gt; &gt;,tuple$</text></g><g><title>stelpatch-benchmark`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$ (9,168 samples, 99.45%)</title><rect x="0.5532%" y="1317" width="99.4468%" height="15" fill="rgb(229,13,5)" fg:x="51" fg:w="9168"/><text x="0.8032%" y="1327.50">stelpatch-benchmark`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$</text></g><g><title>stelpatch-benchmark`stelpatch_benchmark::main (9,168 samples, 99.45%)</title><rect x="0.5532%" y="1301" width="99.4468%" height="15" fill="rgb(252,164,30)" fg:x="51" fg:w="9168"/><text x="0.8032%" y="1311.50">stelpatch-benchmark`stelpatch_benchmark::main</text></g><g><title>stelpatch-benchmark`stelpatch::playset::base_game::BaseGame::load_as_mod_definition (8,598 samples, 93.26%)</title><rect x="6.7361%" y="1285" width="93.2639%" height="15" fill="rgb(232,68,36)" fg:x="621" fg:w="8598"/><text x="6.9861%" y="1295.50">stelpatch-benchmark`stelpatch::playset::base_game::BaseGame::load_as_mod_definition</text></g><g><title>stelpatch-benchmark`stelpatch::playset::game_mod::GameMod::load (8,589 samples, 93.17%)</title><rect x="6.8337%" y="1269" width="93.1663%" height="15" fill="rgb(219,59,54)" fg:x="630" fg:w="8589"/><text x="7.0837%" y="1279.50">stelpatch-benchmark`stelpatch::playset::game_mod::GameMod::load</text></g><g><title>stelpatch-benchmark`walkdir::impl$4::next (100 samples, 1.08%)</title><rect x="98.9153%" y="1253" width="1.0847%" height="15" fill="rgb(250,92,33)" fg:x="9119" fg:w="100"/><text x="99.1653%" y="1263.50"></text></g><g><title>stelpatch-benchmark`walkdir::dent::DirEntry::from_entry (9 samples, 0.10%)</title><rect x="99.9024%" y="1237" width="0.0976%" height="15" fill="rgb(229,162,54)" fg:x="9210" fg:w="9"/><text x="100.1524%" y="1247.50"></text></g><g><title>stelpatch-benchmark`std::fs::DirEntry::path (9 samples, 0.10%)</title><rect x="99.9024%" y="1221" width="0.0976%" height="15" fill="rgb(244,114,52)" fg:x="9210" fg:w="9"/><text x="100.1524%" y="1231.50"></text></g><g><title>stelpatch-benchmark`std::path::PathBuf::_push (8 samples, 0.09%)</title><rect x="99.9132%" y="1205" width="0.0868%" height="15" fill="rgb(212,211,43)" fg:x="9211" fg:w="8"/><text x="100.1632%" y="1215.50"></text></g><g><title>stelpatch-benchmark`std::sys::windows::os_str::Buf::push_slice (4 samples, 0.04%)</title><rect x="99.9566%" y="1189" width="0.0434%" height="15" fill="rgb(226,147,8)" fg:x="9215" fg:w="4"/><text x="100.2066%" y="1199.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::impl$1::reserve::do_reserve_and_handle (2 samples, 0.02%)</title><rect x="99.9783%" y="1173" width="0.0217%" height="15" fill="rgb(226,23,13)" fg:x="9217" fg:w="2"/><text x="100.2283%" y="1183.50"></text></g><g><title>stelpatch-benchmark`alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="99.9783%" y="1157" width="0.0217%" height="15" fill="rgb(240,63,4)" fg:x="9217" fg:w="2"/><text x="100.2283%" y="1167.50"></text></g><g><title>ntdll`RtlReAllocateHeap (2 samples, 0.02%)</title><rect x="99.9783%" y="1141" width="0.0217%" height="15" fill="rgb(221,1,32)" fg:x="9217" fg:w="2"/><text x="100.2283%" y="1151.50"></text></g><g><title>ntdll`RtlReAllocateHeap (2 samples, 0.02%)</title><rect x="99.9783%" y="1125" width="0.0217%" height="15" fill="rgb(242,117,10)" fg:x="9217" fg:w="2"/><text x="100.2283%" y="1135.50"></text></g><g><title>ntdll`RtlReleaseSRWLockShared (2 samples, 0.02%)</title><rect x="99.9783%" y="1109" width="0.0217%" height="15" fill="rgb(249,172,44)" fg:x="9217" fg:w="2"/><text x="100.2283%" y="1119.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.02%)</title><rect x="99.9783%" y="1093" width="0.0217%" height="15" fill="rgb(244,46,45)" fg:x="9217" fg:w="2"/><text x="100.2283%" y="1103.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="99.9892%" y="1077" width="0.0108%" height="15" fill="rgb(206,43,17)" fg:x="9218" fg:w="1"/><text x="100.2392%" y="1087.50"></text></g></svg></svg>